# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Pkg EdFi.Database.Security

on:
  pull_request:
    branches: [main, 'ODS-*']
    paths:
      - '**.sql'
  push:
    branches:
      - main
    paths:
      - '**.sql'
  workflow_dispatch:

env:
  INFORMATIONAL_VERSION: "7.0"
  BUILD_INCREMENTER: "40"
  AZURE_ARTIFACT_URL: "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json"
  AZURE_ARTIFACT_NUGET_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS : '{"endpointCredentials": [{"endpoint": "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'
  CONFIGURATION: "Release"
  HEAD_REF:  ${{ GITHUB.HEAD_REF }}
  REF_NAME:  ${{ GITHUB.REF_NAME }}
  REPOSITORY_DISPATCH_BRANCH: ${{ github.event.client_payload.branch }}
  REPOSITORY_OWNER: ${{ GITHUB.REPOSITORY_OWNER }}

jobs:

  FindStandardAndExtensionVersions:
     runs-on: ubuntu-latest
     outputs:
       StandardVersions: ${{ steps.Set_StandardVersions.outputs.StandardVersions }}
       ExtensionVersions: ${{ steps.Set_ExtensionVersions.outputs.ExtensionVersions }}
     steps:
     - name: Checkout Ed-Fi-ODS
       uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
       with:
           repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
           path: Ed-Fi-ODS/
     - name: Checkout Ed-Fi-Extensions
       uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
       with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-Extensions
          path: Ed-Fi-Extensions/
     - name: Is pull request branch exists in Ed-Fi-Extensions
       working-directory: ./Ed-Fi-ODS/
       shell: pwsh
       run: |
         .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-Extensions"
     - name: Set StandardVersions
       id: Set_StandardVersions
       working-directory: ./Ed-Fi-ODS/
       run: |
         $output = .\build.githubactions.ps1 StandardVersions -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Application/EdFi.Ods.Standard/EdFi.Ods.Standard.csproj"
         echo "StandardVersions=$output" >> $env:GITHUB_OUTPUT
         Write-host "StandardVersions is  $output"
       shell: pwsh
     - name: Set ExtensionVersions
       id: Set_ExtensionVersions
       working-directory: ./Ed-Fi-Extensions/
       run: |
         $output = .\build.githubactions.ps1 ExtensionVersions -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-Extensions/Extensions/EdFi.Ods.Extensions.TPDM/EdFi.Ods.Extensions.TPDM.csproj"
         echo "ExtensionVersions=$output" >> $env:GITHUB_OUTPUT
         Write-host "ExtensionVersions is  $output"
       shell: pwsh

  build:
    if: ${{ always() }}
    needs: FindStandardAndExtensionVersions
    runs-on: windows-latest
    strategy:
      matrix:
        StandardVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.StandardVersions) }}
        ExtensionVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.ExtensionVersions) }}
    name: build (${{ matrix.StandardVersion }}, ${{ matrix.ExtensionVersion }})
    steps:
    - name: Check for Azure token
      if: ${{ env.REPOSITORY_OWNER == 'Ed-Fi-Alliance-OSS' && env.AZURE_ARTIFACT_NUGET_KEY == '' }}
      run: | 
        echo "::error::Missing Azure Token"
        exit 1 
    - name: Setup .NET
      uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # v2.1.0
      with:
        dotnet-version: 6.0.x
    - name: Support longpaths
      run: git config --system core.longpaths true
    - name: Checkout Ed-Fi-ODS
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
          path: Ed-Fi-ODS/
    - name: Is pull request branch exists in Ed-Fi-ODS
      working-directory: ./Ed-Fi-ODS/
      shell: pwsh
      run: |
           .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "."
    - name: Checkout Ed-Fi-ODS-Implementation
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/
    - name: Is pull request branch exists in Ed-Fi-ODS-Implementation
      working-directory: ./Ed-Fi-ODS/
      shell: pwsh
      run: |
        ./build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-ODS-Implementation"
    - name: Install sql-server-2019, sqlpackage, and postgres13
      shell: pwsh
      run: |
          choco install sql-server-2019  -y --params "'/IGNOREPENDINGREBOOT /IACCEPTSQLSERVERLICENSETERMS /Q /ACTION=install /INSTANCEID=MSSQLSERVER /INSTANCENAME=MSSQLSERVER /TCPENABLED=1 /UPDATEENABLED=FALSE /FEATURES=SQL,Tools'" --execution-timeout=$installTimeout
          choco install sqlpackage
          choco install postgresql13 --params '/Password:postgres'
          $confPath = "C:\Program Files\PostgreSQL\13\data\pg_hba.conf"
          (Get-Content $confPath).Replace("scram-sha-256","trust") | Set-Content $confPath
          Restart-Service postgresql-x64-13
    - name: Create Security Database 
      shell: pwsh
      run: |
          $ErrorActionPreference = 'Stop'
          $PSVersionTable
          . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/activities/build/create-database-package.ps1 -Output NugetPackages -DatabaseType Security -ExtensionVersion ${{ matrix.ExtensionVersion }} -StandardVersion ${{ matrix.StandardVersion }} -SQLPackage "C:\ProgramData\chocolatey\lib\sqlpackage\tools"
    - name: Use NuGet
      uses: nuget/setup-nuget@b2bc17b761a1d88cab755a776c7922eb26eefbfa # v1
      with:
        nuget-version: '5.x'
    - name: Create NuGet package
      shell: pwsh
      run: |
        [int]$BuildCounter =  "${{ github.run_number }}"
        [int]$BuildIncrementer = "${{ env.BUILD_INCREMENTER }}"
        [int]$newRevision =  $BuildCounter + $BuildIncrementer
        [string]$version = "${{env.INFORMATIONAL_VERSION}}"+ "." + $newRevision.ToString()
        $packageOutput = "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/NugetPackages"
        $SecurityNuspecFilePath = "$env:GITHUB_WORKSPACE/NugetPackages/EdFi.Database.Security.Standard.${{ matrix.StandardVersion }}.nuspec"
        $SecurityBACPACNuspecFilePath = "$env:GITHUB_WORKSPACE/NugetPackages/EdFi.Database.Security.BACPAC.Standard.${{ matrix.StandardVersion }}.nuspec"
        $SecurityPostgreSQLNuspecFilePath = "$env:GITHUB_WORKSPACE/NugetPackages/EdFi.Database.Security.PostgreSQL.Standard.${{ matrix.StandardVersion }}.nuspec"
        nuget pack $SecurityNuspecFilePath -OutputDirectory $packageOutput -Version $version -Properties "configuration=release" -Properties "authors=Ed-Fi Alliance" -Properties "owners=Ed-Fi Alliance" -Properties "copyright=Copyright © $(date +'%Y') Ed-Fi Alliance, LLC and Contributors" -NoPackageAnalysis -NoDefaultExcludes
        nuget pack $SecurityBACPACNuspecFilePath -OutputDirectory $packageOutput -Version $version -Properties "configuration=release" -Properties "authors=Ed-Fi Alliance" -Properties "owners=Ed-Fi Alliance" -Properties "copyright=Copyright © $(date +'%Y') Ed-Fi Alliance, LLC and Contributors" -NoPackageAnalysis -NoDefaultExcludes
        nuget pack $SecurityPostgreSQLNuspecFilePath -OutputDirectory $packageOutput -Version $version -Properties "configuration=release" -Properties "authors=Ed-Fi Alliance" -Properties "owners=Ed-Fi Alliance" -Properties "copyright=Copyright © $(date +'%Y') Ed-Fi Alliance, LLC and Contributors" -NoPackageAnalysis -NoDefaultExcludes
    - name: Install-credential-handler
      run: iex "& { $(irm https://aka.ms/install-artifacts-credprovider.ps1) } -AddNetfx"
      shell: pwsh
    - name: Publish Nuget package
      working-directory: ./Ed-Fi-ODS/
      if: ${{ env.AZURE_ARTIFACT_NUGET_KEY != '' }}
      run: |
        ./build.githubactions.ps1 publish -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuGetApiKey ${{ env.AZURE_ARTIFACT_NUGET_KEY }} -EdFiNuGetFeed ${{env.AZURE_ARTIFACT_URL}} -PackageName  "EdFi.Database.Security.Standard.${{ matrix.StandardVersion }}"
        ./build.githubactions.ps1 publish -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuGetApiKey ${{ env.AZURE_ARTIFACT_NUGET_KEY }} -EdFiNuGetFeed ${{env.AZURE_ARTIFACT_URL}} -PackageName  "EdFi.Database.Security.BACPAC.Standard.${{ matrix.StandardVersion }}"
        ./build.githubactions.ps1 publish -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuGetApiKey ${{ env.AZURE_ARTIFACT_NUGET_KEY }} -EdFiNuGetFeed ${{env.AZURE_ARTIFACT_URL}} -PackageName  "EdFi.Database.Security.PostgreSQL.Standard.${{ matrix.StandardVersion }}"
      shell: pwsh
    - name: Upload EdFi.Database.Security Artifacts
      if: success()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: NugetPackages.Artifacts
        path: ${{ github.workspace }}/Ed-Fi-ODS/NugetPackages/*.nupkg