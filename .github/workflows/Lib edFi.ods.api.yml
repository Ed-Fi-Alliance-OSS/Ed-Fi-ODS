# When to Use : 
   # 1.At the time of  every major/minor version new development must run to get new major/minor version updated in Azure Artifacts 
   # 2.If any new code changes in Ed-Fi-ODS/Application/EdFi.Ods.Api/EdFi.Ods.Api.csproj project which interacts with ODS/API Solution.
   # 3.If any .NET new major/minor version upgrade or Nuget package version upgrade happens in Ed-Fi-ODS/Application/EdFi.Ods.Api/EdFi.Ods.Api.csproj  Project.

name: Lib EdFi.Ods.Api

on:
  pull_request:
    branches: [main, 'b-v*-patch*','feature-*']
  workflow_dispatch:

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  INFORMATIONAL_VERSION: "7.4"
  BUILD_INCREMENTER: "-844"
  CONFIGURATION: "Release"
  AZURE_ARTIFACT_URL: "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json"
  AZURE_ARTIFACT_NUGET_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS : '{"endpointCredentials": [{"endpoint": "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'
  REPOSITORY_OWNER: ${{ GITHUB.REPOSITORY_OWNER }}

jobs:
  build:

    runs-on: ubuntu-24.04

    steps:
    - name: Check for Azure token
      if: ${{ env.REPOSITORY_OWNER == 'Ed-Fi-Alliance-OSS' && env.AZURE_ARTIFACT_NUGET_KEY == '' }}
      run: | 
        echo "::error::Missing Azure Token"
        exit 1 
    - name: Checkout Ed-Fi-ODS
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
    # This step shall be removed in ODS-6572
    - name: Install Mono and Nuget
      working-directory: ./.github/workflows
      run: sudo ./install-mono.sh
    - name: Cache Nuget packages       
      uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 #v4.0.1
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj*', '**/configuration.packages.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: update BUILD_INCREMENTER 
      run: |      
            $newRevision = ([int]${{ github.run_number }}) + ([int]${{env.BUILD_INCREMENTER}})
            if ($newRevision -lt 0) {
                $newRevision = 1
                echo "BUILD_INCREMENTER=$newRevision">> $env:GITHUB_ENV
            }
      shell: pwsh
    - name: Restore NuGet packages
      run: |
        .\build.githubactions.ps1 restore -Solution "Application/EdFi.Ods.Api/EdFi.Ods.Api.sln"
      shell: pwsh
    - name: build
      run: |
        .\build.githubactions.ps1 build -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION}} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "Application/EdFi.Ods.Api/EdFi.Ods.Api.sln" -ProjectFile "Application/EdFi.Ods.Api/EdFi.Ods.Api.csproj"
      shell: pwsh
    - name: Run Unit tests
      run: |
        .\build.githubactions.ps1 test -Configuration ${{ env.CONFIGURATION }} -Solution "Application/EdFi.Ods.Api/EdFi.Ods.Api.sln" -ProjectFile "Application/EdFi.Ods.Api/EdFi.Ods.Api.csproj"
      shell: pwsh
    - name: pack
      run: |
        .\build.githubactions.ps1 pack -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "Application/EdFi.Ods.Api/EdFi.Ods.Api.sln" -ProjectFile "Application/EdFi.Ods.Api/EdFi.Ods.Api.csproj" -PackageName  "EdFi.Suite3.Ods.Api"
      shell: pwsh
    - name: Install-credential-handler
      if: ${{ env.AZURE_ARTIFACT_NUGET_KEY != '' &&  github.event_name == 'workflow_dispatch' }}
      run: |
        .\build.githubactions.ps1 InstallCredentialHandler
      shell: pwsh
    - name: publish
      if: ${{ env.AZURE_ARTIFACT_NUGET_KEY != '' &&  github.event_name == 'workflow_dispatch' }}
      run: |
        .\build.githubactions.ps1 publish -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuGetApiKey ${{ env.AZURE_ARTIFACT_NUGET_KEY }} -EdFiNuGetFeed ${{env.AZURE_ARTIFACT_URL}} -Solution "Application/EdFi.Ods.Api/EdFi.Ods.Api.sln" -ProjectFile "Application/EdFi.Ods.Api/EdFi.Ods.Api.csproj" -PackageName  "EdFi.Suite3.Ods.Api"
      shell: pwsh
    - name: Upload EdFi.Ods.Api Artifacts
      if: success()
      uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5
      with:
        name: NugetPackages.Artifacts
        path: ${{ github.workspace }}/NugetPackages/*.*
