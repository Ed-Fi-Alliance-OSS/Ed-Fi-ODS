# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Packages - EdFi.Ods.Minimal.Template.TPDM.PostgreSQL

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      distinct_id:
        description: 'distinct ID for Rebuild Database Templates workflow'
        required: false
        default: 'distinct_id'
  repository_dispatch:
    types: [triggered-from-implementation-repo ,triggered-from-datastandard-repo ,triggered-from-tpdmartifacts-repo]

env:
  EDFI_STANDARD_REFERENCE: "v4.0.0"
  INFORMATIONAL_VERSION: "7.0"
  BUILD_INCREMENTER: "1"
  AZURE_ARTIFACT_URL: "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json"
  AZURE_ARTIFACT_NUGET_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS : '{"endpointCredentials": [{"endpoint": "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'
  CONFIGURATION: "Release"
  REPOSITORY_DISPATCH_BRANCH: ${{ github.event.client_payload.branch }}
  HEAD_REF:  ${{ GITHUB.HEAD_REF }}
  REF_NAME:  ${{ GITHUB.REF_NAME }}

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
      run:  echo "${{ github.event.inputs.distinct_id }}"
    - name: Setup .NET
      uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # 2.1.0
      with:
        dotnet-version: 6.0.x
    - name: Support longpaths
      run: git config --system core.longpaths true
    - name: Checkout Ed-Fi-ODS
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
          path: Ed-Fi-ODS/
    - name: Checkout Ed-Fi-ODS-Implementation
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/
    - name: Checkout Ed-Fi-ODS-Standard
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-Standard
          path: Ed-Fi-Standard/
          ref: ${{ env.EDFI_STANDARD_REFERENCE }}          
    - name: Is pull request branch exists in Ed-Fi-Standard
      working-directory: ./Ed-Fi-ODS/
      shell: powershell
      run: |
        .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-Standard"          
    - name: Checkout Ed-Fi-TPDM-Artifacts
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-TPDM-Artifacts
          path: Ed-Fi-TPDM-Artifacts/          
    - name: Is pull request branch exists in Ed-Fi-TPDM-Artifacts
      working-directory: ./Ed-Fi-ODS/
      shell: powershell
      run: |
        .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-TPDM-Artifacts"                    
    - name: Is pull request branch exists in Ed-Fi-ODS-Implementation
      working-directory: ./Ed-Fi-ODS/
      shell: powershell
      run: |
        .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-ODS-Implementation"
    - name: Install Postgres13
      shell: pwsh
      run: |
          choco install postgresql13 --params '/Password:postgres'
          $confPath = "C:\Program Files\PostgreSQL\13\data\pg_hba.conf"
          (Get-Content $confPath).Replace("scram-sha-256","trust") | Set-Content $confPath
          Restart-Service postgresql-x64-13
    - name: Initialize-DevelopmentEnvironment
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        [Environment]::SetEnvironmentVariable('msbuild_buildConfiguration', '${{ env.CONFIGURATION }}')

        $PSVersionTable
          . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1

        Initialize-DevelopmentEnvironment -UsePlugins -NoDeploy -Engine PostgreSQL
      shell: powershell
    - name: Create Database Template (no extensions)
      working-directory: ./
      run: |
        $ErrorActionPreference = 'Stop'
        [Environment]::SetEnvironmentVariable('msbuild_buildConfiguration', '${{ env.CONFIGURATION }}')
        Import-Module -Force -Scope Global "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/DatabaseTemplate/Modules/create-tpdm-minimal-template.psm1"
        Initialize-TPDMMinimalTemplate -Engine PostgreSQL
      shell: powershell
    - name: pack
      working-directory: ./Ed-Fi-ODS/
      run: |
        .\build.githubactions.ps1 pack -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuspecFilePath "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/DatabaseTemplate/Database/EdFi.Ods.Minimal.Template.TPDM.Core.PostgreSQL.nuspec" -PackageName "EdFi.Suite3.Ods.Minimal.Template.TPDM.Core.PostgreSQL"
      shell: powershell
    - name: Install-credential-handler
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
         Import-Module -Force -Scope Global "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/modules/utility/cross-platform.psm1"
         if (Get-IsWindows -and -not Get-InstalledModule | Where-Object -Property Name -eq "7Zip4Powershell") {
              Install-Module -Force -Scope CurrentUser -Name 7Zip4Powershell
         }

          # using WebClient is faster then Invoke-WebRequest but shows no progress
          $sourceUrl = ' https://github.com/microsoft/artifacts-credprovider/releases/download/v1.0.0/Microsoft.NuGet.CredentialProvider.zip'
          $fileName = 'Microsoft.NuGet.CredentialProvider.zip'
          Write-host "Downloading file from $sourceUrl..."
          $webClient = New-Object System.Net.WebClient
          $webClient.DownloadFile($sourceUrl, "$env:temp/$fileName")

          Write-host "Download complete." 

          if (-not (Test-Path "$env:temp/$fileName")) {
              Write-Warning "Microsoft.NuGet.CredentialProvider file '$fileName' not found."
              exit 0
          }

          $packageFolder = "$env:temp/Microsoft.NuGet.CredentialProvider/"

          if ($fileName.EndsWith('.zip')) {
              Write-host "Extracting $fileName..."
              $zipFilePath = "$env:temp/$fileName"
              if (Test-Path $zipFilePath) { Expand-Archive -Force -Path $zipFilePath -DestinationPath $packageFolder }
              Copy-Item -Path $packageFolder\* -Destination "$env:UserProfile/.nuget/" -Recurse -Force
              Write-Host "Extracted to: $env:UserProfile\.nuget\plugins\" -ForegroundColor Green
          }
      shell: pwsh
    - name: publish 
      working-directory: ./Ed-Fi-ODS/
      run: |
        .\build.githubactions.ps1 publish -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuGetApiKey ${{ env.AZURE_ARTIFACT_NUGET_KEY }} -EdFiNuGetFeed ${{env.AZURE_ARTIFACT_URL}} -PackageName  "EdFi.Suite3.Ods.Minimal.Template.TPDM.Core.PostgreSQL"
      shell: powershell
    - name: Upload EdFi.Ods.Minimal.Template.TPDM.PostgreSQL Artifacts
      if: success() || failure()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: NugetPackages.Artifacts
        path: |
         ${{ github.workspace }}/Ed-Fi-ODS/NugetPackages/EdFi.Suite3.Ods.Minimal.Template.TPDM.Core.PostgreSQL*.nupkg
         ${{ github.workspace }}/Ed-Fi-ODS/Utilities/DataLoading/EdFi.BulkLoadClient.Console/bin/**/logfile*.*
         ${{ github.workspace }}/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.Api.IntegrationTestHarness/bin/**/TestHarnessLog*.*