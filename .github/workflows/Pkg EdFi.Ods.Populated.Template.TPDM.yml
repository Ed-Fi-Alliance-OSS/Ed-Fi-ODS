# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Pkg EdFi.Ods.Populated.Template.TPDM

on:
  push:
    branches: [main, 'b-v*-patch*','feature-*']
  workflow_dispatch:
    inputs:
      distinct_id:
        description: 'distinct ID for Rebuild Database Templates workflow'
        required: false
        default: 'distinct_id'

permissions: read-all

env:
  INFORMATIONAL_VERSION: "7.4"
  BUILD_INCREMENTER: "-999"
  AZURE_ARTIFACT_URL: "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json"
  AZURE_ARTIFACT_NUGET_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS : '{"endpointCredentials": [{"endpoint": "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'
  CONFIGURATION: "Release"
  REPOSITORY_DISPATCH_BRANCH: ${{ github.event.client_payload.branch }}
  HEAD_REF:  ${{ GITHUB.HEAD_REF }}
  REF_NAME:  ${{ GITHUB.REF_NAME }}
  REPOSITORY_OWNER: ${{ GITHUB.REPOSITORY_OWNER }}
  DB_PASS: temporaryDbP@ssw0rd!

jobs:

  FindStandardAndExtensionVersions:
    uses: ./.github/workflows/Find Standard and Extension Versions.yml
    with:
      calling_branch: ${{ github.head_ref || github.ref_name }}

  build:
    if: ${{ always() }}
    needs: FindStandardAndExtensionVersions
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        volumes:
          - /MssqlBackupVolume:/DatabaseBackups
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{ env.DB_PASS }}
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3
          --name mssql
          --user root
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        StandardVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.StandardVersions) }}
        ExtensionVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.ExtensionVersions) }}
    name: build (Standard ${{ matrix.StandardVersion }} Extension ${{ matrix.ExtensionVersion }})

    steps:
    - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
      run:  echo "${{ github.event.inputs.distinct_id }}"
    - name: Check for Azure token
      if: ${{ env.REPOSITORY_OWNER == 'Ed-Fi-Alliance-OSS' && env.AZURE_ARTIFACT_NUGET_KEY == '' }}
      run: | 
        echo "::error::Missing Azure Token"
        exit 1 
    - name: Set permissions for database server container backup directory
      run: docker exec --user root mssql chmod 777 /DatabaseBackups
      shell: pwsh
    - name: Checkout Ed-Fi-ODS
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
          path: Ed-Fi-ODS/
    - name: Checkout Ed-Fi-ODS-Implementation
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/
    - name: Set EdFi-Standard Reference
      working-directory: ./Ed-Fi-ODS/
      run: |
        $standardTag = .\build.githubactions.ps1 StandardTag -standardVersion ${{ matrix.StandardVersion }} -ProjectFile "./Application/EdFi.Ods.Standard/EdFi.Ods.Standard.csproj"
        echo "EDFI_STANDARD_REFERENCE=$standardTag">> $env:GITHUB_ENV
        Write-host "Ed-Fi-Standard Tag is  $standardTag"
      shell: pwsh
    - name: Checkout Ed-Fi-Data-Standard
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-Data-Standard
          path: Ed-Fi-Data-Standard/
          ref: ${{ env.EDFI_STANDARD_REFERENCE }}
    - name: Set EdFi-Tpdm Reference
      working-directory: ./Ed-Fi-ODS/
      run: |
        $tpdmTag = .\build.githubactions.ps1 TpdmTag -standardVersion ${{ matrix.StandardVersion }} -ProjectFile "./Application/EdFi.Ods.Standard/EdFi.Ods.Standard.csproj"
        echo "EDFI_TPDM_REFERENCE=$tpdmTag">> $env:GITHUB_ENV
        Write-host "EdFi-Tpdm Tag is  $tpdmTag"
      shell: pwsh
    - name: Checkout Ed-Fi-TPDM-Artifacts
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-TPDM-Artifacts
          path: Ed-Fi-TPDM-Artifacts/
          ref: ${{ env.EDFI_TPDM_REFERENCE }}
    - name: Is pull request branch exists in Ed-Fi-ODS-Implementation
      working-directory: ./Ed-Fi-ODS/
      shell: pwsh
      run: |
        .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-ODS-Implementation"
    - name: update BUILD_INCREMENTER 
      run: |      
            $newRevision = ([int]${{ github.run_number }}) + ([int]${{env.BUILD_INCREMENTER}})
            if ($newRevision -lt 0) {
                $newRevision = 1
                echo "BUILD_INCREMENTER=$newRevision">> $env:GITHUB_ENV
            }
      shell: pwsh
    - name: Cache Nuget packages
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 #v4.2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj*', '**/configuration.packages.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Restore NuGet packages
      working-directory: ./Ed-Fi-ODS/
      run: |
        .\build.githubactions.ps1 restore -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Application/Ed-Fi-Ods.sln"
      shell: pwsh
    - name: Initialize-DevelopmentEnvironment
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        [Environment]::SetEnvironmentVariable('msbuild_buildConfiguration', '${{ env.CONFIGURATION }}') 
        $PSVersionTable
        . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
        Initialize-DevelopmentEnvironment -UsePlugins -NoDeploy  -NoRestore  -ExtensionVersion ${{ matrix.ExtensionVersion }} -StandardVersion ${{ matrix.StandardVersion }} -MssqlSaPassword ${{ env.DB_PASS }}
      shell: pwsh
    - name: Create Database Template (no extensions)
      working-directory: ./
      run: |
        $ErrorActionPreference = 'Stop'
        [Environment]::SetEnvironmentVariable('msbuild_buildConfiguration', '${{ env.CONFIGURATION }}')        
        Import-Module -Force -Scope Global "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/DatabaseTemplate/Modules/create-tpdm-template.psm1" 
        Initialize-TPDMTemplate -extensionVersion ${{ matrix.ExtensionVersion }} -StandardVersion ${{ matrix.StandardVersion }} -LocalDbBackupDirectory /MssqlBackupVolume -DbServerBackupDirectory /DatabaseBackups
      shell: pwsh
    - name: Set permissions for database backup file
      working-directory: ./
      run: sudo chmod -R 777 Ed-Fi-ODS-Implementation/DatabaseTemplate/Database/
      shell: pwsh
    - name: pack
      working-directory: ./Ed-Fi-ODS/
      run: |
        .\build.githubactions.ps1 pack -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuspecFilePath "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/DatabaseTemplate/Database/EdFi.Ods.Populated.Template.TPDM.Core.${{ matrix.ExtensionVersion }}.Standard.${{ matrix.StandardVersion }}.nuspec" -PackageName  "EdFi.Suite3.Ods.Populated.Template.TPDM.Core.${{ matrix.ExtensionVersion }}.Standard.${{ matrix.StandardVersion }}"
      shell: pwsh
    - name: Install-credential-handler
      if: ${{ env.AZURE_ARTIFACT_NUGET_KEY != '' &&  github.event_name == 'workflow_dispatch' }}
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        .\build.githubactions.ps1 InstallCredentialHandler
      shell: pwsh
    - name: publish
      if: ${{ env.AZURE_ARTIFACT_NUGET_KEY != '' &&  github.event_name == 'workflow_dispatch' }}
      working-directory: ./Ed-Fi-ODS/
      run: |
        .\build.githubactions.ps1 publish -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuGetApiKey ${{ env.AZURE_ARTIFACT_NUGET_KEY }} -EdFiNuGetFeed ${{env.AZURE_ARTIFACT_URL}} -PackageName  "EdFi.Suite3.Ods.Populated.Template.TPDM.Core.${{ matrix.ExtensionVersion }}.Standard.${{ matrix.StandardVersion }}"
      shell: pwsh      
    - name: Upload EdFi.Ods.Populated.Template.TPDM.Core Artifacts
      if: success() || failure()
      uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5
      with:
        name: EdFi.Ods.Populated.Template.TPDM.Core.Artifacts-${{ matrix.StandardVersion }}
        path: |
         ${{ github.workspace }}/Ed-Fi-ODS/NugetPackages/EdFi.Suite3.Ods.Populated.Template.TPDM.Core*.nupkg
    - name: Move Log Files
      if: success() || failure()    
      run: |
        $bulkLoadClientSourcePath = "${{ github.workspace }}/Ed-Fi-ODS/Utilities/DataLoading/EdFi.BulkLoadClient.Console/bin/${{ env.CONFIGURATION }}/net8.0/logfile.txt"
        $testHarnessSourcePath = "${{ github.workspace }}/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.Api.IntegrationTestHarness/bin/${{ env.CONFIGURATION }}/net8.0/TestHarnessLog.log"
        $testHarnessRequestResponseDetailsSourcePath = "${{ github.workspace }}/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.Api.IntegrationTestHarness/bin/${{ env.CONFIGURATION }}/net8.0/TestHarnessRequestResponseDetailsLog.log"        
        $destinationPath = "${{ github.workspace }}/CreateDatabaseTemplateLogs/"
        # Create the destination folder if it doesn't exist
        if (!(Test-Path -Path $destinationPath)) {
            New-Item -ItemType Directory -Path $destinationPath -Force
        }
        # Move the files
        Move-Item -Path $bulkLoadClientSourcePath -Destination $destinationPath -Force
        Move-Item -Path $testHarnessSourcePath -Destination $destinationPath -Force
        Move-Item -Path $testHarnessRequestResponseDetailsSourcePath -Destination $destinationPath -Force           
      shell: pwsh        
    - name: Upload Create Database Template Logs
      if: success() || failure()
      uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5
      with:
        name: Create Database Template Logs-${{ matrix.StandardVersion }}
        path: |
          ${{ github.workspace }}/CreateDatabaseTemplateLogs/*.*          
