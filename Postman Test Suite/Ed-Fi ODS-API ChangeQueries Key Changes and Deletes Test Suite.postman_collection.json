{
	"info": {
		"_postman_id": "48a6add9-5c14-4a59-a19e-32eb4a177ba6",
		"name": "Ed-Fi ODS/API ChangeQueries Key Changes and Deletes Test Suite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1713280"
	},
	"item": [
		{
			"name": "Deletes",
			"item": [
				{
					"name": "Basic Resource",
					"item": [
						{
							"name": "Snapshots",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/changequeries/v1/snapshots",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changequeries",
										"v1",
										"snapshots"
									]
								}
							},
							"response": []
						},
						{
							"name": "* Get AcademicWeeks",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"//pm.environment.set(`known:${scenarioId}:staffUniqueId`, items[0].staffReference.staffUniqueId);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/academicWeeks",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"academicWeeks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicWeek",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':academicWeek:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"contextSchoolYearTypeReference\": {\r\n    \"schoolYear\": 2021\r\n  },\r\n  \"weekIdentifier\": \"WK1\",\r\n  \"schoolReference\": {\r\n    \"schoolId\": 255901001\r\n  },\r\n  \"beginDate\": \"2021-07-21\",\r\n  \"endDate\": \"2021-07-21\",\r\n  \"totalInstructionalDays\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/academicWeeks",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"academicWeeks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete AcademicWeek",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/academicWeeks/{{known:{{scenarioId}}:academicWeek:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"academicWeeks",
										"{{known:{{scenarioId}}:academicWeek:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted AcademicWeeks",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Deleted item id matches item just deleted\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:academicWeek:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.keyValues).length).equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"WeekIdentifer value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.weekIdentifier).equal(\"WK1\");\r",
											"});\r",
											"\r",
											"pm.test(\"SchoolId value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.schoolId).equal(255901001);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/academicWeeks/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"academicWeeks",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted AcademicWeeks Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 1\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/academicWeeks/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"academicWeeks",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Assessment (Namespace Based)",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "* Get Assessments",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"\r",
											"if (items.length > 0) {\r",
											"    pm.environment.set(`known:${scenarioId}:assessment:id`, items[0].id);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/assessments?assessmentTitle=To Be Deleted",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"assessments"
									],
									"query": [
										{
											"key": "assessmentTitle",
											"value": "To Be Deleted"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Assessment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const {Property} = require('postman-collection');\r",
											"\r",
											"const randomUuid = Property.replaceSubstitutions(\"{{$randomUUID}}\");\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':assessment:assessmentIdentifier', randomUuid); "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"    \r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':assessment:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"assessmentIdentifier\": \"{{known:{{scenarioId}}:assessment:assessmentIdentifier}}\",\r\n    \"namespace\": \"uri://ed-fi.org/Assessment/Assessment.xml\",\r\n    \"assessmentTitle\": \"To Be Deleted\",\r\n    \"academicSubjects\": [\r\n        {\r\n            \"academicSubjectDescriptor\": \"uri://ed-fi.org/AcademicSubjectDescriptor#English Language Arts\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/assessments",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"assessments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Assessment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/assessments/{{known:{{scenarioId}}:assessment:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"assessments",
										"{{known:{{scenarioId}}:assessment:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Assessments",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Deleted item id matches item just deleted\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:assessment:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.keyValues).length).equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"AssessmentIdentifier value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.assessmentIdentifier).equal(pm.environment.get(`known:${scenarioId}:assessment:assessmentIdentifier`));\r",
											"});\r",
											"\r",
											"pm.test(\"Namespace value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.namespace).equal(\"uri://ed-fi.org/Assessment/Assessment.xml\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/assessments/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"assessments",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "123456",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Assessments Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 1\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/assessments/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"assessments",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "EducationContent (Non-Key Namespace Based)",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "* Get EducationContents",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"\r",
											"if (items.length > 0) {\r",
											"    pm.environment.set(`known:${scenarioId}:assessment:id`, items[0].id);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/educationContents",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"educationContents"
									],
									"query": [
										{
											"key": "shortDescription",
											"value": "To Be Deleted",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create EducationContent (Ed-Fi)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const {Property} = require('postman-collection');\r",
											"\r",
											"const randomUuid = Property.replaceSubstitutions(\"{{$randomUUID}}\");\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':educationContent:contentIdentifier', randomUuid); \r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"    \r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':educationContent:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"contentIdentifier\": \"{{known:{{scenarioId}}:educationContent:contentIdentifier}}\",\r\n  \"contentClassDescriptor\": \"uri://ed-fi.org/ContentClassDescriptor#Education Research\",\r\n  \"namespace\": \"uri://ed-fi.org\",\r\n  \"publicationYear\": 1999,\r\n  \"publisher\": \"To Be Deleted Press\",\r\n  \"shortDescription\": \"Doing stuff.\",\r\n  \"appropriateGradeLevels\": [],\r\n  \"appropriateSexes\": [],\r\n  \"authors\": [\r\n    {\r\n      \"author\": \"Doe, John\"\r\n    },\r\n    {\r\n      \"author\": \"Doe, Jane\"\r\n    }\r\n  ],\r\n  \"derivativeSourceEducationContents\": [],\r\n  \"derivativeSourceLearningResourceMetadataURIs\": [],\r\n  \"derivativeSourceURIs\": [],\r\n  \"languages\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/educationContents",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"educationContents"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create EducationContent (Other)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('known:otherNamespace', \"uri://other.org\"); \r",
											"\r",
											"const {Property} = require('postman-collection');\r",
											"const randomUuid = Property.replaceSubstitutions(\"{{$randomUUID}}\");\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':educationContent:other:contentIdentifier', randomUuid); \r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"    \r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':educationContent:other:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken_Other_Namespace}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"contentIdentifier\": \"{{known:{{scenarioId}}:educationContent:other:contentIdentifier}}\",\r\n  \"contentClassDescriptor\": \"uri://ed-fi.org/ContentClassDescriptor#Education Research\",\r\n  \"namespace\": \"{{known:otherNamespace}}\",\r\n  \"publicationYear\": 1999,\r\n  \"publisher\": \"To Be Deleted Press\",\r\n  \"shortDescription\": \"Doing stuff.\",\r\n  \"appropriateGradeLevels\": [],\r\n  \"appropriateSexes\": [],\r\n  \"authors\": [\r\n    {\r\n      \"author\": \"Doe, John\"\r\n    },\r\n    {\r\n      \"author\": \"Doe, Jane\"\r\n    }\r\n  ],\r\n  \"derivativeSourceEducationContents\": [],\r\n  \"derivativeSourceLearningResourceMetadataURIs\": [],\r\n  \"derivativeSourceURIs\": [],\r\n  \"languages\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/educationContents",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"educationContents"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete EducationContent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/educationContents/{{known:{{scenarioId}}:educationContent:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"educationContents",
										"{{known:{{scenarioId}}:educationContent:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete EducationContent (Other)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken_Other_Namespace}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/educationContents/{{known:{{scenarioId}}:educationContent:other:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"educationContents",
										"{{known:{{scenarioId}}:educationContent:other:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted EducationContent",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Only returns 1 deleted item (even though another one with a different namespace was deleted)\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Deleted item id matches item just deleted\", () => {\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:educationContent:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.keyValues).length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"ContentIdentifier value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.contentIdentifier).equal(pm.environment.get(`known:${scenarioId}:educationContent:contentIdentifier`));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/educationContents/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"educationContents",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "123456",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted EducationContent (Other)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Only returns 1 deleted item (even though another one with a different namespace was deleted)\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Deleted item id matches item just deleted\", () => {\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:educationContent:other:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.keyValues).length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"ContentIdentifier value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.contentIdentifier).equal(pm.environment.get(`known:${scenarioId}:educationContent:other:contentIdentifier`));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken_Other_Namespace}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/educationContents/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"educationContents",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "123456",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted EducationContents Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 1\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/educationContents/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"educationContents",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted EducationContents Count (Other)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 1\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/educationContents/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"educationContents",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Derived Resource (Single Key Column)",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create School",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':school:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"localEducationAgencyReference\": {\r\n    \"localEducationAgencyId\": 255901\r\n  },\r\n  \"schoolId\": 255901777,\r\n  \"nameOfInstitution\": \"School to be Deleted\",\r\n  \"operationalStatusDescriptor\": \"uri://ed-fi.org/OperationalStatusDescriptor#Active\",\r\n  \"shortNameOfInstitution\": \"GBMS\",\r\n  \"webSite\": \"http://www.GBISD.edu/GBMS/\",\r\n  \"administrativeFundingControlDescriptor\": \"uri://ed-fi.org/AdministrativeFundingControlDescriptor#Public School\",\r\n  \"charterStatusDescriptor\": \"uri://ed-fi.org/CharterStatusDescriptor#Not a Charter School\",\r\n  \"schoolTypeDescriptor\": \"uri://ed-fi.org/SchoolTypeDescriptor#Regular\",\r\n  \"titleIPartASchoolDesignationDescriptor\": \"uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor#Not A Title I School\",\r\n  \"addresses\": [\r\n    {\r\n      \"addressTypeDescriptor\": \"uri://ed-fi.org/AddressTypeDescriptor#Mailing\",\r\n      \"city\": \"Grand Bend\",\r\n      \"postalCode\": \"73334-3393\",\r\n      \"stateAbbreviationDescriptor\": \"uri://ed-fi.org/StateAbbreviationDescriptor#TX\",\r\n      \"streetNumberName\": \"P.O. Box 3393\",\r\n      \"nameOfCounty\": \"Williston\",\r\n      \"periods\": []\r\n    },\r\n    {\r\n      \"addressTypeDescriptor\": \"uri://ed-fi.org/AddressTypeDescriptor#Physical\",\r\n      \"city\": \"Grand Bend\",\r\n      \"postalCode\": \"73334\",\r\n      \"stateAbbreviationDescriptor\": \"uri://ed-fi.org/StateAbbreviationDescriptor#TX\",\r\n      \"streetNumberName\": \"9993 Space Blvd.\",\r\n      \"nameOfCounty\": \"Williston\",\r\n      \"periods\": []\r\n    }\r\n  ],\r\n  \"educationOrganizationCategories\": [\r\n    {\r\n      \"educationOrganizationCategoryDescriptor\": \"uri://ed-fi.org/EducationOrganizationCategoryDescriptor#School\"\r\n    }\r\n  ],\r\n  \"identificationCodes\": [\r\n    {\r\n      \"educationOrganizationIdentificationSystemDescriptor\": \"uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor#SEA\",\r\n      \"identificationCode\": \"255901044\"\r\n    }\r\n  ],\r\n  \"indicators\": [\r\n    {\r\n      \"indicatorDescriptor\": \"uri://gbisd.edu/IndicatorDescriptor#Retention Rate\",\r\n      \"indicatorGroupDescriptor\": \"uri://gbisd.edu/IndicatorGroupDescriptor#Staff Indicator\",\r\n      \"indicatorLevelDescriptor\": \"uri://gbisd.edu/IndicatorLevelDescriptor#Medium Retention\",\r\n      \"indicatorValue\": \"87\",\r\n      \"periods\": [\r\n        {\r\n          \"beginDate\": \"2010-08-29\",\r\n          \"endDate\": \"2011-06-30\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"institutionTelephones\": [\r\n    {\r\n      \"institutionTelephoneNumberTypeDescriptor\": \"uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor#Fax\",\r\n      \"telephoneNumber\": \"(950) 366-9374\"\r\n    },\r\n    {\r\n      \"institutionTelephoneNumberTypeDescriptor\": \"uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor#Main\",\r\n      \"telephoneNumber\": \"(950) 325-3164\"\r\n    }\r\n  ],\r\n  \"internationalAddresses\": [],\r\n  \"schoolCategories\": [\r\n    {\r\n      \"schoolCategoryDescriptor\": \"uri://ed-fi.org/SchoolCategoryDescriptor#Middle School\"\r\n    }\r\n  ],\r\n  \"gradeLevels\": [\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Eighth grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Seventh grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Sixth grade\"\r\n    }\r\n  ],\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"cteProgram\": {\r\n        \"careerPathwayDescriptor\": \"uri://ed-fi.org/CareerPathwayDescriptor#Other\"\r\n      }\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete School",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools/{{known:{{scenarioId}}:school:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools",
										"{{known:{{scenarioId}}:school:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Schools",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Deleted item id matches item just deleted\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:school:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.keyValues).length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"SchoolId value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.schoolId).equal(255901777);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Schools Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 1\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Derived Resource (OrganizationDepartment)",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create OrganizationDepartment 777",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':organizationDepartment:777:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"organizationDepartmentId\": 255901777,\r\n    \"nameOfInstitution\": \"To Be Deleted Department\",\r\n    \"parentEducationOrganizationReference\": {\r\n        \"educationOrganizationId\": 255901001\r\n    },\r\n    \"categories\": [\r\n        {\r\n            \"educationOrganizationCategoryDescriptor\": \"uri://ed-fi.org/EducationOrganizationCategoryDescriptor#Organization Department\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/organizationDepartments",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"organizationDepartments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete OrganizationDepartment 777",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/organizationDepartments/{{known:{{scenarioId}}:organizationDepartment:777:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"organizationDepartments",
										"{{known:{{scenarioId}}:organizationDepartment:777:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create OrganizationDepartment 888",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':organizationDepartment:888:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"organizationDepartmentId\": 255901888,\r\n    \"nameOfInstitution\": \"To Be Deleted Department\",\r\n    \"parentEducationOrganizationReference\": {\r\n        \"educationOrganizationId\": 255901001\r\n    },\r\n    \"categories\": [\r\n        {\r\n            \"educationOrganizationCategoryDescriptor\": \"uri://ed-fi.org/EducationOrganizationCategoryDescriptor#Organization Department\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/organizationDepartments",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"organizationDepartments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete OrganizationDepartment 888",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/organizationDepartments/{{known:{{scenarioId}}:organizationDepartment:888:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"organizationDepartments",
										"{{known:{{scenarioId}}:organizationDepartment:888:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted OrganizationDepartments",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item1 = items[0];\r",
											"const item2 = items[1];\r",
											"\r",
											"pm.test(\"Deleted item ids match items just deleted\", () => {\r",
											"  pm.expect(items.length).equal(2);\r",
											"  pm.expect(item1.id).equal(pm.environment.get(`known:${scenarioId}:organizationDepartment:777:id`));\r",
											"  pm.expect(item2.id).equal(pm.environment.get(`known:${scenarioId}:organizationDepartment:888:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"  pm.expect(Object.keys(item1.keyValues).length).equal(1);\r",
											"  pm.expect(Object.keys(item2.keyValues).length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"OrganizationDepartmentId value is correctly reflected in key values\", () => {\r",
											"  pm.expect(item1.keyValues.organizationDepartmentId).equal(255901777);\r",
											"  pm.expect(item2.keyValues.organizationDepartmentId).equal(255901888);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/organizationDepartments/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"organizationDepartments",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted OrganizationDepartments Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned due to supplied limit\", () => {\r",
											"  pm.expect(items.length).equal(1);\r",
											"  pm.expect(item.keyValues.organizationDepartmentId).equal(255901777);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"  pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 2\", () => {\r",
											"  const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"  pm.expect(totalCount).equal(2);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/organizationDepartments/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"organizationDepartments",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Derived Resource (School)",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create School 002",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':school:002:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"localEducationAgencyReference\": {\r\n    \"localEducationAgencyId\": 255901\r\n  },\r\n  \"schoolId\": 255901002,\r\n  \"nameOfInstitution\": \"To Be Deleted School\",\r\n  \"operationalStatusDescriptor\": \"uri://ed-fi.org/OperationalStatusDescriptor#Active\",\r\n  \"shortNameOfInstitution\": \"TBDS\",\r\n  \"webSite\": \"http://www.GBISD.edu/GBHS/\",\r\n  \"administrativeFundingControlDescriptor\": \"uri://ed-fi.org/AdministrativeFundingControlDescriptor#Public School\",\r\n  \"charterStatusDescriptor\": \"uri://ed-fi.org/CharterStatusDescriptor#Not a Charter School\",\r\n  \"schoolTypeDescriptor\": \"uri://ed-fi.org/SchoolTypeDescriptor#Regular\",\r\n  \"titleIPartASchoolDesignationDescriptor\": \"uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor#Not A Title I School\",\r\n  \"addresses\": [],\r\n  \"educationOrganizationCategories\": [\r\n    {\r\n      \"educationOrganizationCategoryDescriptor\": \"uri://ed-fi.org/EducationOrganizationCategoryDescriptor#School\"\r\n    }\r\n  ],\r\n  \"identificationCodes\": [],\r\n  \"indicators\": [],\r\n  \"institutionTelephones\": [],\r\n  \"internationalAddresses\": [],\r\n  \"schoolCategories\": [\r\n    {\r\n      \"schoolCategoryDescriptor\": \"uri://ed-fi.org/SchoolCategoryDescriptor#High School\"\r\n    }\r\n  ],\r\n  \"gradeLevels\": [\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Ninth grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Tenth grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Eleventh grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Twelfth grade\"\r\n    }\r\n  ],\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"cteProgram\": {\r\n        \"careerPathwayDescriptor\": \"uri://ed-fi.org/CareerPathwayDescriptor#Other\"\r\n      }\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete School 002",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools/{{known:{{scenarioId}}:school:002:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools",
										"{{known:{{scenarioId}}:school:002:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create School 003",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':school:003:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"localEducationAgencyReference\": {\r\n    \"localEducationAgencyId\": 255901\r\n  },\r\n  \"schoolId\": 255901003,\r\n  \"nameOfInstitution\": \"To Be Deleted School\",\r\n  \"operationalStatusDescriptor\": \"uri://ed-fi.org/OperationalStatusDescriptor#Active\",\r\n  \"shortNameOfInstitution\": \"TBDS\",\r\n  \"webSite\": \"http://www.GBISD.edu/GBHS/\",\r\n  \"administrativeFundingControlDescriptor\": \"uri://ed-fi.org/AdministrativeFundingControlDescriptor#Public School\",\r\n  \"charterStatusDescriptor\": \"uri://ed-fi.org/CharterStatusDescriptor#Not a Charter School\",\r\n  \"schoolTypeDescriptor\": \"uri://ed-fi.org/SchoolTypeDescriptor#Regular\",\r\n  \"titleIPartASchoolDesignationDescriptor\": \"uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor#Not A Title I School\",\r\n  \"addresses\": [],\r\n  \"educationOrganizationCategories\": [\r\n    {\r\n      \"educationOrganizationCategoryDescriptor\": \"uri://ed-fi.org/EducationOrganizationCategoryDescriptor#School\"\r\n    }\r\n  ],\r\n  \"identificationCodes\": [],\r\n  \"indicators\": [],\r\n  \"institutionTelephones\": [],\r\n  \"internationalAddresses\": [],\r\n  \"schoolCategories\": [\r\n    {\r\n      \"schoolCategoryDescriptor\": \"uri://ed-fi.org/SchoolCategoryDescriptor#High School\"\r\n    }\r\n  ],\r\n  \"gradeLevels\": [\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Ninth grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Tenth grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Eleventh grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Twelfth grade\"\r\n    }\r\n  ],\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"cteProgram\": {\r\n        \"careerPathwayDescriptor\": \"uri://ed-fi.org/CareerPathwayDescriptor#Other\"\r\n      }\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete School 003",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools/{{known:{{scenarioId}}:school:003:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools",
										"{{known:{{scenarioId}}:school:003:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Schools",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item1 = items[0];\r",
											"const item2 = items[1];\r",
											"\r",
											"pm.test(\"Deleted item ids match items just deleted\", () => {\r",
											"  pm.expect(items.length).equal(2);\r",
											"  pm.expect(item1.id).equal(pm.environment.get(`known:${scenarioId}:school:002:id`));\r",
											"  pm.expect(item2.id).equal(pm.environment.get(`known:${scenarioId}:school:003:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"  pm.expect(Object.keys(item1.keyValues).length).equal(1);\r",
											"  pm.expect(Object.keys(item2.keyValues).length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"SchoolId value is correctly reflected in key values\", () => {\r",
											"  pm.expect(item1.keyValues.schoolId).equal(255901002);\r",
											"  pm.expect(item2.keyValues.schoolId).equal(255901003);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Schools Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned due to supplied limit\", () => {\r",
											"  pm.expect(items.length).equal(1);\r",
											"  pm.expect(item.keyValues.schoolId).equal(255901002);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"  pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 2\", () => {\r",
											"  const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"  pm.expect(totalCount).equal(2);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Derived Resource (Multiple Key Columns)",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "* Get StudentProgramAssociations",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"\r",
											"if (items.length > 0) {\r",
											"    pm.environment.set('known:'+scenarioId+':studentProgramAssociation:id', items[0].id);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentProgramAssociations?BeginDate=2021-10-19",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentProgramAssociations"
									],
									"query": [
										{
											"key": "BeginDate",
											"value": "2021-10-19"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create StudentProgramAssociation (LEA Client)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':studentProgramAssociation:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"educationOrganizationReference\": {\r\n        \"educationOrganizationId\": 255901001\r\n    },\r\n    \"programReference\": {\r\n        \"educationOrganizationId\": 255901,\r\n        \"programName\": \"Bilingual\",\r\n        \"programTypeDescriptor\": \"uri://ed-fi.org/ProgramTypeDescriptor#Bilingual\"\r\n    },\r\n    \"studentReference\": {\r\n        \"studentUniqueId\": \"604822\"\r\n    },\r\n    \"beginDate\": \"2021-10-19\",\r\n    \"servedOutsideOfRegularSession\": true,\r\n    \"programParticipationStatuses\": [],\r\n    \"services\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentProgramAssociations",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentProgramAssociations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create StudentProgramAssociation (School Client)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':studentProgramAssociation:schoolClient:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken_255901044}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"educationOrganizationReference\": {\r\n        \"educationOrganizationId\": 255901044\r\n    },\r\n    \"programReference\": {\r\n        \"educationOrganizationId\": 255901,\r\n        \"programName\": \"Bilingual\",\r\n        \"programTypeDescriptor\": \"uri://ed-fi.org/ProgramTypeDescriptor#Bilingual\"\r\n    },\r\n    \"studentReference\": {\r\n        \"studentUniqueId\": \"604824\"\r\n    },\r\n    \"beginDate\": \"2021-10-20\",\r\n    \"servedOutsideOfRegularSession\": true,\r\n    \"programParticipationStatuses\": [],\r\n    \"services\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentProgramAssociations",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentProgramAssociations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete StudentProgramAssociation (LEA Client)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentProgramAssociations/{{known:{{scenarioId}}:studentProgramAssociation:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentProgramAssociations",
										"{{known:{{scenarioId}}:studentProgramAssociation:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete StudentProgramAssociation (School Client)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken_255901044}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentProgramAssociations/{{known:{{scenarioId}}:studentProgramAssociation:schoolClient:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentProgramAssociations",
										"{{known:{{scenarioId}}:studentProgramAssociation:schoolClient:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted StudentProgramAssociations (LEA Client)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"\r",
											"pm.test(\"Should return both deleted items (one each deleted by LEA and School client)\", () => {\r",
											"    pm.expect(items.length).equal(2);\r",
											"});\r",
											"\r",
											"const item1 = items[0];\r",
											"const item2 = items[1];\r",
											"\r",
											"pm.test(\"Deleted item ids match the items deleted by both clients\", () => {\r",
											"    pm.expect(item1.id).equal(pm.environment.get(`known:${scenarioId}:studentProgramAssociation:id`));\r",
											"    pm.expect(item2.id).equal(pm.environment.get(`known:${scenarioId}:studentProgramAssociation:schoolClient:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item1.keyValues).length).equal(6);\r",
											"});\r",
											"\r",
											"pm.test(\"EducationOrganizationId values are correctly reflected in key values\", () => {\r",
											"    pm.expect(item1.keyValues.educationOrganizationId).equal(255901001);\r",
											"    pm.expect(item2.keyValues.educationOrganizationId).equal(255901044);\r",
											"});\r",
											"\r",
											"pm.test(\"ProgramEducationOrganizationId values are correctly reflected in key values\", () => {\r",
											"    pm.expect(item1.keyValues.programEducationOrganizationId).equal(255901);\r",
											"    pm.expect(item2.keyValues.programEducationOrganizationId).equal(255901);\r",
											"});\r",
											"\r",
											"pm.test(\"ProgramName values are correctly reflected in key values\", () => {\r",
											"    pm.expect(item1.keyValues.programName).equal(\"Bilingual\");\r",
											"    pm.expect(item2.keyValues.programName).equal(\"Bilingual\");\r",
											"});\r",
											"\r",
											"pm.test(\"ProgramTypeDescriptor values are correctly reflected in key values\", () => {\r",
											"    pm.expect(item1.keyValues.programTypeDescriptor).equal(\"uri://ed-fi.org/ProgramTypeDescriptor#Bilingual\");\r",
											"    pm.expect(item2.keyValues.programTypeDescriptor).equal(\"uri://ed-fi.org/ProgramTypeDescriptor#Bilingual\");\r",
											"});\r",
											"\r",
											"pm.test(\"BeginDate values are correctly reflected (and formatted without time portion) in key values\", () => {\r",
											"    pm.expect(item1.keyValues.beginDate).equal(\"2021-10-19\");\r",
											"    pm.expect(item2.keyValues.beginDate).equal(\"2021-10-20\");\r",
											"});\r",
											"\r",
											"pm.test(\"StudentUniqueId value are correctly reflected in key values\", () => {\r",
											"    pm.expect(item1.keyValues.studentUniqueId).equal(\"604822\");\r",
											"    pm.expect(item2.keyValues.studentUniqueId).equal(\"604824\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentProgramAssociations/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentProgramAssociations",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "112250",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted StudentProgramAssociations (School Client)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Should only return 1 deleted item\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Deleted item id matches item just deleted by school client\", () => {\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:studentProgramAssociation:schoolClient:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.keyValues).length).equal(6);\r",
											"});\r",
											"\r",
											"pm.test(\"EducationOrganizationId value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.educationOrganizationId).equal(255901044);\r",
											"});\r",
											"\r",
											"pm.test(\"ProgramEducationOrganizationId value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.programEducationOrganizationId).equal(255901);\r",
											"});\r",
											"\r",
											"pm.test(\"ProgramName value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.programName).equal(\"Bilingual\");\r",
											"});\r",
											"\r",
											"pm.test(\"ProgramTypeDescriptor value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.programTypeDescriptor).equal(\"uri://ed-fi.org/ProgramTypeDescriptor#Bilingual\");\r",
											"});\r",
											"\r",
											"pm.test(\"BeginDate value is correctly reflected (and formatted without time portion) in key values\", () => {\r",
											"    pm.expect(item.keyValues.beginDate).equal(\"2021-10-20\");\r",
											"});\r",
											"\r",
											"pm.test(\"StudentUniqueId value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.studentUniqueId).equal(\"604824\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken_255901044}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentProgramAssociations/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentProgramAssociations",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "103895",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted StudentProgramAssociations Count (LEA Client)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned due to limit parameter\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 2\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(2);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentProgramAssociations/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentProgramAssociations",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted StudentProgramAssociations Count (School Client)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 1\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessToken_255901044}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentProgramAssociations/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentProgramAssociations",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Basic Resource with Descriptor/UniqueId",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get StaffEdOrgEmployment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"pm.environment.set(`known:${scenarioId}:staffUniqueId`, items[0].staffReference.staffUniqueId);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffEducationOrganizationEmploymentAssociations",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffEducationOrganizationEmploymentAssociations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create StaffEdOrgEmployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':staffEdOrgEmpAssoc:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"employmentStatusDescriptor\": \"uri://ed-fi.org/EmploymentStatusDescriptor#Tenured or permanent\",\r\n  \"hireDate\": \"2021-01-01\",\r\n  \"educationOrganizationReference\": {\r\n    \"educationOrganizationId\": 255901001\r\n  },\r\n  \"staffReference\": {\r\n    \"staffUniqueId\": \"{{known:{{scenarioId}}:staffUniqueId}}\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffEducationOrganizationEmploymentAssociations",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffEducationOrganizationEmploymentAssociations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete StaffEdOrgEmployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffEducationOrganizationEmploymentAssociations/{{known:{{scenarioId}}:staffEdOrgEmpAssoc:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffEducationOrganizationEmploymentAssociations",
										"{{known:{{scenarioId}}:staffEdOrgEmpAssoc:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted StaffEdOrgEmployment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Deleted item id matches item just deleted\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:staffEdOrgEmpAssoc:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.keyValues).length).equal(4);\r",
											"});\r",
											"\r",
											"pm.test(\"EmploymentStatusDescriptor value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.employmentStatusDescriptor).equal(\"uri://ed-fi.org/EmploymentStatusDescriptor#Tenured or permanent\");\r",
											"});\r",
											"\r",
											"pm.test(\"HireDate value is correctly reflected (and formatted without time portion) in key values\", () => {\r",
											"    pm.expect(item.keyValues.hireDate).equal(\"2021-01-01\");\r",
											"});\r",
											"\r",
											"pm.test(\"EducationOrganizationId value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.educationOrganizationId).equal(255901001);\r",
											"});\r",
											"\r",
											"pm.test(\"StaffUniqueId value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.staffUniqueId).equal(pm.environment.get(`known:${scenarioId}:staffUniqueId`));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffEducationOrganizationEmploymentAssociations/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffEducationOrganizationEmploymentAssociations",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted StaffEdOrgEmployment Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 1\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffEducationOrganizationEmploymentAssociations/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffEducationOrganizationEmploymentAssociations",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Person-Type Resource",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Staff",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.environment.set('supplied:'+scenarioId+':staff:uniqueId', 'ToBeDeleted-' + pm.variables.replaceIn('{{$timestamp}}'));\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':staff:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"staffUniqueId\": \"{{supplied:{{scenarioId}}:staff:uniqueId}}\",\r\n  \"birthDate\": \"1972-05-25\",\r\n  \"firstName\": \"Tamika\",\r\n  \"highestCompletedLevelOfEducationDescriptor\": \"uri://ed-fi.org/LevelOfEducationDescriptor#Some College No Degree\",\r\n  \"hispanicLatinoEthnicity\": false,\r\n  \"lastSurname\": \"Mcpherson\",\r\n  \"loginId\": \"tmcpherson\",\r\n  \"personalTitlePrefix\": \"Ms\",\r\n  \"sexDescriptor\": \"uri://ed-fi.org/SexDescriptor#Female\",\r\n  \"yearsOfPriorProfessionalExperience\": 30,\r\n  \"addresses\": [],\r\n  \"ancestryEthnicOrigins\": [],\r\n  \"credentials\": [],\r\n  \"electronicMails\": [\r\n    {\r\n      \"electronicMailAddress\": \"TamikaMcpherson@edfi.org\",\r\n      \"electronicMailTypeDescriptor\": \"uri://ed-fi.org/ElectronicMailTypeDescriptor#Work\"\r\n    }\r\n  ],\r\n  \"identificationCodes\": [\r\n    {\r\n      \"staffIdentificationSystemDescriptor\": \"uri://ed-fi.org/StaffIdentificationSystemDescriptor#State\",\r\n      \"identificationCode\": \"207249\"\r\n    }\r\n  ],\r\n  \"identificationDocuments\": [],\r\n  \"internationalAddresses\": [],\r\n  \"languages\": [],\r\n  \"otherNames\": [],\r\n  \"personalIdentificationDocuments\": [\r\n    {\r\n      \"identificationDocumentUseDescriptor\": \"uri://ed-fi.org/IdentificationDocumentUseDescriptor#Personal Information Verification\",\r\n      \"personalInformationVerificationDescriptor\": \"uri://ed-fi.org/PersonalInformationVerificationDescriptor#Entry in family Bible\"\r\n    }\r\n  ],\r\n  \"races\": [\r\n    {\r\n      \"raceDescriptor\": \"uri://ed-fi.org/RaceDescriptor#Asian\"\r\n    }\r\n  ],\r\n  \"recognitions\": [],\r\n  \"telephones\": [],\r\n  \"tribalAffiliations\": [],\r\n  \"visas\": [],\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"petPreference\": {\r\n        \"minimumWeight\": 0,\r\n        \"maximumWeight\": 10\r\n      }\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffs",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create StaffEdOrgEmployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':staffEdOrgEmpAssoc:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"employmentStatusDescriptor\": \"uri://ed-fi.org/EmploymentStatusDescriptor#Tenured or permanent\",\r\n  \"hireDate\": \"2021-01-01\",\r\n  \"educationOrganizationReference\": {\r\n    \"educationOrganizationId\": 255901001\r\n  },\r\n  \"staffReference\": {\r\n    \"staffUniqueId\": \"{{supplied:{{scenarioId}}:staff:uniqueId}}\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffEducationOrganizationEmploymentAssociations",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffEducationOrganizationEmploymentAssociations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete StaffEdOrgEmployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffEducationOrganizationEmploymentAssociations/{{known:{{scenarioId}}:staffEdOrgEmpAssoc:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffEducationOrganizationEmploymentAssociations",
										"{{known:{{scenarioId}}:staffEdOrgEmpAssoc:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Staff",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffs/{{known:{{scenarioId}}:staff:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffs",
										"{{known:{{scenarioId}}:staff:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Staff",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Deleted item id matches item just deleted\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:staff:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.keyValues).length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"StaffUniqueId value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.staffUniqueId).equal(pm.environment.get(`supplied:${scenarioId}:staff:uniqueId`));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffs/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffs",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Staff Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 1\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/staffs/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"staffs",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Descriptor Resource",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Descriptor",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':academicSubjectDescriptor:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"codeValue\": \"To Be Deleted\",\r\n    \"description\": \"This is to be deleted.\",\r\n    \"namespace\": \"uri://ed-fi.org/AcademicSubjectDescriptor\",\r\n    \"shortDescription\": \"This is to be deleted.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/academicSubjectDescriptors",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"academicSubjectDescriptors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Descriptor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/academicSubjectDescriptors/{{known:{{scenarioId}}:academicSubjectDescriptor:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"academicSubjectDescriptors",
										"{{known:{{scenarioId}}:academicSubjectDescriptor:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Descriptor",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Deleted item id matches item just deleted\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:academicSubjectDescriptor:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.keyValues).length).equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Namespace value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.namespace).equal(\"uri://ed-fi.org/AcademicSubjectDescriptor\");\r",
											"});\r",
											"\r",
											"pm.test(\"CodeValue value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.codeValue).equal(\"To Be Deleted\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/academicSubjectDescriptors/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"academicSubjectDescriptors",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Descriptor Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 1\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/academicSubjectDescriptors/deletes/?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"academicSubjectDescriptors",
										"deletes",
										""
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Managed Descriptor Resource",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Managed Descriptor",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':assessmentPeriodDescriptor:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"codeValue\": \"To Be Deleted\",\r\n    \"description\": \"This is to be deleted.\",\r\n    \"namespace\": \"uri://ed-fi.org/AssessmentPeriodDescriptor\",\r\n    \"shortDescription\": \"This is to be deleted.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/assessmentPeriodDescriptors",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"assessmentPeriodDescriptors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Descriptor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/assessmentPeriodDescriptors/{{known:{{scenarioId}}:assessmentPeriodDescriptor:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"assessmentPeriodDescriptors",
										"{{known:{{scenarioId}}:assessmentPeriodDescriptor:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Managed Descriptor",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Deleted item id matches item just deleted\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:assessmentPeriodDescriptor:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"KeyValues contains the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.keyValues).length).equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Namespace value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.namespace).equal(\"uri://ed-fi.org/AssessmentPeriodDescriptor\");\r",
											"});\r",
											"\r",
											"pm.test(\"CodeValue value is correctly reflected in key values\", () => {\r",
											"    pm.expect(item.keyValues.codeValue).equal(\"To Be Deleted\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/assessmentPeriodDescriptors/deletes?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"assessmentPeriodDescriptors",
										"deletes"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Managed Descriptor Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"One item should be returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should be present\", () => {\r",
											"    pm.response.to.have.header(\"Total-Count\");\r",
											"});\r",
											"\r",
											"pm.test(\"Total-Count header should have a value of 1\", () => {\r",
											"    const totalCount = parseInt(pm.response.headers.one('Total-Count').value);\r",
											"    pm.expect(totalCount).equal(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/assessmentPeriodDescriptors/deletes/?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=1",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"assessmentPeriodDescriptors",
										"deletes",
										""
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										},
										{
											"key": "minChangeVersion",
											"value": "1234",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Key Changes",
			"item": [
				{
					"name": "ClassPeriods",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Class Period",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':classPeriod:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"classPeriodName\": \"ORIGINAL\",\r\n    \"meetingTimes\": [\r\n        {\r\n            \"endTime\": \"09:25:00\",\r\n            \"startTime\": \"08:35:00\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/classPeriods",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"classPeriods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Class Period Key",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"classPeriodName\": \"UPDATE 1\",\r\n    \"meetingTimes\": [\r\n        {\r\n            \"endTime\": \"09:25:00\",\r\n            \"startTime\": \"08:35:00\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/classPeriods/{{known:{{scenarioId}}:classPeriod:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"classPeriods",
										"{{known:{{scenarioId}}:classPeriod:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key Changes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Single item with the updated key is returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:classPeriod:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.oldKeyValues).length).equal(2);\r",
											"    pm.expect(Object.keys(item.newKeyValues).length).equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Old key value is correctly reported\", () => {\r",
											"    pm.expect(item.oldKeyValues.classPeriodName).equal(\"ORIGINAL\");\r",
											"});\r",
											"\r",
											"pm.test(\"New key value is correctly reported\", () => {\r",
											"    pm.expect(item.newKeyValues.classPeriodName).equal(\"UPDATE 1\");\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':classPeriod:initialChangeVersion', item.changeVersion);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/classPeriods/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"classPeriods",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Class Period Key #2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"classPeriodName\": \"UPDATE 2\",\r\n    \"meetingTimes\": [\r\n        {\r\n            \"endTime\": \"09:25:00\",\r\n            \"startTime\": \"08:35:00\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/classPeriods/{{known:{{scenarioId}}:classPeriod:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"classPeriods",
										"{{known:{{scenarioId}}:classPeriod:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key Changes #2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Only a single entry should be returned despite multiple key changes\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Item with the updated key is returned\", () => {\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:classPeriod:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.oldKeyValues).length).equal(2);\r",
											"    pm.expect(Object.keys(item.newKeyValues).length).equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Old key value reports the original value\", () => {\r",
											"    pm.expect(item.oldKeyValues.classPeriodName).equal(\"ORIGINAL\");\r",
											"});\r",
											"\r",
											"pm.test(\"New key value reports the most recent update\", () => {\r",
											"    pm.expect(item.newKeyValues.classPeriodName).equal(\"UPDATE 2\");\r",
											"});\r",
											"\r",
											"pm.test(\"ChangeVersion reported is later than the changeVersion of the intermediate update\", () => {\r",
											"    const intermediateUpdateChangeVersion = pm.environment.get('known:'+scenarioId+':classPeriod:initialChangeVersion');\r",
											"    pm.expect(item.changeVersion).to.be.above(intermediateUpdateChangeVersion);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/classPeriods/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"classPeriods",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Class Period",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/classPeriods/{{known:{{scenarioId}}:classPeriod:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"classPeriods",
										"{{known:{{scenarioId}}:classPeriod:id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Grades",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Grade",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':grade:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"gradingPeriodReference\": {\r\n        \"gradingPeriodDescriptor\": \"uri://ed-fi.org/GradingPeriodDescriptor#First Six Weeks\",\r\n        \"periodSequence\": 1,\r\n        \"schoolId\": 255901001,\r\n        \"schoolYear\": 2022\r\n    },\r\n    \"studentSectionAssociationReference\": {\r\n        \"beginDate\": \"2021-08-23\",\r\n        \"localCourseCode\": \"ALG-1\",\r\n        \"schoolId\": 255901001,\r\n        \"schoolYear\": 2022,\r\n        \"sectionIdentifier\": \"25590100102Trad220ALG112011\",\r\n        \"sessionName\": \"2021-2022 Fall Semester\",\r\n        \"studentUniqueId\": \"604822\"\r\n    },\r\n    \"gradeTypeDescriptor\": \"uri://ed-fi.org/GradeTypeDescriptor#Final\",\r\n    \"numericGradeEarned\": 63.00,\r\n    \"learningStandardGrades\": [\r\n        {\r\n            \"learningStandardReference\": {\r\n                \"learningStandardId\": \"111.32.NA.A.1.D\"\r\n            },\r\n            \"numericGradeEarned\": 63.00\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/grades",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"grades"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Grade Key",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"gradingPeriodReference\": {\r\n        \"gradingPeriodDescriptor\": \"uri://ed-fi.org/GradingPeriodDescriptor#First Six Weeks\",\r\n        \"periodSequence\": 1,\r\n        \"schoolId\": 255901001,\r\n        \"schoolYear\": 2022\r\n    },\r\n    \"studentSectionAssociationReference\": {\r\n        \"beginDate\": \"2021-08-23\",\r\n        \"localCourseCode\": \"ALG-1\",\r\n        \"schoolId\": 255901001,\r\n        \"schoolYear\": 2022,\r\n        \"sectionIdentifier\": \"25590100102Trad220ALG112011\",\r\n        \"sessionName\": \"2021-2022 Fall Semester\",\r\n        \"studentUniqueId\": \"604822\"\r\n    },\r\n    \"gradeTypeDescriptor\": \"uri://ed-fi.org/GradeTypeDescriptor#Progress Report\",\r\n    \"numericGradeEarned\": 63.00,\r\n    \"learningStandardGrades\": [\r\n        {\r\n            \"learningStandardReference\": {\r\n                \"learningStandardId\": \"111.32.NA.A.1.D\"\r\n            },\r\n            \"numericGradeEarned\": 63.00\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/grades/{{known:{{scenarioId}}:grade:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"grades",
										"{{known:{{scenarioId}}:grade:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key Changes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Single item with the updated key is returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:grade:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.oldKeyValues).length).equal(11);\r",
											"    pm.expect(Object.keys(item.newKeyValues).length).equal(11);\r",
											"});\r",
											"\r",
											"pm.test(\"Old key value is correctly reported\", () => {\r",
											"    pm.expect(item.oldKeyValues.gradeTypeDescriptor).equal(\"uri://ed-fi.org/GradeTypeDescriptor#Final\");\r",
											"});\r",
											"\r",
											"pm.test(\"New key value is correctly reported\", () => {\r",
											"    pm.expect(item.newKeyValues.gradeTypeDescriptor).equal(\"uri://ed-fi.org/GradeTypeDescriptor#Progress Report\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/grades/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"grades",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Grade",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/grades/{{known:{{scenarioId}}:grade:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"grades",
										"{{known:{{scenarioId}}:grade:id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GradebookEntries",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Gradebook Entry",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"\r",
											"pm.environment.set('supplied:gradebookEntryIdentifier', newGuid());\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':gradebookEntry:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"sectionReference\": {\r\n        \"localCourseCode\": \"ALG-1\",\r\n        \"schoolId\": 255901001,\r\n        \"schoolYear\": 2022,\r\n        \"sectionIdentifier\": \"25590100102Trad220ALG112011\",\r\n        \"sessionName\": \"2021-2022 Fall Semester\"\r\n    },\r\n    \"sourcesectionidentifier\": \"25590100102Trad220ALG112011\",\r\n    \"dateAssigned\": \"2021-07-04\",\r\n    \"gradebookEntryTitle\": \"Test GradeBookEntry Title1\",\r\n    \"learningObjectives\": [],\r\n    \"learningStandards\": [],\r\n    \"Namespace\": \"uri://ed-fi.org/GradebookEntry/GradebookEntry.xml\",\r\n    \"GradebookEntryIdentifier\": \"{{supplied:gradebookEntryIdentifier}}\",\r\n    \"title\": \"Test GradeBookEntry Title1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/gradebookEntries",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"gradebookEntries"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Gradebook Entry Key",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"\r",
											"pm.environment.set('supplied:gradebookEntryIdentifier2', newGuid());\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"sectionReference\": {\r\n        \"localCourseCode\": \"ART-01\",\r\n        \"schoolId\": 255901107,\r\n        \"schoolYear\": 2022,\r\n        \"sectionIdentifier\": \"25590110705Trad504ART0112011\",\r\n        \"sessionName\": \"2021-2022 Fall Semester\"\r\n    },\r\n    \"sourcesectionidentifier\": \"25590110705Trad504ART0112011\",\r\n    \"dateAssigned\": \"2021-08-04\",\r\n    \"gradebookEntryTitle\": \"Test GradeBookEntry Title2\",\r\n    \"learningObjectives\": [],\r\n    \"learningStandards\": [],\r\n    \"Namespace\": \"uri://ed-fi.org/GradebookEntry/GradebookEntry.xml\",\r\n    \"GradebookEntryIdentifier\": \"{{supplied:gradebookEntryIdentifier2}}\",\r\n    \"title\": \"Test GradeBookEntry Title2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/gradebookEntries/{{known:{{scenarioId}}:gradebookEntry:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"gradebookEntries",
										"{{known:{{scenarioId}}:gradebookEntry:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key Changes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Single item with the updated key is returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:gradebookEntry:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.oldKeyValues).length).equal(2);\r",
											"    pm.expect(Object.keys(item.newKeyValues).length).equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Old key values are correctly reported\", () => {\r",
											"    pm.expect(item.oldKeyValues.gradebookEntryIdentifier).equal(pm.environment.get('supplied:gradebookEntryIdentifier'));\r",
											"    pm.expect(item.oldKeyValues.namespace).equal('uri://ed-fi.org/GradebookEntry/GradebookEntry.xml');\r",
											"});\r",
											"\r",
											"pm.test(\"New key values are correctly reported\", () => {\r",
											"    pm.expect(item.newKeyValues.gradebookEntryIdentifier).equal(pm.environment.get('supplied:gradebookEntryIdentifier2'));\r",
											"    pm.expect(item.oldKeyValues.namespace).equal('uri://ed-fi.org/GradebookEntry/GradebookEntry.xml');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/gradebookEntries/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"gradebookEntries",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Gradebook Entry",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/gradebookEntries/{{known:{{scenarioId}}:gradebookEntry:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"gradebookEntries",
										"{{known:{{scenarioId}}:gradebookEntry:id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Locations",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create School",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':school:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"localEducationAgencyReference\": {\r\n    \"localEducationAgencyId\": 255901\r\n  },\r\n  \"schoolId\": 255901777,\r\n  \"nameOfInstitution\": \"School to be Deleted\",\r\n  \"operationalStatusDescriptor\": \"uri://ed-fi.org/OperationalStatusDescriptor#Active\",\r\n  \"shortNameOfInstitution\": \"GBMS\",\r\n  \"webSite\": \"http://www.GBISD.edu/GBMS/\",\r\n  \"administrativeFundingControlDescriptor\": \"uri://ed-fi.org/AdministrativeFundingControlDescriptor#Public School\",\r\n  \"charterStatusDescriptor\": \"uri://ed-fi.org/CharterStatusDescriptor#Not a Charter School\",\r\n  \"schoolTypeDescriptor\": \"uri://ed-fi.org/SchoolTypeDescriptor#Regular\",\r\n  \"titleIPartASchoolDesignationDescriptor\": \"uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor#Not A Title I School\",\r\n  \"addresses\": [\r\n    {\r\n      \"addressTypeDescriptor\": \"uri://ed-fi.org/AddressTypeDescriptor#Mailing\",\r\n      \"city\": \"Grand Bend\",\r\n      \"postalCode\": \"73334-3393\",\r\n      \"stateAbbreviationDescriptor\": \"uri://ed-fi.org/StateAbbreviationDescriptor#TX\",\r\n      \"streetNumberName\": \"P.O. Box 3393\",\r\n      \"nameOfCounty\": \"Williston\",\r\n      \"periods\": []\r\n    },\r\n    {\r\n      \"addressTypeDescriptor\": \"uri://ed-fi.org/AddressTypeDescriptor#Physical\",\r\n      \"city\": \"Grand Bend\",\r\n      \"postalCode\": \"73334\",\r\n      \"stateAbbreviationDescriptor\": \"uri://ed-fi.org/StateAbbreviationDescriptor#TX\",\r\n      \"streetNumberName\": \"9993 Space Blvd.\",\r\n      \"nameOfCounty\": \"Williston\",\r\n      \"periods\": []\r\n    }\r\n  ],\r\n  \"educationOrganizationCategories\": [\r\n    {\r\n      \"educationOrganizationCategoryDescriptor\": \"uri://ed-fi.org/EducationOrganizationCategoryDescriptor#School\"\r\n    }\r\n  ],\r\n  \"identificationCodes\": [\r\n    {\r\n      \"educationOrganizationIdentificationSystemDescriptor\": \"uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor#SEA\",\r\n      \"identificationCode\": \"255901044\"\r\n    }\r\n  ],\r\n  \"indicators\": [\r\n    {\r\n      \"indicatorDescriptor\": \"uri://gbisd.edu/IndicatorDescriptor#Retention Rate\",\r\n      \"indicatorGroupDescriptor\": \"uri://gbisd.edu/IndicatorGroupDescriptor#Staff Indicator\",\r\n      \"indicatorLevelDescriptor\": \"uri://gbisd.edu/IndicatorLevelDescriptor#Medium Retention\",\r\n      \"indicatorValue\": \"87\",\r\n      \"periods\": [\r\n        {\r\n          \"beginDate\": \"2010-08-29\",\r\n          \"endDate\": \"2011-06-30\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"institutionTelephones\": [\r\n    {\r\n      \"institutionTelephoneNumberTypeDescriptor\": \"uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor#Fax\",\r\n      \"telephoneNumber\": \"(950) 366-9374\"\r\n    },\r\n    {\r\n      \"institutionTelephoneNumberTypeDescriptor\": \"uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor#Main\",\r\n      \"telephoneNumber\": \"(950) 325-3164\"\r\n    }\r\n  ],\r\n  \"internationalAddresses\": [],\r\n  \"schoolCategories\": [\r\n    {\r\n      \"schoolCategoryDescriptor\": \"uri://ed-fi.org/SchoolCategoryDescriptor#Middle School\"\r\n    }\r\n  ],\r\n  \"gradeLevels\": [\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Eighth grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Seventh grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Sixth grade\"\r\n    }\r\n  ],\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"cteProgram\": {\r\n        \"careerPathwayDescriptor\": \"uri://ed-fi.org/CareerPathwayDescriptor#Other\"\r\n      }\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Location",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':location:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901777\r\n    },\r\n    \"classroomIdentificationCode\": \"AAA\",\r\n    \"maximumNumberOfSeats\": 20,\r\n    \"optimalNumberOfSeats\": 18\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/locations",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"locations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Location Key",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"classroomIdentificationCode\": \"BBB\",\r\n    \"maximumNumberOfSeats\": 20,\r\n    \"optimalNumberOfSeats\": 18\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/locations/{{known:{{scenarioId}}:location:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"locations",
										"{{known:{{scenarioId}}:location:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key Changes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Single item with the updated key is returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:location:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.oldKeyValues).length).equal(2);\r",
											"    pm.expect(Object.keys(item.newKeyValues).length).equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Old key values are correctly reported\", () => {\r",
											"    pm.expect(item.oldKeyValues.schoolId).equal(255901777);\r",
											"    pm.expect(item.oldKeyValues.classroomIdentificationCode).equal(\"AAA\");\r",
											"});\r",
											"\r",
											"pm.test(\"New key values are correctly reported\", () => {\r",
											"    pm.expect(item.newKeyValues.schoolId).equal(255901001);\r",
											"    pm.expect(item.newKeyValues.classroomIdentificationCode).equal(\"BBB\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/locations/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"locations",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Location",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/locations/{{known:{{scenarioId}}:location:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"locations",
										"{{known:{{scenarioId}}:location:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Schools",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools/{{known:{{scenarioId}}:school:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools",
										"{{known:{{scenarioId}}:school:id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Sections",
					"item": [
						{
							"name": "Initialization",
							"item": [
								{
									"name": "Get AvailableChangeVersions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", () => {",
													"    pm.expect(pm.response.code).to.equal(200);",
													"});",
													"",
													"const responseItem = pm.response.json();",
													"const scenarioId = pm.environment.get('scenarioId');",
													"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');\r",
													"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
													"function createScenarioId() { return newGuid().substring(0,5); }\r",
													"pm.environment.set('scenarioId', createScenarioId());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"changeQueries",
												"v1",
												"availableChangeVersions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Obtain CourseOffering for LEA client",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 200\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"\r",
													"pm.test(\"Should return an item for use in the test\", () => {\r",
													"  pm.expect(items.length).to.equal(1);\r",
													"});\r",
													"\r",
													"if (items.length > 0) {\r",
													"  const item = items[0];\r",
													"  pm.environment.set('known:' + scenarioId + ':courseOffering:localCourseCode', item.localCourseCode);\r",
													"  pm.environment.set('known:' + scenarioId + ':courseOffering:schoolId', item.sessionReference.schoolId);\r",
													"  pm.environment.set('known:' + scenarioId + ':courseOffering:schoolYear', item.sessionReference.schoolYear);\r",
													"  pm.environment.set('known:' + scenarioId + ':courseOffering:sessionName', item.sessionReference.sessionName);\r",
													"  pm.environment.set('supplied:' + scenarioId + ':section:sectionIdentifier', pm.variables.replaceIn('{{$guid}}'));\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/courseOfferings?schoolId=255901001&limit=1",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"courseOfferings"
											],
											"query": [
												{
													"key": "schoolId",
													"value": "255901001"
												},
												{
													"key": "limit",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Obtain ClassPeriod for LEA client",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 200\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"\r",
													"pm.test(\"Should return an item for use in the test\", () => {\r",
													"  pm.expect(items.length).to.equal(1);\r",
													"})\r",
													"\r",
													"if (items.length > 0) {\r",
													"  const item = items[0];\r",
													"  pm.environment.set('known:' + scenarioId + ':classPeriod:classPeriodName', item.classPeriodName);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/classPeriods?schoolId=255901001&limit=1",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"classPeriods"
											],
											"query": [
												{
													"key": "schoolId",
													"value": "255901001"
												},
												{
													"key": "limit",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Obtain CourseOffering for School client",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 200\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"\r",
													"pm.test(\"Should return an item for use in the test\", () => {\r",
													"  pm.expect(items.length).to.equal(1);\r",
													"})\r",
													"\r",
													"if (items.length > 0) {\r",
													"  const item = items[0];\r",
													"  pm.environment.set('known:' + scenarioId + ':schoolClient:courseOffering:localCourseCode', item.localCourseCode);\r",
													"  pm.environment.set('known:' + scenarioId + ':schoolClient:courseOffering:schoolId', item.sessionReference.schoolId);\r",
													"  pm.environment.set('known:' + scenarioId + ':schoolClient:courseOffering:schoolYear', item.sessionReference.schoolYear);\r",
													"  pm.environment.set('known:' + scenarioId + ':schoolClient:courseOffering:sessionName', item.sessionReference.sessionName);\r",
													"  pm.environment.set('supplied:' + scenarioId + ':schoolClient:section:sectionIdentifier', pm.variables.replaceIn('{{$guid}}'));\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/courseOfferings?schoolId=255901044&limit=1",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"courseOfferings"
											],
											"query": [
												{
													"key": "schoolId",
													"value": "255901044"
												},
												{
													"key": "limit",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Obtain ClassPeriod for School client",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 200\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"\r",
													"pm.test(\"Should return an item for use in the test\", () => {\r",
													"  pm.expect(items.length).to.equal(1);\r",
													"})\r",
													"\r",
													"if (items.length > 0) {\r",
													"  const item = items[0];\r",
													"  pm.environment.set('known:' + scenarioId + ':schoolClient:classPeriod:classPeriodName', item.classPeriodName);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/classPeriods?schoolId=255901044&limit=1",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"classPeriods"
											],
											"query": [
												{
													"key": "schoolId",
													"value": "255901044"
												},
												{
													"key": "limit",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Section (LEA client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 201\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(201);\r",
													"});\r",
													"\r",
													"pm.environment.set('known:'+scenarioId+':section:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"{{supplied:{{scenarioId}}:section:sectionIdentifier}}\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Section (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 201\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(201);\r",
													"});\r",
													"\r",
													"pm.environment.set('known:'+scenarioId+':schoolClient:section:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"{{supplied:{{scenarioId}}:schoolClient:section:sectionIdentifier}}\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:schoolClient:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Section AAA (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 201\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(201);\r",
													"});\r",
													"\r",
													"pm.environment.set('known:'+scenarioId+':schoolClient:section:AAA:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"AAA\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:schoolClient:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Section BBB (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 201\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(201);\r",
													"});\r",
													"\r",
													"pm.environment.set('known:'+scenarioId+':schoolClient:section:BBB:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"BBB\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:schoolClient:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Section CCC (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 201\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(201);\r",
													"});\r",
													"\r",
													"pm.environment.set('known:'+scenarioId+':schoolClient:section:CCC:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"CCC\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:schoolClient:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Change a Key",
							"item": [
								{
									"name": "Change SectionIdentifier to XYZ (LEA client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"XYZ\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:section:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:section:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change SectionIdentifier to XYZ (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"XYZ\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:schoolClient:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:schoolClient:section:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:schoolClient:section:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Key Changes (LEA client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 200\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"\r",
													"pm.test(\"Should return the 2 key changes made by both clients\", () => {\r",
													"  pm.expect(items.length).to.equal(2);\r",
													"});\r",
													"\r",
													"const item1 = items[0];\r",
													"const item2 = items[1];\r",
													"\r",
													"pm.test(\"Expected items are returned\", () => {\r",
													"    pm.expect(item1.id).equal(pm.environment.get(`known:${scenarioId}:section:id`));\r",
													"    pm.expect(item2.id).equal(pm.environment.get(`known:${scenarioId}:schoolClient:section:id`));\r",
													"});\r",
													"\r",
													"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
													"    pm.expect(Object.keys(item1.oldKeyValues).length).equal(5);\r",
													"    pm.expect(Object.keys(item1.newKeyValues).length).equal(5);\r",
													"\r",
													"    pm.expect(Object.keys(item2.oldKeyValues).length).equal(5);\r",
													"    pm.expect(Object.keys(item2.newKeyValues).length).equal(5);\r",
													"});\r",
													"\r",
													"pm.test(\"Old key values are correctly reported\", () => {\r",
													"    pm.expect(item1.oldKeyValues.sectionIdentifier).equal(pm.environment.get(`supplied:${scenarioId}:section:sectionIdentifier`));\r",
													"    pm.expect(item2.oldKeyValues.sectionIdentifier).equal(pm.environment.get(`supplied:${scenarioId}:schoolClient:section:sectionIdentifier`));\r",
													"});\r",
													"\r",
													"pm.test(\"New key values are correctly reported\", () => {\r",
													"    pm.expect(item1.newKeyValues.sectionIdentifier).equal(\"XYZ\");\r",
													"    pm.expect(item2.newKeyValues.sectionIdentifier).equal(\"XYZ\");\r",
													"});\r",
													"\r",
													"pm.test(\"Total count is correctly reported\", () => {\r",
													"    pm.expect(parseInt(pm.response.headers.get('Total-Count'))).equal(2);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"keyChanges"
											],
											"query": [
												{
													"key": "minChangeVersion",
													"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
												},
												{
													"key": "totalCount",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Key Changes (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 200\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"\r",
													"pm.test(\"Should return the one key change made by the school-level client\", () => {\r",
													"  pm.expect(items.length).to.equal(1);\r",
													"});\r",
													"\r",
													"const item = items[0];\r",
													"\r",
													"pm.test(\"Expected item is returned\", () => {\r",
													"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:schoolClient:section:id`));\r",
													"});\r",
													"\r",
													"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
													"    pm.expect(Object.keys(item.oldKeyValues).length).equal(5);\r",
													"    pm.expect(Object.keys(item.newKeyValues).length).equal(5);\r",
													"});\r",
													"\r",
													"pm.test(\"Old key values are correctly reported\", () => {\r",
													"    pm.expect(item.oldKeyValues.sectionIdentifier).equal(pm.environment.get(`supplied:${scenarioId}:schoolClient:section:sectionIdentifier`));\r",
													"});\r",
													"\r",
													"pm.test(\"New key values are correctly reported\", () => {\r",
													"    pm.expect(item.newKeyValues.sectionIdentifier).equal(\"XYZ\");\r",
													"});\r",
													"\r",
													"pm.test(\"Total count is correctly reported\", () => {\r",
													"    pm.expect(parseInt(pm.response.headers.get('Total-Count'))).equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"keyChanges"
											],
											"query": [
												{
													"key": "minChangeVersion",
													"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
												},
												{
													"key": "totalCount",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Make additional changes to same Section",
							"item": [
								{
									"name": "Change SectionIdentifier to ABC (LEA client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"ABC\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:section:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:section:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change SectionIdentifier to ABC (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"ABC\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:schoolClient:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:schoolClient:section:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:schoolClient:section:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Key Changes (LEA client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 200\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"\r",
													"pm.test(\"Should return the 2 key changes made by both clients\", () => {\r",
													"  pm.expect(items.length).to.equal(2);\r",
													"});\r",
													"\r",
													"const item1 = items[0];\r",
													"const item2 = items[1];\r",
													"\r",
													"pm.test(\"Expected items are returned\", () => {\r",
													"    pm.expect(item1.id).equal(pm.environment.get(`known:${scenarioId}:section:id`));\r",
													"    pm.expect(item2.id).equal(pm.environment.get(`known:${scenarioId}:schoolClient:section:id`));\r",
													"});\r",
													"\r",
													"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
													"    pm.expect(Object.keys(item1.oldKeyValues).length).equal(5);\r",
													"    pm.expect(Object.keys(item1.newKeyValues).length).equal(5);\r",
													"\r",
													"    pm.expect(Object.keys(item2.oldKeyValues).length).equal(5);\r",
													"    pm.expect(Object.keys(item2.newKeyValues).length).equal(5);\r",
													"});\r",
													"\r",
													"pm.test(\"Old key values are correctly reported\", () => {\r",
													"    pm.expect(item1.oldKeyValues.sectionIdentifier).equal(pm.environment.get(`supplied:${scenarioId}:section:sectionIdentifier`));\r",
													"    pm.expect(item2.oldKeyValues.sectionIdentifier).equal(pm.environment.get(`supplied:${scenarioId}:schoolClient:section:sectionIdentifier`));\r",
													"});\r",
													"\r",
													"pm.test(\"New key values are correctly reported\", () => {\r",
													"    pm.expect(item1.newKeyValues.sectionIdentifier).equal(\"ABC\");\r",
													"    pm.expect(item2.newKeyValues.sectionIdentifier).equal(\"ABC\");\r",
													"});\r",
													"\r",
													"pm.test(\"Total count is correctly reported\", () => {\r",
													"    pm.expect(parseInt(pm.response.headers.get('Total-Count'))).equal(2);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"keyChanges"
											],
											"query": [
												{
													"key": "minChangeVersion",
													"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
												},
												{
													"key": "totalCount",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Key Changes (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 200\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"\r",
													"pm.test(\"Should return the one key change made by the school-level client\", () => {\r",
													"  pm.expect(items.length).to.equal(1);\r",
													"});\r",
													"\r",
													"const item = items[0];\r",
													"\r",
													"pm.test(\"Expected item is returned\", () => {\r",
													"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:schoolClient:section:id`));\r",
													"});\r",
													"\r",
													"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
													"    pm.expect(Object.keys(item.oldKeyValues).length).equal(5);\r",
													"    pm.expect(Object.keys(item.newKeyValues).length).equal(5);\r",
													"});\r",
													"\r",
													"pm.test(\"Old key values are correctly reported\", () => {\r",
													"    pm.expect(item.oldKeyValues.sectionIdentifier).equal(pm.environment.get(`supplied:${scenarioId}:schoolClient:section:sectionIdentifier`));\r",
													"});\r",
													"\r",
													"pm.test(\"New key values are correctly reported\", () => {\r",
													"    pm.expect(item.newKeyValues.sectionIdentifier).equal(\"ABC\");\r",
													"});\r",
													"\r",
													"pm.test(\"Total count is correctly reported\", () => {\r",
													"    pm.expect(parseInt(pm.response.headers.get('Total-Count'))).equal(1);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"keyChanges"
											],
											"query": [
												{
													"key": "minChangeVersion",
													"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
												},
												{
													"key": "totalCount",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Make changes to other Sections",
							"item": [
								{
									"name": "Expand SectionIdentifier AAA (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"AAAA\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:schoolClient:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:schoolClient:section:AAA:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:schoolClient:section:AAA:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Expand SectionIdentifier BBB (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"BBBB\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:schoolClient:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:schoolClient:section:BBB:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:schoolClient:section:BBB:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Expand SectionIdentifier BBB (School client) Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"BBBBB\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:schoolClient:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:schoolClient:section:BBB:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:schoolClient:section:BBB:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Key Changes (LEA client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 200\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"\r",
													"pm.test(\"Should return a page of 3 key changes (made by either client)\", () => {\r",
													"  pm.expect(items.length).to.equal(3);\r",
													"});\r",
													"\r",
													"const knownIds = [\r",
													"  pm.environment.get(`known:${scenarioId}:section:id`),\r",
													"  pm.environment.get(`known:${scenarioId}:schoolClient:section:id`),\r",
													"  pm.environment.get(`known:${scenarioId}:schoolClient:section:AAA:id`),\r",
													"  pm.environment.get(`known:${scenarioId}:schoolClient:section:BBB:id`),\r",
													"];\r",
													"\r",
													"pm.test(\"Items returned in the requested page are a subset of known items\", () => {\r",
													"  items.forEach(item => {\r",
													"    pm.expect(knownIds).contains(item.id);\r",
													"  });\r",
													"});\r",
													"\r",
													"pm.test(\"Total count is correctly reported as total number of items affected by key changes, rather than a count of tracked key change operations\", () => {\r",
													"    pm.expect(parseInt(pm.response.headers.get('Total-Count'))).to.equal(4);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=3",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"keyChanges"
											],
											"query": [
												{
													"key": "minChangeVersion",
													"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
												},
												{
													"key": "totalCount",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Expand SectionIdentifier CCC (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"courseOfferingReference\": {\r\n        \"localCourseCode\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:localCourseCode}}\",\r\n        \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n        \"schoolYear\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolYear}}\",\r\n        \"sessionName\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:sessionName}}\"\r\n    },\r\n    \"locationReference\": {\r\n        \"classroomIdentificationCode\": \"220\",\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"locationSchoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"sectionIdentifier\": \"CCCC\",\r\n    \"availableCredits\": 1.000,\r\n    \"educationalEnvironmentDescriptor\": \"uri://ed-fi.org/EducationalEnvironmentDescriptor#Classroom\",\r\n    \"sectionName\": \"Algebra 1\",\r\n    \"sequenceOfCourse\": 1,\r\n    \"characteristics\": [],\r\n    \"classPeriods\": [\r\n        {\r\n            \"classPeriodReference\": {\r\n                \"schoolId\": \"{{known:{{scenarioId}}:schoolClient:courseOffering:schoolId}}\",\r\n                \"classPeriodName\": \"{{known:{{scenarioId}}:schoolClient:classPeriod:classPeriodName}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"courseLevelCharacteristics\": [],\r\n    \"offeredGradeLevels\": [],\r\n    \"programs\": []\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:schoolClient:section:CCC:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:schoolClient:section:CCC:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Key Changes (LEA client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 200\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"\r",
													"pm.test(\"Should return a page of 3 key changes (made by either client)\", () => {\r",
													"  pm.expect(items.length).to.equal(3);\r",
													"});\r",
													"\r",
													"const knownIds = [\r",
													"  pm.environment.get(`known:${scenarioId}:section:id`),\r",
													"  pm.environment.get(`known:${scenarioId}:schoolClient:section:id`),\r",
													"  pm.environment.get(`known:${scenarioId}:schoolClient:section:AAA:id`),\r",
													"  pm.environment.get(`known:${scenarioId}:schoolClient:section:BBB:id`),\r",
													"  pm.environment.get(`known:${scenarioId}:schoolClient:section:CCC:id`)\r",
													"];\r",
													"\r",
													"pm.test(\"Items returned in the requested page are a subset of known items\", () => {\r",
													"  items.forEach(item => {\r",
													"    pm.expect(knownIds).contains(item.id);\r",
													"  });\r",
													"});\r",
													"\r",
													"pm.test(\"Total count is correctly reported as total number of items affected by key changes, rather than a count of tracked key change operations\", () => {\r",
													"    pm.expect(parseInt(pm.response.headers.get('Total-Count'))).to.equal(5);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}&totalCount=true&limit=3",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"keyChanges"
											],
											"query": [
												{
													"key": "minChangeVersion",
													"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
												},
												{
													"key": "totalCount",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "3"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Teardown",
							"item": [
								{
									"name": "Delete Section (LEA client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:section:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:section:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Section (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:schoolClient:section:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:schoolClient:section:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Section AAA (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:schoolClient:section:AAA:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:schoolClient:section:AAA:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Section BBB (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:schoolClient:section:BBB:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:schoolClient:section:BBB:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Section CCC (School client)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const scenarioId = pm.environment.get('scenarioId');\r",
													"\r",
													"pm.test(\"Status code is 204\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AccessToken_255901044}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sections/{{known:{{scenarioId}}:schoolClient:section:CCC:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"sections",
												"{{known:{{scenarioId}}:schoolClient:section:CCC:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clean up Environment Variables",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const __ = require('lodash');\r",
													"\r",
													"const keys = __.keys(pm.environment.toObject());\r",
													"const keysToRemove = __.filter(keys, x => __.startsWith(x, 'known:') || __.startsWith(x, 'supplied:'));\r",
													"__.each(keysToRemove, k => pm.environment.unset(k));\r",
													"\r",
													"// const remainingKeys = __.keys(pm.environment.toObject());\r",
													"// console.log('Remaining keys:' + JSON.stringify(remainingKeys));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ApiBaseUrl}}",
											"host": [
												"{{ApiBaseUrl}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Sessions",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Session",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':session:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"schoolYearTypeReference\": {\r\n        \"schoolYear\": 2022\r\n    },\r\n    \"sessionName\": \"SESSION ONE\",\r\n    \"beginDate\": \"2021-08-23\",\r\n    \"endDate\": \"2021-12-17\",\r\n    \"termDescriptor\": \"uri://ed-fi.org/TermDescriptor#Fall Semester\",\r\n    \"totalInstructionalDays\": 81,\r\n    \"academicWeeks\": [],\r\n    \"gradingPeriods\": [\r\n        {\r\n            \"gradingPeriodReference\": {\r\n                \"schoolId\": 255901001,\r\n                \"schoolYear\": 2022,\r\n                \"gradingPeriodDescriptor\": \"uri://ed-fi.org/GradingPeriodDescriptor#First Six Weeks\",\r\n                \"periodSequence\": 1\r\n            }\r\n        },\r\n        {\r\n            \"gradingPeriodReference\": {\r\n                \"schoolId\": 255901001,\r\n                \"schoolYear\": 2022,\r\n                \"gradingPeriodDescriptor\": \"uri://ed-fi.org/GradingPeriodDescriptor#Second Six Weeks\",\r\n                \"periodSequence\": 2\r\n            }\r\n        },\r\n        {\r\n            \"gradingPeriodReference\": {\r\n                \"schoolId\": 255901001,\r\n                \"schoolYear\": 2022,\r\n                \"gradingPeriodDescriptor\": \"uri://ed-fi.org/GradingPeriodDescriptor#Third Six Weeks\",\r\n                \"periodSequence\": 3\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sessions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Session Key",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"schoolYearTypeReference\": {\r\n        \"schoolYear\": 2022\r\n    },\r\n    \"sessionName\": \"SESSION TWO\",\r\n    \"beginDate\": \"2021-08-23\",\r\n    \"endDate\": \"2021-12-17\",\r\n    \"termDescriptor\": \"uri://ed-fi.org/TermDescriptor#Fall Semester\",\r\n    \"totalInstructionalDays\": 81,\r\n    \"academicWeeks\": [],\r\n    \"gradingPeriods\": [\r\n        {\r\n            \"gradingPeriodReference\": {\r\n                \"schoolId\": 255901001,\r\n                \"schoolYear\": 2022,\r\n                \"gradingPeriodDescriptor\": \"uri://ed-fi.org/GradingPeriodDescriptor#First Six Weeks\",\r\n                \"periodSequence\": 1\r\n            }\r\n        },\r\n        {\r\n            \"gradingPeriodReference\": {\r\n                \"schoolId\": 255901001,\r\n                \"schoolYear\": 2022,\r\n                \"gradingPeriodDescriptor\": \"uri://ed-fi.org/GradingPeriodDescriptor#Second Six Weeks\",\r\n                \"periodSequence\": 2\r\n            }\r\n        },\r\n        {\r\n            \"gradingPeriodReference\": {\r\n                \"schoolId\": 255901001,\r\n                \"schoolYear\": 2022,\r\n                \"gradingPeriodDescriptor\": \"uri://ed-fi.org/GradingPeriodDescriptor#Third Six Weeks\",\r\n                \"periodSequence\": 3\r\n            }\r\n        }\r\n    ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sessions/{{known:{{scenarioId}}:session:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"sessions",
										"{{known:{{scenarioId}}:session:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key Changes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Single item with the updated key is returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:session:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.oldKeyValues).length).equal(3);\r",
											"    pm.expect(Object.keys(item.newKeyValues).length).equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Old key values are correctly reported\", () => {\r",
											"    pm.expect(item.oldKeyValues.sessionName).equal(\"SESSION ONE\");\r",
											"});\r",
											"\r",
											"pm.test(\"New key values are correctly reported\", () => {\r",
											"    pm.expect(item.newKeyValues.sessionName).equal(\"SESSION TWO\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sessions/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"sessions",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Session",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/sessions/{{known:{{scenarioId}}:session:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"sessions",
										"{{known:{{scenarioId}}:session:id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "StudentSchoolAssociations",
					"item": [
						{
							"name": "Get AvailableChangeVersions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"const responseItem = pm.response.json();",
											"const scenarioId = pm.environment.get('scenarioId');",
											"pm.environment.set('known:'+scenarioId+':newestChangeVersion', responseItem.newestChangeVersion + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"function newGuid() { return uuid.v4().toString().replace(/[^a-zA-Z0-9 ]/g,\"\"); }\r",
											"function createScenarioId() { return newGuid().substring(0,5); }\r",
											"pm.environment.set('scenarioId', createScenarioId());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"changeQueries",
										"v1",
										"availableChangeVersions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create School",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"pm.environment.set('known:'+scenarioId+':school:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"localEducationAgencyReference\": {\r\n    \"localEducationAgencyId\": 255901\r\n  },\r\n  \"schoolId\": 255901777,\r\n  \"nameOfInstitution\": \"School to be Deleted\",\r\n  \"operationalStatusDescriptor\": \"uri://ed-fi.org/OperationalStatusDescriptor#Active\",\r\n  \"shortNameOfInstitution\": \"GBMS\",\r\n  \"webSite\": \"http://www.GBISD.edu/GBMS/\",\r\n  \"administrativeFundingControlDescriptor\": \"uri://ed-fi.org/AdministrativeFundingControlDescriptor#Public School\",\r\n  \"charterStatusDescriptor\": \"uri://ed-fi.org/CharterStatusDescriptor#Not a Charter School\",\r\n  \"schoolTypeDescriptor\": \"uri://ed-fi.org/SchoolTypeDescriptor#Regular\",\r\n  \"titleIPartASchoolDesignationDescriptor\": \"uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor#Not A Title I School\",\r\n  \"addresses\": [\r\n    {\r\n      \"addressTypeDescriptor\": \"uri://ed-fi.org/AddressTypeDescriptor#Mailing\",\r\n      \"city\": \"Grand Bend\",\r\n      \"postalCode\": \"73334-3393\",\r\n      \"stateAbbreviationDescriptor\": \"uri://ed-fi.org/StateAbbreviationDescriptor#TX\",\r\n      \"streetNumberName\": \"P.O. Box 3393\",\r\n      \"nameOfCounty\": \"Williston\",\r\n      \"periods\": []\r\n    },\r\n    {\r\n      \"addressTypeDescriptor\": \"uri://ed-fi.org/AddressTypeDescriptor#Physical\",\r\n      \"city\": \"Grand Bend\",\r\n      \"postalCode\": \"73334\",\r\n      \"stateAbbreviationDescriptor\": \"uri://ed-fi.org/StateAbbreviationDescriptor#TX\",\r\n      \"streetNumberName\": \"9993 Space Blvd.\",\r\n      \"nameOfCounty\": \"Williston\",\r\n      \"periods\": []\r\n    }\r\n  ],\r\n  \"educationOrganizationCategories\": [\r\n    {\r\n      \"educationOrganizationCategoryDescriptor\": \"uri://ed-fi.org/EducationOrganizationCategoryDescriptor#School\"\r\n    }\r\n  ],\r\n  \"identificationCodes\": [\r\n    {\r\n      \"educationOrganizationIdentificationSystemDescriptor\": \"uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor#SEA\",\r\n      \"identificationCode\": \"255901044\"\r\n    }\r\n  ],\r\n  \"indicators\": [\r\n    {\r\n      \"indicatorDescriptor\": \"uri://gbisd.edu/IndicatorDescriptor#Retention Rate\",\r\n      \"indicatorGroupDescriptor\": \"uri://gbisd.edu/IndicatorGroupDescriptor#Staff Indicator\",\r\n      \"indicatorLevelDescriptor\": \"uri://gbisd.edu/IndicatorLevelDescriptor#Medium Retention\",\r\n      \"indicatorValue\": \"87\",\r\n      \"periods\": [\r\n        {\r\n          \"beginDate\": \"2010-08-29\",\r\n          \"endDate\": \"2011-06-30\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"institutionTelephones\": [\r\n    {\r\n      \"institutionTelephoneNumberTypeDescriptor\": \"uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor#Fax\",\r\n      \"telephoneNumber\": \"(950) 366-9374\"\r\n    },\r\n    {\r\n      \"institutionTelephoneNumberTypeDescriptor\": \"uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor#Main\",\r\n      \"telephoneNumber\": \"(950) 325-3164\"\r\n    }\r\n  ],\r\n  \"internationalAddresses\": [],\r\n  \"schoolCategories\": [\r\n    {\r\n      \"schoolCategoryDescriptor\": \"uri://ed-fi.org/SchoolCategoryDescriptor#Middle School\"\r\n    }\r\n  ],\r\n  \"gradeLevels\": [\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Eighth grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Seventh grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Sixth grade\"\r\n    }\r\n  ],\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"cteProgram\": {\r\n        \"careerPathwayDescriptor\": \"uri://ed-fi.org/CareerPathwayDescriptor#Other\"\r\n      }\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Student School Association",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 201\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':studentSchoolAssociation:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"studentReference\": {\r\n        \"studentUniqueId\": \"604821\"\r\n    },\r\n    \"entryDate\": \"2010-08-23\",\r\n    \"entryGradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Eighth grade\",\r\n    \"alternativeGraduationPlans\": [],\r\n    \"educationPlans\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentSchoolAssociations",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentSchoolAssociations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Enrollment Date",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"studentReference\": {\r\n        \"studentUniqueId\": \"604821\"\r\n    },\r\n    \"entryDate\": \"2010-08-24\",\r\n    \"entryGradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Eighth grade\",\r\n    \"alternativeGraduationPlans\": [],\r\n    \"educationPlans\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentSchoolAssociations/{{known:{{scenarioId}}:studentSchoolAssociation:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentSchoolAssociations",
										"{{known:{{scenarioId}}:studentSchoolAssociation:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key Changes #1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Single item with the updated key is returned\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:studentSchoolAssociation:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.oldKeyValues).length).equal(3);\r",
											"    pm.expect(Object.keys(item.newKeyValues).length).equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Old key value reports the original value\", () => {\r",
											"    pm.expect(item.oldKeyValues.entryDate).equal(\"2010-08-23\");\r",
											"    pm.expect(item.oldKeyValues.schoolId).equal(255901001);\r",
											"    pm.expect(item.oldKeyValues.studentUniqueId).equal(\"604821\");\r",
											"});\r",
											"\r",
											"pm.test(\"New key value reports the most recent update\", () => {\r",
											"    pm.expect(item.newKeyValues.entryDate).equal(\"2010-08-24\");\r",
											"    pm.expect(item.newKeyValues.schoolId).equal(255901001);\r",
											"    pm.expect(item.newKeyValues.studentUniqueId).equal(\"604821\");\r",
											"});\r",
											"\r",
											"pm.environment.set('known:'+scenarioId+':studentSchoolAssociation:initialChangeVersion', item.changeVersion);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentSchoolAssociations/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentSchoolAssociations",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Enrollment School",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901777\r\n    },\r\n    \"studentReference\": {\r\n        \"studentUniqueId\": \"604821\"\r\n    },\r\n    \"entryDate\": \"2010-08-24\",\r\n    \"entryGradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Eighth grade\",\r\n    \"alternativeGraduationPlans\": [],\r\n    \"educationPlans\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentSchoolAssociations/{{known:{{scenarioId}}:studentSchoolAssociation:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentSchoolAssociations",
										"{{known:{{scenarioId}}:studentSchoolAssociation:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key Changes #2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Only a single entry should be returned despite multiple key changes\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Item with the updated key is returned\", () => {\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:studentSchoolAssociation:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.oldKeyValues).length).equal(3);\r",
											"    pm.expect(Object.keys(item.newKeyValues).length).equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Old key value reports the original value\", () => {\r",
											"    pm.expect(item.oldKeyValues.entryDate).equal(\"2010-08-23\");\r",
											"    pm.expect(item.oldKeyValues.schoolId).equal(255901001);\r",
											"    pm.expect(item.oldKeyValues.studentUniqueId).equal(\"604821\");\r",
											"});\r",
											"\r",
											"pm.test(\"New key value reports the most recent update\", () => {\r",
											"    pm.expect(item.newKeyValues.entryDate).equal(\"2010-08-24\");\r",
											"    pm.expect(item.newKeyValues.schoolId).equal(255901777);\r",
											"    pm.expect(item.newKeyValues.studentUniqueId).equal(\"604821\");\r",
											"});\r",
											"\r",
											"pm.test(\"ChangeVersion reported is later than the changeVersion of the intermediate update\", () => {\r",
											"    const intermediateUpdateChangeVersion = pm.environment.get('known:'+scenarioId+':studentSchoolAssociation:initialChangeVersion');\r",
											"    pm.expect(item.changeVersion).to.be.above(intermediateUpdateChangeVersion);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentSchoolAssociations/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentSchoolAssociations",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Student School Association",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentSchoolAssociations/{{known:{{scenarioId}}:studentSchoolAssociation:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentSchoolAssociations",
										"{{known:{{scenarioId}}:studentSchoolAssociation:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Schools",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 204\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools/{{known:{{scenarioId}}:school:id}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"schools",
										"{{known:{{scenarioId}}:school:id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key Changes #3 (after deleting School)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const scenarioId = pm.environment.get('scenarioId');\r",
											"\r",
											"pm.test(\"Status code is 200\", () => {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"const item = items[0];\r",
											"\r",
											"pm.test(\"Only a single entry should be returned despite multiple key changes\", () => {\r",
											"    pm.expect(items.length).equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Item with the updated key is returned\", () => {\r",
											"    pm.expect(item.id).equal(pm.environment.get(`known:${scenarioId}:studentSchoolAssociation:id`));\r",
											"});\r",
											"\r",
											"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
											"    pm.expect(Object.keys(item.oldKeyValues).length).equal(3);\r",
											"    pm.expect(Object.keys(item.newKeyValues).length).equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Old key value reports the original value\", () => {\r",
											"    pm.expect(item.oldKeyValues.entryDate).equal(\"2010-08-23\");\r",
											"    pm.expect(item.oldKeyValues.schoolId).equal(255901001);\r",
											"    pm.expect(item.oldKeyValues.studentUniqueId).equal(\"604821\");\r",
											"});\r",
											"\r",
											"pm.test(\"New key value reports the most recent update\", () => {\r",
											"    pm.expect(item.newKeyValues.entryDate).equal(\"2010-08-24\");\r",
											"    pm.expect(item.newKeyValues.schoolId).equal(255901777);\r",
											"    pm.expect(item.newKeyValues.studentUniqueId).equal(\"604821\");\r",
											"});\r",
											"\r",
											"pm.test(\"ChangeVersion reported is later than the changeVersion of the intermediate update\", () => {\r",
											"    const intermediateUpdateChangeVersion = pm.environment.get('known:'+scenarioId+':studentSchoolAssociation:initialChangeVersion');\r",
											"    pm.expect(item.changeVersion).to.be.above(intermediateUpdateChangeVersion);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentSchoolAssociations/keyChanges?minChangeVersion={{known:{{scenarioId}}:newestChangeVersion}}",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"studentSchoolAssociations",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Students and Parents",
					"item": [
						{
							"name": "Initialization",
							"item": [
								{
									"name": "Get AvailableChangeVersions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", () => {",
													"    pm.expect(pm.response.code).to.equal(200);",
													"});",
													"",
													"const responseItem = pm.response.json();",
													"pm.environment.set('known:newestChangeVersion', responseItem.newestChangeVersion + 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/changeQueries/v1/availableChangeVersions",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"changeQueries",
												"v1",
												"availableChangeVersions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create School",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(201);\r",
													"});\r",
													"\r",
													"pm.environment.set('known:school:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"localEducationAgencyReference\": {\r\n    \"localEducationAgencyId\": 255901\r\n  },\r\n  \"schoolId\": 255901777,\r\n  \"nameOfInstitution\": \"School to be Deleted\",\r\n  \"operationalStatusDescriptor\": \"uri://ed-fi.org/OperationalStatusDescriptor#Active\",\r\n  \"shortNameOfInstitution\": \"GBMS\",\r\n  \"webSite\": \"http://www.GBISD.edu/GBMS/\",\r\n  \"administrativeFundingControlDescriptor\": \"uri://ed-fi.org/AdministrativeFundingControlDescriptor#Public School\",\r\n  \"charterStatusDescriptor\": \"uri://ed-fi.org/CharterStatusDescriptor#Not a Charter School\",\r\n  \"schoolTypeDescriptor\": \"uri://ed-fi.org/SchoolTypeDescriptor#Regular\",\r\n  \"titleIPartASchoolDesignationDescriptor\": \"uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor#Not A Title I School\",\r\n  \"addresses\": [\r\n    {\r\n      \"addressTypeDescriptor\": \"uri://ed-fi.org/AddressTypeDescriptor#Mailing\",\r\n      \"city\": \"Grand Bend\",\r\n      \"postalCode\": \"73334-3393\",\r\n      \"stateAbbreviationDescriptor\": \"uri://ed-fi.org/StateAbbreviationDescriptor#TX\",\r\n      \"streetNumberName\": \"P.O. Box 3393\",\r\n      \"nameOfCounty\": \"Williston\",\r\n      \"periods\": []\r\n    },\r\n    {\r\n      \"addressTypeDescriptor\": \"uri://ed-fi.org/AddressTypeDescriptor#Physical\",\r\n      \"city\": \"Grand Bend\",\r\n      \"postalCode\": \"73334\",\r\n      \"stateAbbreviationDescriptor\": \"uri://ed-fi.org/StateAbbreviationDescriptor#TX\",\r\n      \"streetNumberName\": \"9993 Space Blvd.\",\r\n      \"nameOfCounty\": \"Williston\",\r\n      \"periods\": []\r\n    }\r\n  ],\r\n  \"educationOrganizationCategories\": [\r\n    {\r\n      \"educationOrganizationCategoryDescriptor\": \"uri://ed-fi.org/EducationOrganizationCategoryDescriptor#School\"\r\n    }\r\n  ],\r\n  \"identificationCodes\": [\r\n    {\r\n      \"educationOrganizationIdentificationSystemDescriptor\": \"uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor#SEA\",\r\n      \"identificationCode\": \"255901044\"\r\n    }\r\n  ],\r\n  \"indicators\": [\r\n    {\r\n      \"indicatorDescriptor\": \"uri://gbisd.edu/IndicatorDescriptor#Retention Rate\",\r\n      \"indicatorGroupDescriptor\": \"uri://gbisd.edu/IndicatorGroupDescriptor#Staff Indicator\",\r\n      \"indicatorLevelDescriptor\": \"uri://gbisd.edu/IndicatorLevelDescriptor#Medium Retention\",\r\n      \"indicatorValue\": \"87\",\r\n      \"periods\": [\r\n        {\r\n          \"beginDate\": \"2010-08-29\",\r\n          \"endDate\": \"2011-06-30\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"institutionTelephones\": [\r\n    {\r\n      \"institutionTelephoneNumberTypeDescriptor\": \"uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor#Fax\",\r\n      \"telephoneNumber\": \"(950) 366-9374\"\r\n    },\r\n    {\r\n      \"institutionTelephoneNumberTypeDescriptor\": \"uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor#Main\",\r\n      \"telephoneNumber\": \"(950) 325-3164\"\r\n    }\r\n  ],\r\n  \"internationalAddresses\": [],\r\n  \"schoolCategories\": [\r\n    {\r\n      \"schoolCategoryDescriptor\": \"uri://ed-fi.org/SchoolCategoryDescriptor#Middle School\"\r\n    }\r\n  ],\r\n  \"gradeLevels\": [\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Eighth grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Seventh grade\"\r\n    },\r\n    {\r\n      \"gradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Sixth grade\"\r\n    }\r\n  ],\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"cteProgram\": {\r\n        \"careerPathwayDescriptor\": \"uri://ed-fi.org/CareerPathwayDescriptor#Other\"\r\n      }\r\n    }\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"schools"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Student",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set('supplied:studentUniqueId', pm.variables.replaceIn('{{$guid}}').substring(0, 5));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(201);\r",
													"});\r",
													"\r",
													"pm.environment.set('known:student:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"studentUniqueId\": \"{{supplied:studentUniqueId}}\",\r\n  \"birthDate\": \"2008-09-13\",\r\n  \"firstName\": \"John\",\r\n  \"lastSurname\": \"Doe\",\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"petPreference\": {\r\n        \"minimumWeight\": 0,\r\n        \"maximumWeight\": 10\r\n      }\r\n    }\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/students",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"students"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Parent",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set('supplied:parentUniqueId', pm.variables.replaceIn('{{$guid}}').substring(0, 5));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(201);\r",
													"});\r",
													"\r",
													"pm.environment.set('known:parent:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"parentUniqueId\": \"{{supplied:parentUniqueId}}\",\r\n  \"birthDate\": \"1988-09-13\",\r\n  \"firstName\": \"John\",\r\n  \"lastSurname\": \"Doe\",\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"teacherConference\": {\r\n        \"dayOfWeek\": \"Monday\",\r\n        \"endTime\": \"12:00:00\",\r\n        \"startTime\": \"12:00:00\"\r\n      },\r\n      \"authors\": [],\r\n      \"favoriteBookTitles\": [\r\n        {\r\n          \"favoriteBookTitle\": \"Green Eggs and Ham\"\r\n        }\r\n      ],\r\n      \"isSportsFan\": false\r\n    }\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/parents",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"parents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Student School Association",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(201);\r",
													"});\r",
													"\r",
													"pm.environment.set('known:studentSchoolAssociation:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"schoolReference\": {\r\n        \"schoolId\": 255901001\r\n    },\r\n    \"studentReference\": {\r\n        \"studentUniqueId\": \"{{supplied:studentUniqueId}}\"\r\n    },\r\n    \"entryDate\": \"2010-08-23\",\r\n    \"entryGradeLevelDescriptor\": \"uri://ed-fi.org/GradeLevelDescriptor#Eighth grade\",\r\n    \"alternativeGraduationPlans\": [],\r\n    \"educationPlans\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentSchoolAssociations",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"studentSchoolAssociations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Student Parent Association",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", () => {\r",
													"    pm.expect(pm.response.code).to.equal(201);\r",
													"});\r",
													"\r",
													"pm.environment.set('known:studentParentAssociation:id', pm.response.headers.one('Location').value.split(\"/\").pop());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"parentReference\": {\r\n    \"parentUniqueId\": \"{{supplied:parentUniqueId}}\"\r\n  },\r\n  \"studentReference\": {\r\n    \"studentUniqueId\": \"{{supplied:studentUniqueId}}\"\r\n  },\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"bedtimeReader\": true\r\n    }\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentParentAssociations",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"studentParentAssociations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Students",
							"item": [
								{
									"name": "Change StudentUniqueId and First Name",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"studentUniqueId\": \"{{supplied:studentUniqueId}}-Changed\",\r\n  \"birthDate\": \"2008-09-13\",\r\n  \"firstName\": \"Johnny\",\r\n  \"lastSurname\": \"Doe\",\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"petPreference\": {\r\n        \"minimumWeight\": 0,\r\n        \"maximumWeight\": 10\r\n      }\r\n    }\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/students/{{known:student:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"students",
												"{{known:student:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Students Changes",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"const item = items[0];\r",
													"\r",
													"pm.test(\"Single item with the updated key is returned\", () => {\r",
													"  pm.expect(items.length).equal(1);\r",
													"  pm.expect(item.id).equal(pm.environment.get(`known:student:id`));\r",
													"});\r",
													"\r",
													"pm.test(\"Values reflect the changes\", () => {\r",
													"  pm.expect(item.firstName).equals('Johnny');\r",
													"  pm.expect(item.studentUniqueId).equals(`${pm.environment.get('supplied:studentUniqueId')}-Changed`);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/students?minChangeVersion={{known:newestChangeVersion}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"students"
											],
											"query": [
												{
													"key": "minChangeVersion",
													"value": "{{known:newestChangeVersion}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Key Changes",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"const item = items[0];\r",
													"\r",
													"pm.test(\"Single item with the updated key is returned\", () => {\r",
													"  pm.expect(items.length).equal(1);\r",
													"  pm.expect(item.id).equal(pm.environment.get(`known:student:id`));\r",
													"});\r",
													"\r",
													"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
													"  pm.expect(Object.keys(item.oldKeyValues).length).equal(1);\r",
													"  pm.expect(Object.keys(item.newKeyValues).length).equal(1);\r",
													"});\r",
													"\r",
													"pm.test(\"Old key value reports the original value\", () => {\r",
													"  pm.expect(item.oldKeyValues.studentUniqueId).equal(pm.environment.get('supplied:studentUniqueId'));\r",
													"});\r",
													"\r",
													"pm.test(\"New key value reports the most recent update\", () => {\r",
													"  pm.expect(item.newKeyValues.studentUniqueId).equal(`${pm.environment.get('supplied:studentUniqueId')}-Changed`);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/students/keyChanges?minChangeVersion={{known:newestChangeVersion}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"students",
												"keyChanges"
											],
											"query": [
												{
													"key": "minChangeVersion",
													"value": "{{known:newestChangeVersion}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Parents",
							"item": [
								{
									"name": "Change ParentUniqueId and First Name",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"parentUniqueId\": \"{{supplied:parentUniqueId}}-Changed\",\r\n  \"birthDate\": \"1988-09-13\",\r\n  \"firstName\": \"Jonathon\",\r\n  \"lastSurname\": \"Doe\",\r\n  \"_ext\": {\r\n    \"Sample\": {\r\n      \"teacherConference\": {\r\n        \"dayOfWeek\": \"Monday\",\r\n        \"endTime\": \"12:00:00\",\r\n        \"startTime\": \"12:00:00\"\r\n      },\r\n      \"authors\": [],\r\n      \"favoriteBookTitles\": [\r\n        {\r\n          \"favoriteBookTitle\": \"Green Eggs and Ham\"\r\n        }\r\n      ],\r\n      \"isSportsFan\": false\r\n    }\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/parents/{{known:parent:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"parents",
												"{{known:parent:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Parents Changes",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"const item = items[0];\r",
													"\r",
													"pm.test(\"Single item with the updated key is returned\", () => {\r",
													"  pm.expect(items.length).equal(1);\r",
													"  pm.expect(item.id).equal(pm.environment.get(`known:parent:id`));\r",
													"});\r",
													"\r",
													"pm.test(\"Values reflect the changes\", () => {\r",
													"  pm.expect(item.firstName).equals('Jonathon');\r",
													"  pm.expect(item.parentUniqueId).equals(`${pm.environment.get('supplied:parentUniqueId')}-Changed`);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/parents?minChangeVersion={{known:newestChangeVersion}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"parents"
											],
											"query": [
												{
													"key": "minChangeVersion",
													"value": "{{known:newestChangeVersion}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Key Changes",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(200);\r",
													"});\r",
													"\r",
													"const items = pm.response.json();\r",
													"const item = items[0];\r",
													"\r",
													"pm.test(\"Single item with the updated key is returned\", () => {\r",
													"  pm.expect(items.length).equal(1);\r",
													"  pm.expect(item.id).equal(pm.environment.get(`known:parent:id`));\r",
													"});\r",
													"\r",
													"pm.test(\"Old and new key values contain the correct number of properties\", () => {\r",
													"  pm.expect(Object.keys(item.oldKeyValues).length).equal(1);\r",
													"  pm.expect(Object.keys(item.newKeyValues).length).equal(1);\r",
													"});\r",
													"\r",
													"pm.test(\"Old key value reports the original value\", () => {\r",
													"  pm.expect(item.oldKeyValues.parentUniqueId).equal(pm.environment.get('supplied:parentUniqueId'));\r",
													"});\r",
													"\r",
													"pm.test(\"New key value reports the most recent update\", () => {\r",
													"  pm.expect(item.newKeyValues.parentUniqueId).equal(`${pm.environment.get('supplied:parentUniqueId')}-Changed`);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/parents/keyChanges?minChangeVersion={{known:newestChangeVersion}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"parents",
												"keyChanges"
											],
											"query": [
												{
													"key": "minChangeVersion",
													"value": "{{known:newestChangeVersion}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Teardown",
							"item": [
								{
									"name": "Delete Student Parent Association",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentParentAssociations/{{known:studentParentAssociation:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"studentParentAssociations",
												"{{known:studentParentAssociation:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Parent",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/parents/{{known:parent:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"parents",
												"{{known:parent:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Student School Association",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/studentSchoolAssociations/{{known:studentSchoolAssociation:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"studentSchoolAssociations",
												"{{known:studentSchoolAssociation:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Student",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/students/{{known:student:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"students",
												"{{known:student:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete School",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", () => {\r",
													"  pm.expect(pm.response.code).to.equal(204);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/schools/{{known:school:id}}",
											"host": [
												"{{ApiBaseUrl}}"
											],
											"path": [
												"data",
												"v3",
												"ed-fi",
												"schools",
												"{{known:school:id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clean up Environment Variables",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Remove all environment variables that start with \"known:\" or \"supplied:\"\r",
													"_.chain(_.keys(pm.environment.toObject()))\r",
													"  .filter(x => _.startsWith(x, 'known:') || _.startsWith(x, 'supplied:'))\r",
													"  .each(k => pm.environment.unset(k)).value();"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ApiBaseUrl}}",
											"host": [
												"{{ApiBaseUrl}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Descriptors",
					"item": [
						{
							"name": "Get Key Changes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"\r",
											"pm.test(\"Should return an empty array\", () => {\r",
											"  pm.expect(items.length).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Should not return a total count header\", () => {\r",
											"  pm.expect(pm.response.headers.get('Total-Count')).is.undefined;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/gradeLevelDescriptors/keyChanges",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"gradeLevelDescriptors",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Key Changes with count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"const items = pm.response.json();\r",
											"\r",
											"pm.test(\"Should return an empty array\", () => {\r",
											"  pm.expect(items.length).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Should return a total count header with a 0 value\", () => {\r",
											"  pm.expect(parseInt(pm.response.headers.get('Total-Count'))).equal(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ApiBaseUrl}}/data/v3/ed-fi/gradeLevelDescriptors/keyChanges?totalCount=true",
									"host": [
										"{{ApiBaseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"ed-fi",
										"gradeLevelDescriptors",
										"keyChanges"
									],
									"query": [
										{
											"key": "minChangeVersion",
											"value": "{{known:{{scenarioId}}:newestChangeVersion}}",
											"disabled": true
										},
										{
											"key": "totalCount",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Clean Up Test Data",
			"item": [
				{
					"name": "Clean up Environment Variables",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Remove all environment variables that start with \"known:\" or \"supplied:\"\r",
									"_.chain(_.keys(pm.environment.toObject()))\r",
									"  .filter(x => _.startsWith(x, 'known:') || _.startsWith(x, 'supplied:'))\r",
									"  .each(k => pm.environment.unset(k)).value();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ApiBaseUrl}}",
							"host": [
								"{{ApiBaseUrl}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{AccessToken_255901}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"CreateAccessToken(\"TokenExpiry_255901\",\"AccessToken_255901\",\"ApiKey_255901\",\"ApiSecret_255901\")",
					"",
					"CreateAccessToken(\"TokenExpiry_Other_Namespace\",\"AccessToken_Other_Namespace\",\"ApiKey_Other_Namespace\",\"ApiSecret_Other_Namespace\")",
					"",
					"CreateAccessToken(\"TokenExpiry_255901044\",\"AccessToken_255901044\",\"ApiKey_255901044\",\"ApiSecret_255901044\")",
					"",
					"// Adapted from: https://marcin-chwedczuk.github.io/automatically-generate-new-oauth2-tokens-when-using-postman",
					"// Assumes Environment with Environment Variables: ApiBaseUrl, ApiKey, ApiSecret",
					"// See https://gist.github.com/blmeyers/21138bbe6f80b8c35701a8754bfe59d5 for an environment sample for Local (NOTE: environment variable names have been changed from the gist -- you must adjust accordingly)",
					"// Handles auto refreshing based on provided expiration, but doesn't handle the token being revoked early",
					"// If stuck with \"Bad Token\" or \"Not Authenticated\", just delete the Token or TokenExpiry variables to force a new token",
					"function CreateAccessToken(TokenExpiry,AccessToken,ApiKey, ApiSecret)",
					"                  {",
					"let tokenExpiration = pm.environment.get(TokenExpiry);",
					"let currentToken = pm.environment.get(AccessToken);",
					"let  getToken = true;",
					"if (!tokenExpiration || ",
					"    !currentToken) {",
					"    console.log('Token or expiry date are missing, retrieving new token')",
					"} else if (tokenExpiration <= (new Date()).getTime()) {",
					"    console.log('Token is expired, retrieving new token')",
					"} else {",
					"    getToken = false;",
					"}",
					"if (getToken === true) {",
					"    let tokenUrl = pm.environment.get('ApiBaseUrl') + '/oauth/token';",
					"    let clientId = pm.environment.get(ApiKey);",
					"    let clientSecret = pm.environment.get(ApiSecret);",
					"    let grantType = 'client_credentials';",
					"    ",
					"    let getTokenRequest = {",
					"        method: 'POST',",
					"        url: tokenUrl,",
					"        auth: {",
					"            type: \"basic\",",
					"            basic: [",
					"                { key: \"username\", value: clientId },",
					"                { key: \"password\", value: clientSecret }",
					"            ]",
					"        },",
					"        header: [",
					"            \"content-type:application/json\"",
					"        ],",
					"        body: {",
					"            mode: \"raw\",",
					"            raw: JSON.stringify({ grant_type: grantType })",
					"        }",
					"    };",
					"    ",
					"    pm.sendRequest(getTokenRequest, (err, response) => {",
					"        let jsonResponse = response.json(),",
					"            newAccessToken = jsonResponse.access_token;",
					"    ",
					"        // console.log({ err, jsonResponse, newAccessToken })",
					"    ",
					"        pm.environment.set(AccessToken, newAccessToken);",
					"    ",
					"        let expiryDate = new Date();",
					"        expiryDate.setSeconds(expiryDate.getSeconds() + jsonResponse.expires_in);",
					"        pm.environment.set(TokenExpiry, expiryDate.getTime());",
					"    });",
					"}",
					"}",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}