<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" assembly="{{Assembly}}" namespace="{{Namespace}}" default-access="property" auto-import="false">

{{#Aggregates}}
    {{#Classes}}
        {{#IsAggregateRoot}}
            {{#IsReferenceable}}
            {{^IsQueryModelContext}}
    <!-- Aggregate reference data class mapping -->
    <class name="{{ReferenceClassName}}" table="{{TableName}}" lazy="true" {{#SchemaName}} schema="{{SchemaName}}" {{/SchemaName}}>
        {{#Id}}
        <id name="{{PropertyName}}" column="{{ColumnName}}" type="{{NHibernateTypeName}}" {{#MaxLength}} length="{{MaxLength}}" {{/MaxLength}}>
            <generator class="{{GeneratorClass}}" />
        </id>
        {{/Id}}
        {{#CompositeId}}
        <!-- Composite primary key -->
        <composite-id>
            {{#KeyProperties}}
            <key-property name="{{PropertyName}}" column="{{ColumnName}}" type="{{NHibernateTypeName}}" {{#MaxLength}} length="{{MaxLength}}" {{/MaxLength}} />
            {{/KeyProperties}}
            {{#KeyManyToOne}}
            <key-many-to-one name="{{Name}}" {{#HasClassName}} class="{{ClassName}}" {{/HasClassName}}>
                {{#OrderedParentColumns}}
                <column name="{{Name}}" />
                {{/OrderedParentColumns}}
            </key-many-to-one>
            {{/KeyManyToOne}}
        </composite-id>
        {{/CompositeId}}

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        {{#HasDiscriminator}}
        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
        {{/HasDiscriminator}}
    </class>
            {{/IsQueryModelContext}}
            {{/IsReferenceable}}
        {{/IsAggregateRoot}}

  <!-- Class definition -->
  <class name="{{ClassName}}" table="{{TableName}}" lazy="false"{{#SchemaName}} schema="{{SchemaName}}"{{/SchemaName}}{{#IsAbstract}} abstract="true"{{/IsAbstract}}{{#HasDiscriminator}} discriminator-value="NULL"{{/HasDiscriminator}}>
        {{#Id}}
    <id name="{{PropertyName}}" column="{{ColumnName}}" type="{{NHibernateTypeName}}"{{#MaxLength}} length="{{MaxLength}}"{{/MaxLength}}>
      <generator class="{{GeneratorClass}}" />
    </id>
        {{/Id}}
        {{#CompositeId}}
    <!-- Composite primary key -->
    <composite-id>
            {{#KeyProperties}}
      <key-property name="{{PropertyName}}" column="{{ColumnName}}" type="{{NHibernateTypeName}}"{{#MaxLength}} length="{{MaxLength}}"{{/MaxLength}} />
            {{/KeyProperties}}
            {{#KeyManyToOne}}
      <key-many-to-one name="{{Name}}"{{#HasClassName}} class="{{ClassName}}"{{/HasClassName}}>
                {{#OrderedParentColumns}}
        <column name="{{Name}}" />
                {{/OrderedParentColumns}}
      </key-many-to-one>
            {{/KeyManyToOne}}
    </composite-id>
        {{/CompositeId}}
        {{#IsAggregateRoot}}

    <!-- Discriminator -->
    {{#HasDiscriminator}}
    <discriminator column="Discriminator" type="string" />
    {{/HasDiscriminator}}

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

        {{/IsAggregateRoot}}
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

        {{#IsAggregateRoot}}
    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
        {{/IsAggregateRoot}}

    <!-- Properties -->
    {{#HasDiscriminator}}
      {{#IsQueryModelContext}}
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
      {{/IsQueryModelContext}}
    {{/HasDiscriminator}}
        {{#Properties}}
    <property name="{{PropertyName}}" column="{{ColumnName}}" type="{{NHibernateTypeName}}"{{#MaxLength}} length="{{MaxLength}}"{{/MaxLength}}{{^IsNullable}} not-null="true"{{/IsNullable}}{{#IsReadOnly}} insert="false" update="false"{{/IsReadOnly}} />
        {{/Properties}}
        {{#OneToOneChildMappings}}

    <!-- One-to-one child mappings -->
            {{#IsQueryModelMapping}}
    <one-to-one name="{{Name}}" class="{{ClassName}}" />
            {{/IsQueryModelMapping}}
            {{^IsQueryModelMapping}}
    <set name="{{Name}}" access="{{Access}}" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
                {{#Columns}}
        <column name="{{Name}}" />
                {{/Columns}}
      </key>
      <one-to-many class="{{ClassName}}" />
    </set>
            {{/IsQueryModelMapping}}
        {{/OneToOneChildMappings}}

    <!-- Aggregate references -->
    {{#AggregateReferences}}
    <many-to-one name="{{BagName}}" class="{{AggregateReferenceClassName}}" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      {{#Columns}}
      <column name="{{Name}}" />
      {{/Columns}}
    </many-to-one>
    {{/AggregateReferences}}

    <!-- Back references -->
        {{#HasBackReferences}}
            {{#BackReferences}}
    <many-to-one name="{{BagName}}" class="{{ParentClassName}}" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
                {{#Columns}}
        <column name="{{Name}}" />
                {{/Columns}}
    </many-to-one>
            {{/BackReferences}}
        {{/HasBackReferences}}

    <!-- Collections -->
        {{#Collections}}
    <set name="{{BagName}}"{{#IsEmbeddedCollection}} cascade="all-delete-orphan" inverse="true" lazy="false"{{/IsEmbeddedCollection}}{{^IsEmbeddedCollection}} cascade="none" lazy="true"{{/IsEmbeddedCollection}}>
      <key>
            {{#Columns}}
        <column name="{{Name}}" />
            {{/Columns}}
      </key>
      <one-to-many class="{{ClassName}}" />
    </set>

      {{/Collections}}
      {{#HasDerivedEntities}}
    <!-- Derived classes -->
      {{#DerivedEntities}}
      {{#IsJoinedSubclass}}
    <joined-subclass name="{{ClassName}}" table="{{TableName}}" lazy="false"{{#SchemaName}} schema="{{SchemaName}}"{{/SchemaName}}>
      {{/IsJoinedSubclass}}
      {{^IsJoinedSubclass}}
    <subclass name="{{ClassName}}" lazy="false" discriminator-value="{{DiscriminatorValue}}" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="{{TableName}}" {{#SchemaName}} schema="{{SchemaName}}"{{/SchemaName}}>
      {{/IsJoinedSubclass}}
          <key>
                    {{#KeyColumns}}
            <column name="{{Name}}" />
                    {{/KeyColumns}}
          </key>

          <!-- PK properties -->
                    {{#KeyProperties}}
          <property name="{{PropertyName}}" column="{{ColumnName}}" type="{{NHibernateTypeName}}"{{#MaxLength}} length="{{MaxLength}}"{{/MaxLength}}{{^IsNullable}} not-null="true"{{/IsNullable}} insert="false" update="false"/>
                    {{/KeyProperties}}

          <!-- Properties -->
                    {{#Properties}}
          <property name="{{PropertyName}}" column="{{ColumnName}}" type="{{NHibernateTypeName}}"{{#MaxLength}} length="{{MaxLength}}"{{/MaxLength}}{{^IsNullable}} not-null="true"{{/IsNullable}} />
                    {{/Properties}}

          <!-- Aggregate references -->
                    {{#AggregateReferences}}
          <many-to-one name="{{BagName}}" class="{{AggregateReferenceClassName}}" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
                        {{#Columns}}
              <column name="{{Name}}" />
                        {{/Columns}}
          </many-to-one>

                    {{/AggregateReferences}}
                    {{#HasBackReferences}}

          <!-- Back references -->
                        {{#BackReferences}}
          <many-to-one name="{{BagName}}" class="{{ParentClassName}}" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
                            {{#Columns}}
            <column name="{{Name}}" />
                            {{/Columns}}
          </many-to-one>
                        {{/BackReferences}}
                    {{/HasBackReferences}}

          <!-- Collections -->
                    {{#Collections}}
          <set name="{{BagName}}"{{#IsEmbeddedCollection}} cascade="all-delete-orphan" inverse="true" lazy="false"{{/IsEmbeddedCollection}}{{^IsEmbeddedCollection}} cascade="none" lazy="true"{{/IsEmbeddedCollection}}>
            <key>
                        {{#Columns}}
              <column name="{{Name}}" />
                        {{/Columns}}
            </key>
            <one-to-many class="{{ClassName}}" />
          </set>

                {{/Collections}}
     {{^IsJoinedSubclass}}
      </join>
    </subclass>
     {{/IsJoinedSubclass}}
     {{#IsJoinedSubclass}}
      </joined-subclass>
     {{/IsJoinedSubclass}}
     {{/DerivedEntities}}
     {{/HasDerivedEntities}}
</class>


    {{/Classes}}
{{/Aggregates}}
</hibernate-mapping>

