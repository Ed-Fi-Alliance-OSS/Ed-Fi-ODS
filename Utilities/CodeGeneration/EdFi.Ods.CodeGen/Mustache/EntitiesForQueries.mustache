using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Diagnostics.CodeAnalysis;
using EdFi.Ods.Api.Attributes;
using EdFi.Ods.Common.Attributes;
using EdFi.Ods.Common.Models.Domain;
using Newtonsoft.Json;

{{#Aggregates}}
// Aggregate: {{AggregateName}}

namespace {{AggregateNamespace}}
{
    {{#Classes}}

    /// <summary>
    /// A class which represents the {{SchemaName}}.{{TableName}} table of the {{AggregateName}} aggregate in the ODS database.
    /// </summary>
    [Serializable]
    [ExcludeFromCodeCoverage]
    public {{#IsAbstract}}abstract {{/IsAbstract}}class {{ClassName}}{{#IsConcreteEntityBaseClass}}Base{{/IsConcreteEntityBaseClass}}{{#IsConcreteEntityChildClassForBase}}ForBase{{/IsConcreteEntityChildClassForBase}}{{ClassNameSuffix}}{{ContextualClassNameSuffix}} : {{#IsDerived}}{{BaseAggregateRootRelativeNamespace}}{{#IsConcreteEntityBaseClass}}Base{{/IsConcreteEntityBaseClass}}{{/IsDerived}}{{^IsDerived}}{{#IsAggregateRoot}}AggregateRootWithCompositeKey{{/IsAggregateRoot}}{{^IsAggregateRoot}}EntityWithCompositeKey{{/IsAggregateRoot}}{{/IsDerived}}
    {

        // =============================================================
        //                         Primary Key
        // -------------------------------------------------------------
        {{#PrimaryKey}}
            {{#ParentReference}}
        [DomainSignature, JsonIgnore, IgnoreDataMember]
        public virtual {{FullyQualifiedParentClassName}}{{ContextualSuffix}} {{ParentClassName}} { get; set; }
            {{/ParentReference}}
            {{#NonParentProperties}}
                {{^IsAbstract}}
        [DomainSignature]
                {{/IsAbstract}}
        public {{#NeedsOverride}}override{{/NeedsOverride}}{{^NeedsOverride}}virtual{{/NeedsOverride}} {{CSharpDeclaredType}} {{CSharpSafePropertyName}} { get; set; }
            {{/NonParentProperties}}
        {{/PrimaryKey}}
        // -------------------------------------------------------------
        {{#HasDiscriminator}}

        // =============================================================
        //                          Discriminator
        // -------------------------------------------------------------

        public virtual string Discriminator { get; set; }
        {{/HasDiscriminator}}

        // =============================================================
        //                          Properties
        // -------------------------------------------------------------
        {{#Properties}}
        public virtual {{CSharpDeclaredType}} {{PropertyName}}  { get; set; }
        {{/Properties}}
        // -------------------------------------------------------------
        {{#HasOneToOnes}}

        // =============================================================
        //                     One-to-one relationships
        // -------------------------------------------------------------
            {{#OneToOnes}}
        public virtual {{OtherClassName}}{{ClassNameSuffix}} {{OtherClassName}} { get; set; }
            {{/OneToOnes}}
        // -------------------------------------------------------------
        {{/HasOneToOnes}}

        // =============================================================
        //                          Collections
        // -------------------------------------------------------------
        {{#NavigableChildren}}
        public virtual ICollection<{{ChildClassName}}{{#IsChildForConcreteBase}}ForBase{{/IsChildForConcreteBase}}{{ClassNameSuffix}}> {{AssociationName}}{{PropertyNameSuffix}} { get; set; }
        {{/NavigableChildren}}

        // -------------------------------------------------------------

        // =============================================================
        //              External references for HQL Queries
        // -------------------------------------------------------------
        {{#HasNonNavigableChildren}}

        // External references for NHibernate mappings and HQL query usage
            {{#NonNavigableChildren}}
    #pragma warning disable 114
        protected virtual ICollection<{{AggregateRelativeNamespace}}.{{ChildClassName}}{{ChildClassNameSuffix}}> {{AssociationName}}{{PropertyNameSuffix}}  { get; set; }
    #pragma warning restore 114
            {{/NonNavigableChildren}}
        {{/HasNonNavigableChildren}}
        {{#HasNonNavigableParents}}

        // External references for NHibernate mappings and HQL query usage
            {{#NonNavigableParents}}
        protected virtual {{AggregateRelativeNamespace}}.{{ClassName}}{{ClassNameSuffix}} {{AssociationName}} { get; set; }
            {{/NonNavigableParents}}
        {{/HasNonNavigableParents}}
        // -------------------------------------------------------------
    }
    {{/Classes}}
}
{{/Aggregates}}
