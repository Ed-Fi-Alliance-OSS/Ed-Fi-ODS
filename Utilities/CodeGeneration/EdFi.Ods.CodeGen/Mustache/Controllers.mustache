using System;
using System.Diagnostics.CodeAnalysis;
using System.Threading.Tasks;
using EdFi.Common.Extensions;
using EdFi.Ods.Api.Attributes;
using EdFi.Ods.Api.Controllers;
using EdFi.Ods.Api.ExceptionHandling;
using EdFi.Ods.Api.Infrastructure.Pipelines.Factories;
using EdFi.Ods.Common.Infrastructure;
using EdFi.Ods.Common.Models.Requests;
using EdFi.Ods.Common.Models.Queries;
using EdFi.Ods.Common.Profiles;
using EdFi.Ods.Common.Configuration;
using EdFi.Ods.Common.Context;
using EdFi.Ods.Entities.Common.{{ProperCaseName}};
{{#IsExtensionContext}}
using {{ControllersBaseNamespace}};
{{/IsExtensionContext}}
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
{{#Controllers}}

namespace {{ControllersNamespace}}
{
    [ApiExplorerSettings(IgnoreApi = true)]
    [ExcludeFromCodeCoverage]
    [ApiController]
    [Authorize]
    [Route("{{RouteTemplate}}")]
    public partial class {{ControllerClass}} : DataManagementControllerBase<
        {{ResourceModel}},
        {{EntityInterface}},
        {{AggregateRoot}},
        {{PutRequest}},
        {{PostRequest}},
        {{DeleteRequest}},
        {{GetByExampleRequest}}>
    {
        public {{ControllerClass}}(IPipelineFactory pipelineFactory, ISchoolYearContextProvider schoolYearContextProvider, IRESTErrorProvider restErrorProvider, IDefaultPageSizeLimitProvider defaultPageSizeLimitProvider, ApiSettings apiSettings, IContextProvider<ProfileContentTypeContext> profileContentTypeContextProvider)
            : base(pipelineFactory, schoolYearContextProvider, restErrorProvider, defaultPageSizeLimitProvider, apiSettings, profileContentTypeContextProvider)
        {
        }

        protected override void MapAll({{GetByExampleRequest}} request, {{ExtensionNamespacePrefix}}I{{ResourceName}} specification)
        {
        {{#MapAllExpression}}
            {{#HasProperties}}
            // Copy all existing values
            specification.SuspendReferenceAssignmentCheck();
            {{/HasProperties}}
            {{#Properties}}
            specification.{{SpecificationProperty}} = request.{{RequestProperty}};
            {{/Properties}}
        {{/MapAllExpression}}
        }
        {{#ReadContentType}}

        protected override string GetReadContentType()
        {
            return "{{ReadContentType}}";
        }
        {{/ReadContentType}}
    }
}
{{/Controllers}}