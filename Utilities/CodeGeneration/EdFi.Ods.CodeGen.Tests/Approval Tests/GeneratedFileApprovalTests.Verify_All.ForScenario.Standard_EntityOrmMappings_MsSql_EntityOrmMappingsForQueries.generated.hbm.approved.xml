<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" assembly="EdFi.Ods.Standard" namespace="EdFi.Ods.Entities.NHibernate.QueryModels" default-access="property" auto-import="false">


  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicWeekAggregate.EdFi.AcademicWeekQ" table="AcademicWeek" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="WeekIdentifier" column="WeekIdentifier" type="string" length="80" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" not-null="true" />
    <property name="TotalInstructionalDays" column="TotalInstructionalDays" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>

    <!-- Collections -->
    <set name="SessionAcademicWeeks" cascade="none" lazy="true">
      <key>
        <column name="SchoolId" />
        <column name="WeekIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionAcademicWeekQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AccountAggregate.EdFi.AccountQ" table="Account" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AccountName" column="AccountName" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Collections -->
    <set name="AccountAccountCodes" cascade="none" lazy="true">
      <key>
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountAggregate.EdFi.AccountAccountCodeQ" />
    </set>

    <set name="Actuals" cascade="none" lazy="true">
      <key>
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ActualAggregate.EdFi.ActualQ" />
    </set>

    <set name="Budgets" cascade="none" lazy="true">
      <key>
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.BudgetAggregate.EdFi.BudgetQ" />
    </set>

    <set name="ContractedStaffs" cascade="none" lazy="true">
      <key>
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ContractedStaffAggregate.EdFi.ContractedStaffQ" />
    </set>

    <set name="Payrolls" cascade="none" lazy="true">
      <key>
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.PayrollAggregate.EdFi.PayrollQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AccountAggregate.EdFi.AccountAccountCodeQ" table="AccountAccountCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountClassificationDescriptorId" column="AccountClassificationDescriptorId" type="int" />
      <key-property name="AccountCodeNumber" column="AccountCodeNumber" type="string" length="50" />
      <key-many-to-one name="Account">
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AccountCode" class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountCodeAggregate.EdFi.AccountCodeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AccountClassificationDescriptorId" />
        <column name="AccountCodeNumber" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AccountabilityRatingAggregate.EdFi.AccountabilityRatingQ" table="AccountabilityRating" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="RatingTitle" column="RatingTitle" type="string" length="60" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="Rating" column="Rating" type="string" length="35" not-null="true" />
    <property name="RatingDate" column="RatingDate" type="date" />
    <property name="RatingOrganization" column="RatingOrganization" type="string" length="35" />
    <property name="RatingProgram" column="RatingProgram" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AccountCodeAggregate.EdFi.AccountCodeQ" table="AccountCode" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountClassificationDescriptorId" column="AccountClassificationDescriptorId" type="int" />
      <key-property name="AccountCodeNumber" column="AccountCodeNumber" type="string" length="50" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AccountCodeDescription" column="AccountCodeDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AccountClassificationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountClassificationDescriptorAggregate.EdFi.AccountClassificationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AccountClassificationDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Collections -->
    <set name="AccountAccountCodes" cascade="none" lazy="true">
      <key>
        <column name="AccountClassificationDescriptorId" />
        <column name="AccountCodeNumber" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountAggregate.EdFi.AccountAccountCodeQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ActualAggregate.EdFi.ActualQ" table="Actual" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AmountToDate" column="AmountToDate" type="decimal" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Account" class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountAggregate.EdFi.AccountQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentQ" table="Assessment" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AdaptiveAssessment" column="AdaptiveAssessment" type="bool" />
    <property name="AssessmentCategoryDescriptorId" column="AssessmentCategoryDescriptorId" type="int" />
    <property name="AssessmentFamily" column="AssessmentFamily" type="string" length="60" />
    <property name="AssessmentForm" column="AssessmentForm" type="string" length="60" />
    <property name="AssessmentTitle" column="AssessmentTitle" type="string" length="100" not-null="true" />
    <property name="AssessmentVersion" column="AssessmentVersion" type="int" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />
    <property name="RevisionDate" column="RevisionDate" type="date" />

    <!-- One-to-one child mappings -->
    <one-to-one name="AssessmentContentStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentContentStandardQ" />

    <!-- One-to-one child mappings -->
    <one-to-one name="AssessmentPeriod" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPeriodQ" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentCategoryDescriptorAggregate.EdFi.AssessmentCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Collections -->
    <set name="AssessmentAcademicSubjects" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentAcademicSubjectQ" />
    </set>

    <set name="AssessmentAssessedGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentAssessedGradeLevelQ" />
    </set>

    <set name="AssessmentIdentificationCodes" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentIdentificationCodeQ" />
    </set>

    <set name="AssessmentItems" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemQ" />
    </set>

    <set name="AssessmentLanguages" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentLanguageQ" />
    </set>

    <set name="AssessmentPerformanceLevels" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPerformanceLevelQ" />
    </set>

    <set name="AssessmentPlatformTypes" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPlatformTypeQ" />
    </set>

    <set name="AssessmentPrograms" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentProgramQ" />
    </set>

    <set name="AssessmentScores" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentScoreQ" />
    </set>

    <set name="AssessmentSections" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentSectionQ" />
    </set>

    <set name="GraduationPlanRequiredAssessments" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentQ" />
    </set>

    <set name="ObjectiveAssessments" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentQ" />
    </set>

    <set name="ObjectiveAssessmentsHierarchy" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentQH" />
    </set>

    <set name="StudentAssessments" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentAcademicSubjectQ" table="AssessmentAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentAssessedGradeLevelQ" table="AssessmentAssessedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentContentStandardQ" table="AssessmentContentStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="MandatingEducationOrganizationId" column="MandatingEducationOrganizationId" type="int" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Title" column="Title" type="string" length="75" not-null="true" />
    <property name="URI" column="URI" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="50" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="MandatingEducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MandatingEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="PublicationStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PublicationStatusDescriptorAggregate.EdFi.PublicationStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PublicationStatusDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="AssessmentContentStandardAuthors" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentContentStandardAuthorQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentContentStandardAuthorQ" table="AssessmentContentStandardAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="100" />
      <key-many-to-one name="AssessmentContentStandard">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentIdentificationCodeQ" table="AssessmentIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentificationSystemDescriptorId" column="AssessmentIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentIdentificationSystemDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentIdentificationSystemDescriptorAggregate.EdFi.AssessmentIdentificationSystemDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentificationSystemDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentLanguageQ" table="AssessmentLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LanguageDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageDescriptorAggregate.EdFi.LanguageDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LanguageDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPerformanceLevelQ" table="AssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentReportingMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentReportingMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="PerformanceLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PerformanceLevelDescriptorAggregate.EdFi.PerformanceLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PerformanceLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="ResultDatatypeTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResultDatatypeTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPeriodQ" table="AssessmentPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssessmentPeriodDescriptorId" column="AssessmentPeriodDescriptorId" type="int" not-null="true" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentPeriodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentPeriodDescriptorAggregate.EdFi.AssessmentPeriodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentPeriodDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPlatformTypeQ" table="AssessmentPlatformType" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PlatformTypeDescriptorId" column="PlatformTypeDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="PlatformTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PlatformTypeDescriptorAggregate.EdFi.PlatformTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PlatformTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentProgramQ" table="AssessmentProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Program" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentScoreQ" table="AssessmentScore" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentReportingMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentReportingMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="ResultDatatypeTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResultDatatypeTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentSectionQ" table="AssessmentSection" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Section" class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemQ" table="AssessmentItem" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AssessmentItemCategoryDescriptorId" column="AssessmentItemCategoryDescriptorId" type="int" />
    <property name="AssessmentItemURI" column="AssessmentItemURI" type="string" length="255" />
    <property name="CorrectResponse" column="CorrectResponse" type="string" length="20" />
    <property name="ExpectedTimeAssessed" column="ExpectedTimeAssessed" type="string" length="30" />
    <property name="ItemText" column="ItemText" type="string" length="1024" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Assessment" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
    </many-to-one>
    <many-to-one name="AssessmentItemCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemCategoryDescriptorAggregate.EdFi.AssessmentItemCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentItemCategoryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="AssessmentItemLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemLearningStandardQ" />
    </set>

    <set name="AssessmentItemPossibleResponses" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemPossibleResponseQ" />
    </set>

    <set name="ObjectiveAssessmentAssessmentItems" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="AssessmentItemIdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentAssessmentItemQ" />
    </set>

    <set name="StudentAssessmentItems" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentItemQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemLearningStandardQ" table="AssessmentItemLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="AssessmentItem">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemPossibleResponseQ" table="AssessmentItemPossibleResponse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ResponseValue" column="ResponseValue" type="string" length="60" />
      <key-many-to-one name="AssessmentItem">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CorrectResponse" column="CorrectResponse" type="bool" />
    <property name="ResponseDescription" column="ResponseDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.BellScheduleAggregate.EdFi.BellScheduleQ" table="BellSchedule" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BellScheduleName" column="BellScheduleName" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AlternateDayName" column="AlternateDayName" type="string" length="20" />
    <property name="EndTime" column="EndTime" type="TimeAsTimeSpan" />
    <property name="StartTime" column="StartTime" type="TimeAsTimeSpan" />
    <property name="TotalInstructionalTime" column="TotalInstructionalTime" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>

    <!-- Collections -->
    <set name="BellScheduleClassPeriods" cascade="none" lazy="true">
      <key>
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.BellScheduleAggregate.EdFi.BellScheduleClassPeriodQ" />
    </set>

    <set name="BellScheduleDates" cascade="none" lazy="true">
      <key>
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.BellScheduleAggregate.EdFi.BellScheduleDateQ" />
    </set>

    <set name="BellScheduleGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.BellScheduleAggregate.EdFi.BellScheduleGradeLevelQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.BellScheduleAggregate.EdFi.BellScheduleClassPeriodQ" table="BellScheduleClassPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassPeriodName" column="ClassPeriodName" type="string" length="60" />
      <key-many-to-one name="BellSchedule">
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ClassPeriod" class="EdFi.Ods.Entities.NHibernate.QueryModels.ClassPeriodAggregate.EdFi.ClassPeriodQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ClassPeriodName" />
        <column name="SchoolId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.BellScheduleAggregate.EdFi.BellScheduleDateQ" table="BellScheduleDate" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Date" column="Date" type="date" />
      <key-many-to-one name="BellSchedule">
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.BellScheduleAggregate.EdFi.BellScheduleGradeLevelQ" table="BellScheduleGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="BellSchedule">
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.BudgetAggregate.EdFi.BudgetQ" table="Budget" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="Amount" column="Amount" type="decimal" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Account" class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountAggregate.EdFi.AccountQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarAggregate.EdFi.CalendarQ" table="Calendar" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarCode" column="CalendarCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CalendarTypeDescriptorId" column="CalendarTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CalendarTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarTypeDescriptorAggregate.EdFi.CalendarTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CalendarTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>

    <!-- Collections -->
    <set name="CalendarDates" cascade="none" lazy="true">
      <key>
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarDateAggregate.EdFi.CalendarDateQ" />
    </set>

    <set name="CalendarGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarAggregate.EdFi.CalendarGradeLevelQ" />
    </set>

    <set name="StaffSchoolAssociations" cascade="none" lazy="true">
      <key>
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationQ" />
    </set>

    <set name="StudentSchoolAssociations" cascade="none" lazy="true">
      <key>
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarAggregate.EdFi.CalendarGradeLevelQ" table="CalendarGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Calendar">
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarDateAggregate.EdFi.CalendarDateQ" table="CalendarDate" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarCode" column="CalendarCode" type="string" length="60" />
      <key-property name="Date" column="Date" type="date" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Calendar" class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarAggregate.EdFi.CalendarQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
    </many-to-one>

    <!-- Collections -->
    <set name="CalendarDateCalendarEvents" cascade="none" lazy="true">
      <key>
        <column name="CalendarCode" />
        <column name="Date" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarDateAggregate.EdFi.CalendarDateCalendarEventQ" />
    </set>

    <set name="SectionAttendanceTakenEvents" cascade="none" lazy="true">
      <key>
        <column name="CalendarCode" />
        <column name="Date" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAttendanceTakenEventAggregate.EdFi.SectionAttendanceTakenEventQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarDateAggregate.EdFi.CalendarDateCalendarEventQ" table="CalendarDateCalendarEvent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarEventDescriptorId" column="CalendarEventDescriptorId" type="int" />
      <key-many-to-one name="CalendarDate">
        <column name="CalendarCode" />
        <column name="Date" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CalendarEventDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarEventDescriptorAggregate.EdFi.CalendarEventDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CalendarEventDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ClassPeriodAggregate.EdFi.ClassPeriodQ" table="ClassPeriod" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassPeriodName" column="ClassPeriodName" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="OfficialAttendancePeriod" column="OfficialAttendancePeriod" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>

    <!-- Collections -->
    <set name="BellScheduleClassPeriods" cascade="none" lazy="true">
      <key>
        <column name="ClassPeriodName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.BellScheduleAggregate.EdFi.BellScheduleClassPeriodQ" />
    </set>

    <set name="ClassPeriodMeetingTimes" cascade="none" lazy="true">
      <key>
        <column name="ClassPeriodName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ClassPeriodAggregate.EdFi.ClassPeriodMeetingTimeQ" />
    </set>

    <set name="SectionClassPeriods" cascade="none" lazy="true">
      <key>
        <column name="ClassPeriodName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionClassPeriodQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ClassPeriodAggregate.EdFi.ClassPeriodMeetingTimeQ" table="ClassPeriodMeetingTime" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EndTime" column="EndTime" type="TimeAsTimeSpan" />
      <key-property name="StartTime" column="StartTime" type="TimeAsTimeSpan" />
      <key-many-to-one name="ClassPeriod">
        <column name="ClassPeriodName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortQ" table="Cohort" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CohortIdentifier" column="CohortIdentifier" type="string" length="20" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="CohortDescription" column="CohortDescription" type="string" length="1024" />
    <property name="CohortScopeDescriptorId" column="CohortScopeDescriptorId" type="int" />
    <property name="CohortTypeDescriptorId" column="CohortTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>
    <many-to-one name="CohortScopeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortScopeDescriptorAggregate.EdFi.CohortScopeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CohortScopeDescriptorId" />
    </many-to-one>
    <many-to-one name="CohortTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortTypeDescriptorAggregate.EdFi.CohortTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CohortTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Collections -->
    <set name="CohortPrograms" cascade="none" lazy="true">
      <key>
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortProgramQ" />
    </set>

    <set name="StaffCohortAssociations" cascade="none" lazy="true">
      <key>
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffCohortAssociationAggregate.EdFi.StaffCohortAssociationQ" />
    </set>

    <set name="StudentCohortAssociations" cascade="none" lazy="true">
      <key>
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationQ" />
    </set>

    <set name="StudentInterventionAssociations" cascade="none" lazy="true">
      <key>
        <column name="CohortIdentifier" />
        <column name="CohortEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortProgramQ" table="CohortProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="Cohort">
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Program" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityProviderLicenseAggregate.EdFi.CommunityProviderLicenseQ" table="CommunityProviderLicense" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CommunityProviderId" column="CommunityProviderId" type="int" />
      <key-property name="LicenseIdentifier" column="LicenseIdentifier" type="string" length="20" />
      <key-property name="LicensingOrganization" column="LicensingOrganization" type="string" length="75" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AuthorizedFacilityCapacity" column="AuthorizedFacilityCapacity" type="int" />
    <property name="LicenseEffectiveDate" column="LicenseEffectiveDate" type="date" not-null="true" />
    <property name="LicenseExpirationDate" column="LicenseExpirationDate" type="date" />
    <property name="LicenseIssueDate" column="LicenseIssueDate" type="date" />
    <property name="LicenseStatusDescriptorId" column="LicenseStatusDescriptorId" type="int" />
    <property name="LicenseTypeDescriptorId" column="LicenseTypeDescriptorId" type="int" not-null="true" />
    <property name="OldestAgeAuthorizedToServe" column="OldestAgeAuthorizedToServe" type="int" />
    <property name="YoungestAgeAuthorizedToServe" column="YoungestAgeAuthorizedToServe" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CommunityProvider" class="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityProviderAggregate.EdFi.CommunityProviderQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CommunityProviderId" />
    </many-to-one>
    <many-to-one name="LicenseStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LicenseStatusDescriptorAggregate.EdFi.LicenseStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LicenseStatusDescriptorId" />
    </many-to-one>
    <many-to-one name="LicenseTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LicenseTypeDescriptorAggregate.EdFi.LicenseTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LicenseTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CompetencyObjectiveAggregate.EdFi.CompetencyObjectiveQ" table="CompetencyObjective" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="Objective" column="Objective" type="string" length="60" />
      <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CompetencyObjectiveId" column="CompetencyObjectiveId" type="string" length="60" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="SuccessCriteria" column="SuccessCriteria" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ObjectiveGradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ObjectiveGradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentCompetencyObjectives" cascade="none" lazy="true">
      <key>
        <column name="ObjectiveEducationOrganizationId" />
        <column name="Objective" />
        <column name="ObjectiveGradeLevelDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ContractedStaffAggregate.EdFi.ContractedStaffQ" table="ContractedStaff" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AmountToDate" column="AmountToDate" type="decimal" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Account" class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountAggregate.EdFi.AccountQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" table="Course" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseCode" column="CourseCode" type="string" length="60" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="CareerPathwayDescriptorId" column="CareerPathwayDescriptorId" type="int" />
    <property name="CourseDefinedByDescriptorId" column="CourseDefinedByDescriptorId" type="int" />
    <property name="CourseDescription" column="CourseDescription" type="string" length="1024" />
    <property name="CourseGPAApplicabilityDescriptorId" column="CourseGPAApplicabilityDescriptorId" type="int" />
    <property name="CourseTitle" column="CourseTitle" type="string" length="60" not-null="true" />
    <property name="DateCourseAdopted" column="DateCourseAdopted" type="date" />
    <property name="HighSchoolCourseRequirement" column="HighSchoolCourseRequirement" type="bool" />
    <property name="MaxCompletionsForCredit" column="MaxCompletionsForCredit" type="int" />
    <property name="MaximumAvailableCreditConversion" column="MaximumAvailableCreditConversion" type="decimal" />
    <property name="MaximumAvailableCredits" column="MaximumAvailableCredits" type="decimal" />
    <property name="MaximumAvailableCreditTypeDescriptorId" column="MaximumAvailableCreditTypeDescriptorId" type="int" />
    <property name="MinimumAvailableCreditConversion" column="MinimumAvailableCreditConversion" type="decimal" />
    <property name="MinimumAvailableCredits" column="MinimumAvailableCredits" type="decimal" />
    <property name="MinimumAvailableCreditTypeDescriptorId" column="MinimumAvailableCreditTypeDescriptorId" type="int" />
    <property name="NumberOfParts" column="NumberOfParts" type="int" not-null="true" />
    <property name="TimeRequiredForCompletion" column="TimeRequiredForCompletion" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>
    <many-to-one name="CareerPathwayDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CareerPathwayDescriptorAggregate.EdFi.CareerPathwayDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CareerPathwayDescriptorId" />
    </many-to-one>
    <many-to-one name="CourseDefinedByDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseDefinedByDescriptorAggregate.EdFi.CourseDefinedByDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseDefinedByDescriptorId" />
    </many-to-one>
    <many-to-one name="CourseGPAApplicabilityDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseGPAApplicabilityDescriptorAggregate.EdFi.CourseGPAApplicabilityDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseGPAApplicabilityDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="MaximumAvailableCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MaximumAvailableCreditTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="MinimumAvailableCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MinimumAvailableCreditTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="CourseCompetencyLevels" cascade="none" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseCompetencyLevelQ" />
    </set>

    <set name="CourseIdentificationCodes" cascade="none" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseIdentificationCodeQ" />
    </set>

    <set name="CourseLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLearningObjectiveQ" />
    </set>

    <set name="CourseLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLearningStandardQ" />
    </set>

    <set name="CourseLevelCharacteristics" cascade="none" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLevelCharacteristicQ" />
    </set>

    <set name="CourseOfferedGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseOfferedGradeLevelQ" />
    </set>

    <set name="CourseOfferings" cascade="none" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingQ" />
    </set>

    <set name="CourseTranscripts" cascade="none" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptQ" />
    </set>

    <set name="GraduationPlanCreditsByCourseCourses" cascade="none" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseCourseQ" />
    </set>

    <set name="SurveyCourseAssociations" cascade="none" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyCourseAssociationAggregate.EdFi.SurveyCourseAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseCompetencyLevelQ" table="CourseCompetencyLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CompetencyLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CompetencyLevelDescriptorAggregate.EdFi.CompetencyLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CompetencyLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseIdentificationCodeQ" table="CourseIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseIdentificationSystemDescriptorId" column="CourseIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="CourseCatalogURL" column="CourseCatalogURL" type="string" length="255" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CourseIdentificationSystemDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseIdentificationSystemDescriptorAggregate.EdFi.CourseIdentificationSystemDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseIdentificationSystemDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLearningObjectiveQ" table="CourseLearningObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningObjective" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLearningStandardQ" table="CourseLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLevelCharacteristicQ" table="CourseLevelCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CourseLevelCharacteristicDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseLevelCharacteristicDescriptorAggregate.EdFi.CourseLevelCharacteristicDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseLevelCharacteristicDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseOfferedGradeLevelQ" table="CourseOfferedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingQ" table="CourseOffering" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CourseCode" column="CourseCode" type="string" length="60" not-null="true" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" />
    <property name="InstructionalTimePlanned" column="InstructionalTimePlanned" type="int" />
    <property name="LocalCourseTitle" column="LocalCourseTitle" type="string" length="60" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Course" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="Session" class="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
    </many-to-one>

    <!-- Collections -->
    <set name="CourseOfferingCourseLevelCharacteristics" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingCourseLevelCharacteristicQ" />
    </set>

    <set name="CourseOfferingCurriculumUseds" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingCurriculumUsedQ" />
    </set>

    <set name="CourseOfferingOfferedGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingOfferedGradeLevelQ" />
    </set>

    <set name="Sections" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingCourseLevelCharacteristicQ" table="CourseOfferingCourseLevelCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="CourseOffering">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CourseLevelCharacteristicDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseLevelCharacteristicDescriptorAggregate.EdFi.CourseLevelCharacteristicDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseLevelCharacteristicDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingCurriculumUsedQ" table="CourseOfferingCurriculumUsed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CurriculumUsedDescriptorId" column="CurriculumUsedDescriptorId" type="int" />
      <key-many-to-one name="CourseOffering">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CurriculumUsedDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CurriculumUsedDescriptorAggregate.EdFi.CurriculumUsedDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CurriculumUsedDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingOfferedGradeLevelQ" table="CourseOfferingOfferedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="CourseOffering">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptQ" table="CourseTranscript" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseAttemptResultDescriptorId" column="CourseAttemptResultDescriptorId" type="int" />
      <key-property name="CourseCode" column="CourseCode" type="string" length="60" />
      <key-property name="CourseEducationOrganizationId" column="CourseEducationOrganizationId" type="int" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AlternativeCourseCode" column="AlternativeCourseCode" type="string" length="60" />
    <property name="AlternativeCourseTitle" column="AlternativeCourseTitle" type="string" length="60" />
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="AttemptedCreditConversion" column="AttemptedCreditConversion" type="decimal" />
    <property name="AttemptedCredits" column="AttemptedCredits" type="decimal" />
    <property name="AttemptedCreditTypeDescriptorId" column="AttemptedCreditTypeDescriptorId" type="int" />
    <property name="CourseCatalogURL" column="CourseCatalogURL" type="string" length="255" />
    <property name="CourseRepeatCodeDescriptorId" column="CourseRepeatCodeDescriptorId" type="int" />
    <property name="CourseTitle" column="CourseTitle" type="string" length="60" />
    <property name="EarnedCreditConversion" column="EarnedCreditConversion" type="decimal" />
    <property name="EarnedCredits" column="EarnedCredits" type="decimal" not-null="true" />
    <property name="EarnedCreditTypeDescriptorId" column="EarnedCreditTypeDescriptorId" type="int" />
    <property name="ExternalEducationOrganizationId" column="ExternalEducationOrganizationId" type="int" />
    <property name="FinalLetterGradeEarned" column="FinalLetterGradeEarned" type="string" length="20" />
    <property name="FinalNumericGradeEarned" column="FinalNumericGradeEarned" type="decimal" />
    <property name="MethodCreditEarnedDescriptorId" column="MethodCreditEarnedDescriptorId" type="int" />
    <property name="WhenTakenGradeLevelDescriptorId" column="WhenTakenGradeLevelDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AttemptedCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AttemptedCreditTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="Course" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="CourseAttemptResultDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAttemptResultDescriptorAggregate.EdFi.CourseAttemptResultDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseAttemptResultDescriptorId" />
    </many-to-one>
    <many-to-one name="CourseRepeatCodeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseRepeatCodeDescriptorAggregate.EdFi.CourseRepeatCodeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseRepeatCodeDescriptorId" />
    </many-to-one>
    <many-to-one name="EarnedCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EarnedCreditTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="ExternalEducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ExternalEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="MethodCreditEarnedDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.MethodCreditEarnedDescriptorAggregate.EdFi.MethodCreditEarnedDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MethodCreditEarnedDescriptorId" />
    </many-to-one>
    <many-to-one name="StudentAcademicRecord" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="WhenTakenGradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="WhenTakenGradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="CourseTranscriptAcademicSubjects" cascade="none" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptAcademicSubjectQ" />
    </set>

    <set name="CourseTranscriptAlternativeCourseIdentificationCodes" cascade="none" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptAlternativeCourseIdentificationCodeQ" />
    </set>

    <set name="CourseTranscriptCreditCategories" cascade="none" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptCreditCategoryQ" />
    </set>

    <set name="CourseTranscriptEarnedAdditionalCredits" cascade="none" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptEarnedAdditionalCreditsQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptAcademicSubjectQ" table="CourseTranscriptAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptAlternativeCourseIdentificationCodeQ" table="CourseTranscriptAlternativeCourseIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseIdentificationSystemDescriptorId" column="CourseIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="CourseCatalogURL" column="CourseCatalogURL" type="string" length="255" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CourseIdentificationSystemDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseIdentificationSystemDescriptorAggregate.EdFi.CourseIdentificationSystemDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseIdentificationSystemDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptCreditCategoryQ" table="CourseTranscriptCreditCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CreditCategoryDescriptorId" column="CreditCategoryDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CreditCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditCategoryDescriptorAggregate.EdFi.CreditCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CreditCategoryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptEarnedAdditionalCreditsQ" table="CourseTranscriptEarnedAdditionalCredits" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AdditionalCreditTypeDescriptorId" column="AdditionalCreditTypeDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Credits" column="Credits" type="decimal" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AdditionalCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AdditionalCreditTypeDescriptorAggregate.EdFi.AdditionalCreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AdditionalCreditTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialQ" table="Credential" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="60" />
      <key-property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CredentialFieldDescriptorId" column="CredentialFieldDescriptorId" type="int" not-null="true" />
    <property name="CredentialTypeDescriptorId" column="CredentialTypeDescriptorId" type="int" not-null="true" />
    <property name="EffectiveDate" column="EffectiveDate" type="date" />
    <property name="ExpirationDate" column="ExpirationDate" type="date" />
    <property name="IssuanceDate" column="IssuanceDate" type="date" not-null="true" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="TeachingCredentialBasisDescriptorId" column="TeachingCredentialBasisDescriptorId" type="int" />
    <property name="TeachingCredentialDescriptorId" column="TeachingCredentialDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CredentialFieldDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialFieldDescriptorAggregate.EdFi.CredentialFieldDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CredentialFieldDescriptorId" />
    </many-to-one>
    <many-to-one name="CredentialTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialTypeDescriptorAggregate.EdFi.CredentialTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CredentialTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="StateOfIssueStateAbbreviationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>
    <many-to-one name="TeachingCredentialBasisDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TeachingCredentialBasisDescriptorAggregate.EdFi.TeachingCredentialBasisDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TeachingCredentialBasisDescriptorId" />
    </many-to-one>
    <many-to-one name="TeachingCredentialDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TeachingCredentialDescriptorAggregate.EdFi.TeachingCredentialDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TeachingCredentialDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="CredentialAcademicSubjects" cascade="none" lazy="true">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialAcademicSubjectQ" />
    </set>

    <set name="CredentialEndorsements" cascade="none" lazy="true">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialEndorsementQ" />
    </set>

    <set name="CredentialGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialGradeLevelQ" />
    </set>

    <set name="StaffCredentials" cascade="none" lazy="true">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffCredentialQ" />
    </set>

    <set name="StaffEducationOrganizationAssignmentAssociations" cascade="none" lazy="true">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationAssignmentAssociationAggregate.EdFi.StaffEducationOrganizationAssignmentAssociationQ" />
    </set>

    <set name="StaffEducationOrganizationEmploymentAssociations" cascade="none" lazy="true">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialAcademicSubjectQ" table="CredentialAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="Credential">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialEndorsementQ" table="CredentialEndorsement" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialEndorsementX" column="CredentialEndorsement" type="string" length="255" />
      <key-many-to-one name="Credential">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialGradeLevelQ" table="CredentialGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Credential">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.DescriptorAggregate.EdFi.DescriptorQ" table="Descriptor" lazy="false" abstract="true">
    <id name="DescriptorId" column="DescriptorId" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CodeValue" column="CodeValue" type="string" length="50" not-null="true" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="EffectiveBeginDate" column="EffectiveBeginDate" type="date" />
    <property name="EffectiveEndDate" column="EffectiveEndDate" type="date" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="PriorDescriptorId" column="PriorDescriptorId" type="int" />
    <property name="ShortDescription" column="ShortDescription" type="string" length="75" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <!-- Derived classes -->
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AbsenceEventCategoryDescriptorAggregate.EdFi.AbsenceEventCategoryDescriptorQ" table="AbsenceEventCategoryDescriptor" lazy="false">
          <key>
            <column name="AbsenceEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AbsenceEventCategoryDescriptorId" column="AbsenceEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffAbsenceEvents" cascade="none" lazy="true">
            <key>
              <column name="AbsenceEventCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAbsenceEventAggregate.EdFi.StaffAbsenceEventQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicHonorCategoryDescriptorAggregate.EdFi.AcademicHonorCategoryDescriptorQ" table="AcademicHonorCategoryDescriptor" lazy="false">
          <key>
            <column name="AcademicHonorCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AcademicHonorCategoryDescriptorId" column="AcademicHonorCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentAcademicRecordAcademicHonors" cascade="none" lazy="true">
            <key>
              <column name="AcademicHonorCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordAcademicHonorQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" table="AcademicSubjectDescriptor" lazy="false">
          <key>
            <column name="AcademicSubjectDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentAcademicSubjects" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentAcademicSubjectQ" />
          </set>

          <set name="Cohorts" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortQ" />
          </set>

          <set name="Courses" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" />
          </set>

          <set name="CourseTranscriptAcademicSubjects" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptAcademicSubjectQ" />
          </set>

          <set name="CredentialAcademicSubjects" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialAcademicSubjectQ" />
          </set>

          <set name="GraduationPlanCreditsBySubjects" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsBySubjectQ" />
          </set>

          <set name="LearningObjectiveAcademicSubjects" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveAcademicSubjectQ" />
          </set>

          <set name="LearningStandardAcademicSubjects" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardAcademicSubjectQ" />
          </set>

          <set name="ObjectiveAssessments" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentQ" />
          </set>

          <set name="OpenStaffPositionAcademicSubjects" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionAcademicSubjectQ" />
          </set>

          <set name="StaffSchoolAssociationAcademicSubjects" cascade="none" lazy="true">
            <key>
              <column name="AcademicSubjectDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationAcademicSubjectQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AccommodationDescriptorAggregate.EdFi.AccommodationDescriptorQ" table="AccommodationDescriptor" lazy="false">
          <key>
            <column name="AccommodationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AccommodationDescriptorId" column="AccommodationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentAssessmentAccommodations" cascade="none" lazy="true">
            <key>
              <column name="AccommodationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentAccommodationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AccountClassificationDescriptorAggregate.EdFi.AccountClassificationDescriptorQ" table="AccountClassificationDescriptor" lazy="false">
          <key>
            <column name="AccountClassificationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AccountClassificationDescriptorId" column="AccountClassificationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AccountCodes" cascade="none" lazy="true">
            <key>
              <column name="AccountClassificationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountCodeAggregate.EdFi.AccountCodeQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AchievementCategoryDescriptorAggregate.EdFi.AchievementCategoryDescriptorQ" table="AchievementCategoryDescriptor" lazy="false">
          <key>
            <column name="AchievementCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffRecognitions" cascade="none" lazy="true">
            <key>
              <column name="AchievementCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffRecognitionQ" />
          </set>

          <set name="StudentAcademicRecordAcademicHonors" cascade="none" lazy="true">
            <key>
              <column name="AchievementCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordAcademicHonorQ" />
          </set>

          <set name="StudentAcademicRecordDiplomas" cascade="none" lazy="true">
            <key>
              <column name="AchievementCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordDiplomaQ" />
          </set>

          <set name="StudentAcademicRecordRecognitions" cascade="none" lazy="true">
            <key>
              <column name="AchievementCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordRecognitionQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AdditionalCreditTypeDescriptorAggregate.EdFi.AdditionalCreditTypeDescriptorQ" table="AdditionalCreditTypeDescriptor" lazy="false">
          <key>
            <column name="AdditionalCreditTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AdditionalCreditTypeDescriptorId" column="AdditionalCreditTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CourseTranscriptEarnedAdditionalCredits" cascade="none" lazy="true">
            <key>
              <column name="AdditionalCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptEarnedAdditionalCreditsQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptorQ" table="AddressTypeDescriptor" lazy="false">
          <key>
            <column name="AddressTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizationAddresses" cascade="none" lazy="true">
            <key>
              <column name="AddressTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressQ" />
          </set>

          <set name="EducationOrganizationInternationalAddresses" cascade="none" lazy="true">
            <key>
              <column name="AddressTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationInternationalAddressQ" />
          </set>

          <set name="ParentAddresses" cascade="none" lazy="true">
            <key>
              <column name="AddressTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentAddressQ" />
          </set>

          <set name="ParentInternationalAddresses" cascade="none" lazy="true">
            <key>
              <column name="AddressTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentInternationalAddressQ" />
          </set>

          <set name="StaffAddresses" cascade="none" lazy="true">
            <key>
              <column name="AddressTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffAddressQ" />
          </set>

          <set name="StaffEducationOrganizationContactAssociationAddresses" cascade="none" lazy="true">
            <key>
              <column name="AddressTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddressQ" />
          </set>

          <set name="StaffInternationalAddresses" cascade="none" lazy="true">
            <key>
              <column name="AddressTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffInternationalAddressQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationAddresses" cascade="none" lazy="true">
            <key>
              <column name="AddressTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationInternationalAddresses" cascade="none" lazy="true">
            <key>
              <column name="AddressTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationInternationalAddressQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AdministrationEnvironmentDescriptorAggregate.EdFi.AdministrationEnvironmentDescriptorQ" table="AdministrationEnvironmentDescriptor" lazy="false">
          <key>
            <column name="AdministrationEnvironmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AdministrationEnvironmentDescriptorId" column="AdministrationEnvironmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentAssessments" cascade="none" lazy="true">
            <key>
              <column name="AdministrationEnvironmentDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AdministrativeFundingControlDescriptorAggregate.EdFi.AdministrativeFundingControlDescriptorQ" table="AdministrativeFundingControlDescriptor" lazy="false">
          <key>
            <column name="AdministrativeFundingControlDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AdministrativeFundingControlDescriptorId" column="AdministrativeFundingControlDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="PostSecondaryInstitutions" cascade="none" lazy="true">
            <key>
              <column name="AdministrativeFundingControlDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionQ" />
          </set>

          <set name="Schools" cascade="none" lazy="true">
            <key>
              <column name="AdministrativeFundingControlDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentCategoryDescriptorAggregate.EdFi.AssessmentCategoryDescriptorQ" table="AssessmentCategoryDescriptor" lazy="false">
          <key>
            <column name="AssessmentCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentCategoryDescriptorId" column="AssessmentCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Assessments" cascade="none" lazy="true">
            <key>
              <column name="AssessmentCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentIdentificationSystemDescriptorAggregate.EdFi.AssessmentIdentificationSystemDescriptorQ" table="AssessmentIdentificationSystemDescriptor" lazy="false">
          <key>
            <column name="AssessmentIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentIdentificationSystemDescriptorId" column="AssessmentIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentIdentificationCodes" cascade="none" lazy="true">
            <key>
              <column name="AssessmentIdentificationSystemDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentIdentificationCodeQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemCategoryDescriptorAggregate.EdFi.AssessmentItemCategoryDescriptorQ" table="AssessmentItemCategoryDescriptor" lazy="false">
          <key>
            <column name="AssessmentItemCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentItemCategoryDescriptorId" column="AssessmentItemCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentItems" cascade="none" lazy="true">
            <key>
              <column name="AssessmentItemCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemResultDescriptorAggregate.EdFi.AssessmentItemResultDescriptorQ" table="AssessmentItemResultDescriptor" lazy="false">
          <key>
            <column name="AssessmentItemResultDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentItemResultDescriptorId" column="AssessmentItemResultDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentAssessmentItems" cascade="none" lazy="true">
            <key>
              <column name="AssessmentItemResultDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentItemQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentPeriodDescriptorAggregate.EdFi.AssessmentPeriodDescriptorQ" table="AssessmentPeriodDescriptor" lazy="false">
          <key>
            <column name="AssessmentPeriodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentPeriodDescriptorId" column="AssessmentPeriodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentPeriods" cascade="none" lazy="true">
            <key>
              <column name="AssessmentPeriodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPeriodQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" table="AssessmentReportingMethodDescriptor" lazy="false">
          <key>
            <column name="AssessmentReportingMethodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="AssessmentReportingMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPerformanceLevelQ" />
          </set>

          <set name="AssessmentScores" cascade="none" lazy="true">
            <key>
              <column name="AssessmentReportingMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentScoreQ" />
          </set>

          <set name="GraduationPlanRequiredAssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="AssessmentReportingMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentPerformanceLevelQ" />
          </set>

          <set name="GraduationPlanRequiredAssessmentScores" cascade="none" lazy="true">
            <key>
              <column name="AssessmentReportingMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentScoreQ" />
          </set>

          <set name="ObjectiveAssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="AssessmentReportingMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentPerformanceLevelQ" />
          </set>

          <set name="ObjectiveAssessmentScores" cascade="none" lazy="true">
            <key>
              <column name="AssessmentReportingMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentScoreQ" />
          </set>

          <set name="StudentAssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="AssessmentReportingMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentPerformanceLevelQ" />
          </set>

          <set name="StudentAssessmentScoreResults" cascade="none" lazy="true">
            <key>
              <column name="AssessmentReportingMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentScoreResultQ" />
          </set>

          <set name="StudentAssessmentStudentObjectiveAssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="AssessmentReportingMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevelQ" />
          </set>

          <set name="StudentAssessmentStudentObjectiveAssessmentScoreResults" cascade="none" lazy="true">
            <key>
              <column name="AssessmentReportingMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentScoreResultQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AttemptStatusDescriptorAggregate.EdFi.AttemptStatusDescriptorQ" table="AttemptStatusDescriptor" lazy="false">
          <key>
            <column name="AttemptStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AttemptStatusDescriptorId" column="AttemptStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSectionAssociations" cascade="none" lazy="true">
            <key>
              <column name="AttemptStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.AttendanceEventCategoryDescriptorAggregate.EdFi.AttendanceEventCategoryDescriptorQ" table="AttendanceEventCategoryDescriptor" lazy="false">
          <key>
            <column name="AttendanceEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentInterventionAttendanceEvents" cascade="none" lazy="true">
            <key>
              <column name="AttendanceEventCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAttendanceEventAggregate.EdFi.StudentInterventionAttendanceEventQ" />
          </set>

          <set name="StudentProgramAttendanceEvents" cascade="none" lazy="true">
            <key>
              <column name="AttendanceEventCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentProgramAttendanceEventAggregate.EdFi.StudentProgramAttendanceEventQ" />
          </set>

          <set name="StudentSchoolAttendanceEvents" cascade="none" lazy="true">
            <key>
              <column name="AttendanceEventCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAttendanceEventAggregate.EdFi.StudentSchoolAttendanceEventQ" />
          </set>

          <set name="StudentSectionAttendanceEvents" cascade="none" lazy="true">
            <key>
              <column name="AttendanceEventCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEventQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.BehaviorDescriptorAggregate.EdFi.BehaviorDescriptorQ" table="BehaviorDescriptor" lazy="false">
          <key>
            <column name="BehaviorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="DisciplineIncidentBehaviors" cascade="none" lazy="true">
            <key>
              <column name="BehaviorDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentBehaviorQ" />
          </set>

          <set name="StudentDisciplineIncidentAssociationBehaviors" cascade="none" lazy="true">
            <key>
              <column name="BehaviorDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationBehaviorQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarEventDescriptorAggregate.EdFi.CalendarEventDescriptorQ" table="CalendarEventDescriptor" lazy="false">
          <key>
            <column name="CalendarEventDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CalendarEventDescriptorId" column="CalendarEventDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CalendarDateCalendarEvents" cascade="none" lazy="true">
            <key>
              <column name="CalendarEventDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarDateAggregate.EdFi.CalendarDateCalendarEventQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarTypeDescriptorAggregate.EdFi.CalendarTypeDescriptorQ" table="CalendarTypeDescriptor" lazy="false">
          <key>
            <column name="CalendarTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CalendarTypeDescriptorId" column="CalendarTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Calendars" cascade="none" lazy="true">
            <key>
              <column name="CalendarTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarAggregate.EdFi.CalendarQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CareerPathwayDescriptorAggregate.EdFi.CareerPathwayDescriptorQ" table="CareerPathwayDescriptor" lazy="false">
          <key>
            <column name="CareerPathwayDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CareerPathwayDescriptorId" column="CareerPathwayDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Courses" cascade="none" lazy="true">
            <key>
              <column name="CareerPathwayDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" />
          </set>

          <set name="StudentCTEProgramAssociationCTEPrograms" cascade="none" lazy="true">
            <key>
              <column name="CareerPathwayDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgramQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CharterApprovalAgencyTypeDescriptorAggregate.EdFi.CharterApprovalAgencyTypeDescriptorQ" table="CharterApprovalAgencyTypeDescriptor" lazy="false">
          <key>
            <column name="CharterApprovalAgencyTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CharterApprovalAgencyTypeDescriptorId" column="CharterApprovalAgencyTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Schools" cascade="none" lazy="true">
            <key>
              <column name="CharterApprovalAgencyTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CharterStatusDescriptorAggregate.EdFi.CharterStatusDescriptorQ" table="CharterStatusDescriptor" lazy="false">
          <key>
            <column name="CharterStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CharterStatusDescriptorId" column="CharterStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="LocalEducationAgencies" cascade="none" lazy="true">
            <key>
              <column name="CharterStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyQ" />
          </set>

          <set name="Schools" cascade="none" lazy="true">
            <key>
              <column name="CharterStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CitizenshipStatusDescriptorAggregate.EdFi.CitizenshipStatusDescriptorQ" table="CitizenshipStatusDescriptor" lazy="false">
          <key>
            <column name="CitizenshipStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Staffs" cascade="none" lazy="true">
            <key>
              <column name="CitizenshipStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" />
          </set>

          <set name="Students" cascade="none" lazy="true">
            <key>
              <column name="CitizenshipStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ClassroomPositionDescriptorAggregate.EdFi.ClassroomPositionDescriptorQ" table="ClassroomPositionDescriptor" lazy="false">
          <key>
            <column name="ClassroomPositionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ClassroomPositionDescriptorId" column="ClassroomPositionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffSectionAssociations" cascade="none" lazy="true">
            <key>
              <column name="ClassroomPositionDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSectionAssociationAggregate.EdFi.StaffSectionAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CohortScopeDescriptorAggregate.EdFi.CohortScopeDescriptorQ" table="CohortScopeDescriptor" lazy="false">
          <key>
            <column name="CohortScopeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CohortScopeDescriptorId" column="CohortScopeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Cohorts" cascade="none" lazy="true">
            <key>
              <column name="CohortScopeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CohortTypeDescriptorAggregate.EdFi.CohortTypeDescriptorQ" table="CohortTypeDescriptor" lazy="false">
          <key>
            <column name="CohortTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CohortTypeDescriptorId" column="CohortTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Cohorts" cascade="none" lazy="true">
            <key>
              <column name="CohortTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CohortYearTypeDescriptorAggregate.EdFi.CohortYearTypeDescriptorQ" table="CohortYearTypeDescriptor" lazy="false">
          <key>
            <column name="CohortYearTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CohortYearTypeDescriptorId" column="CohortYearTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentEducationOrganizationAssociationCohortYears" cascade="none" lazy="true">
            <key>
              <column name="CohortYearTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationCohortYearQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CompetencyLevelDescriptorAggregate.EdFi.CompetencyLevelDescriptorQ" table="CompetencyLevelDescriptor" lazy="false">
          <key>
            <column name="CompetencyLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CourseCompetencyLevels" cascade="none" lazy="true">
            <key>
              <column name="CompetencyLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseCompetencyLevelQ" />
          </set>

          <set name="StudentCompetencyObjectives" cascade="none" lazy="true">
            <key>
              <column name="CompetencyLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveQ" />
          </set>

          <set name="StudentGradebookEntries" cascade="none" lazy="true">
            <key>
              <column name="CompetencyLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentGradebookEntryAggregate.EdFi.StudentGradebookEntryQ" />
          </set>

          <set name="StudentLearningObjectives" cascade="none" lazy="true">
            <key>
              <column name="CompetencyLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ContactTypeDescriptorAggregate.EdFi.ContactTypeDescriptorQ" table="ContactTypeDescriptor" lazy="false">
          <key>
            <column name="ContactTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ContactTypeDescriptorId" column="ContactTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffEducationOrganizationContactAssociations" cascade="none" lazy="true">
            <key>
              <column name="ContactTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ContentClassDescriptorAggregate.EdFi.ContentClassDescriptorQ" table="ContentClassDescriptor" lazy="false">
          <key>
            <column name="ContentClassDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ContentClassDescriptorId" column="ContentClassDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationContents" cascade="none" lazy="true">
            <key>
              <column name="ContentClassDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ContinuationOfServicesReasonDescriptorAggregate.EdFi.ContinuationOfServicesReasonDescriptorQ" table="ContinuationOfServicesReasonDescriptor" lazy="false">
          <key>
            <column name="ContinuationOfServicesReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ContinuationOfServicesReasonDescriptorId" column="ContinuationOfServicesReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentMigrantEducationProgramAssociations" cascade="none" lazy="true">
            <key>
              <column name="ContinuationOfServicesReasonDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CostRateDescriptorAggregate.EdFi.CostRateDescriptorQ" table="CostRateDescriptor" lazy="false">
          <key>
            <column name="CostRateDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CostRateDescriptorId" column="CostRateDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationContents" cascade="none" lazy="true">
            <key>
              <column name="CostRateDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" table="CountryDescriptor" lazy="false">
          <key>
            <column name="CountryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizationInternationalAddresses" cascade="none" lazy="true">
            <key>
              <column name="CountryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationInternationalAddressQ" />
          </set>

          <set name="ParentInternationalAddresses" cascade="none" lazy="true">
            <key>
              <column name="CountryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentInternationalAddressQ" />
          </set>

          <set name="ParentPersonalIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="IssuerCountryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentPersonalIdentificationDocumentQ" />
          </set>

          <set name="StaffIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="IssuerCountryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffIdentificationDocumentQ" />
          </set>

          <set name="StaffInternationalAddresses" cascade="none" lazy="true">
            <key>
              <column name="CountryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffInternationalAddressQ" />
          </set>

          <set name="StaffPersonalIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="IssuerCountryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffPersonalIdentificationDocumentQ" />
          </set>

          <set name="Students" cascade="none" lazy="true">
            <key>
              <column name="BirthCountryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationInternationalAddresses" cascade="none" lazy="true">
            <key>
              <column name="CountryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationInternationalAddressQ" />
          </set>

          <set name="StudentIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="IssuerCountryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentIdentificationDocumentQ" />
          </set>

          <set name="StudentPersonalIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="IssuerCountryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentPersonalIdentificationDocumentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAttemptResultDescriptorAggregate.EdFi.CourseAttemptResultDescriptorQ" table="CourseAttemptResultDescriptor" lazy="false">
          <key>
            <column name="CourseAttemptResultDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseAttemptResultDescriptorId" column="CourseAttemptResultDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CourseTranscripts" cascade="none" lazy="true">
            <key>
              <column name="CourseAttemptResultDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseDefinedByDescriptorAggregate.EdFi.CourseDefinedByDescriptorQ" table="CourseDefinedByDescriptor" lazy="false">
          <key>
            <column name="CourseDefinedByDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseDefinedByDescriptorId" column="CourseDefinedByDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Courses" cascade="none" lazy="true">
            <key>
              <column name="CourseDefinedByDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseGPAApplicabilityDescriptorAggregate.EdFi.CourseGPAApplicabilityDescriptorQ" table="CourseGPAApplicabilityDescriptor" lazy="false">
          <key>
            <column name="CourseGPAApplicabilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseGPAApplicabilityDescriptorId" column="CourseGPAApplicabilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Courses" cascade="none" lazy="true">
            <key>
              <column name="CourseGPAApplicabilityDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseIdentificationSystemDescriptorAggregate.EdFi.CourseIdentificationSystemDescriptorQ" table="CourseIdentificationSystemDescriptor" lazy="false">
          <key>
            <column name="CourseIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseIdentificationSystemDescriptorId" column="CourseIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CourseIdentificationCodes" cascade="none" lazy="true">
            <key>
              <column name="CourseIdentificationSystemDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseIdentificationCodeQ" />
          </set>

          <set name="CourseTranscriptAlternativeCourseIdentificationCodes" cascade="none" lazy="true">
            <key>
              <column name="CourseIdentificationSystemDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptAlternativeCourseIdentificationCodeQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseLevelCharacteristicDescriptorAggregate.EdFi.CourseLevelCharacteristicDescriptorQ" table="CourseLevelCharacteristicDescriptor" lazy="false">
          <key>
            <column name="CourseLevelCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CourseLevelCharacteristics" cascade="none" lazy="true">
            <key>
              <column name="CourseLevelCharacteristicDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLevelCharacteristicQ" />
          </set>

          <set name="CourseOfferingCourseLevelCharacteristics" cascade="none" lazy="true">
            <key>
              <column name="CourseLevelCharacteristicDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingCourseLevelCharacteristicQ" />
          </set>

          <set name="SectionCourseLevelCharacteristics" cascade="none" lazy="true">
            <key>
              <column name="CourseLevelCharacteristicDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionCourseLevelCharacteristicQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CourseRepeatCodeDescriptorAggregate.EdFi.CourseRepeatCodeDescriptorQ" table="CourseRepeatCodeDescriptor" lazy="false">
          <key>
            <column name="CourseRepeatCodeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseRepeatCodeDescriptorId" column="CourseRepeatCodeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CourseTranscripts" cascade="none" lazy="true">
            <key>
              <column name="CourseRepeatCodeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialFieldDescriptorAggregate.EdFi.CredentialFieldDescriptorQ" table="CredentialFieldDescriptor" lazy="false">
          <key>
            <column name="CredentialFieldDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CredentialFieldDescriptorId" column="CredentialFieldDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Credentials" cascade="none" lazy="true">
            <key>
              <column name="CredentialFieldDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialTypeDescriptorAggregate.EdFi.CredentialTypeDescriptorQ" table="CredentialTypeDescriptor" lazy="false">
          <key>
            <column name="CredentialTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CredentialTypeDescriptorId" column="CredentialTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Credentials" cascade="none" lazy="true">
            <key>
              <column name="CredentialTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CreditCategoryDescriptorAggregate.EdFi.CreditCategoryDescriptorQ" table="CreditCategoryDescriptor" lazy="false">
          <key>
            <column name="CreditCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CreditCategoryDescriptorId" column="CreditCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CourseTranscriptCreditCategories" cascade="none" lazy="true">
            <key>
              <column name="CreditCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptCreditCategoryQ" />
          </set>

          <set name="GraduationPlanCreditsByCreditCategories" cascade="none" lazy="true">
            <key>
              <column name="CreditCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCreditCategoryQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" table="CreditTypeDescriptor" lazy="false">
          <key>
            <column name="CreditTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="MinimumAvailableCourses" cascade="none" lazy="true">
            <key>
              <column name="MinimumAvailableCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" />
          </set>

          <set name="MaximumAvailableCourses" cascade="none" lazy="true">
            <key>
              <column name="MaximumAvailableCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" />
          </set>

          <set name="AttemptedCourseTranscripts" cascade="none" lazy="true">
            <key>
              <column name="AttemptedCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptQ" />
          </set>

          <set name="EarnedCourseTranscripts" cascade="none" lazy="true">
            <key>
              <column name="EarnedCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptQ" />
          </set>

          <set name="GraduationPlans" cascade="none" lazy="true">
            <key>
              <column name="TotalRequiredCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanQ" />
          </set>

          <set name="GraduationPlanCreditsByCourses" cascade="none" lazy="true">
            <key>
              <column name="CreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseQ" />
          </set>

          <set name="GraduationPlanCreditsByCreditCategories" cascade="none" lazy="true">
            <key>
              <column name="CreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCreditCategoryQ" />
          </set>

          <set name="GraduationPlanCreditsBySubjects" cascade="none" lazy="true">
            <key>
              <column name="CreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsBySubjectQ" />
          </set>

          <set name="Sections" cascade="none" lazy="true">
            <key>
              <column name="AvailableCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" />
          </set>

          <set name="CumulativeEarnedStudentAcademicRecords" cascade="none" lazy="true">
            <key>
              <column name="CumulativeEarnedCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordQ" />
          </set>

          <set name="CumulativeAttemptedStudentAcademicRecords" cascade="none" lazy="true">
            <key>
              <column name="CumulativeAttemptedCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordQ" />
          </set>

          <set name="SessionEarnedStudentAcademicRecords" cascade="none" lazy="true">
            <key>
              <column name="SessionEarnedCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordQ" />
          </set>

          <set name="SessionAttemptedStudentAcademicRecords" cascade="none" lazy="true">
            <key>
              <column name="SessionAttemptedCreditTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CTEProgramServiceDescriptorAggregate.EdFi.CTEProgramServiceDescriptorQ" table="CTEProgramServiceDescriptor" lazy="false">
          <key>
            <column name="CTEProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CTEProgramServiceDescriptorId" column="CTEProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentCTEProgramAssociationCTEProgramServices" cascade="none" lazy="true">
            <key>
              <column name="CTEProgramServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgramServiceQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CurriculumUsedDescriptorAggregate.EdFi.CurriculumUsedDescriptorQ" table="CurriculumUsedDescriptor" lazy="false">
          <key>
            <column name="CurriculumUsedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CurriculumUsedDescriptorId" column="CurriculumUsedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CourseOfferingCurriculumUseds" cascade="none" lazy="true">
            <key>
              <column name="CurriculumUsedDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingCurriculumUsedQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.DeliveryMethodDescriptorAggregate.EdFi.DeliveryMethodDescriptorQ" table="DeliveryMethodDescriptor" lazy="false">
          <key>
            <column name="DeliveryMethodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Interventions" cascade="none" lazy="true">
            <key>
              <column name="DeliveryMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionQ" />
          </set>

          <set name="InterventionPrescriptions" cascade="none" lazy="true">
            <key>
              <column name="DeliveryMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionQ" />
          </set>

          <set name="InterventionStudies" cascade="none" lazy="true">
            <key>
              <column name="DeliveryMethodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.DiagnosisDescriptorAggregate.EdFi.DiagnosisDescriptorQ" table="DiagnosisDescriptor" lazy="false">
          <key>
            <column name="DiagnosisDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="InterventionDiagnoses" cascade="none" lazy="true">
            <key>
              <column name="DiagnosisDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionDiagnosisQ" />
          </set>

          <set name="InterventionPrescriptionDiagnoses" cascade="none" lazy="true">
            <key>
              <column name="DiagnosisDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionDiagnosisQ" />
          </set>

          <set name="InterventionStudyInterventionEffectivenesses" cascade="none" lazy="true">
            <key>
              <column name="DiagnosisDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyInterventionEffectivenessQ" />
          </set>

          <set name="StudentInterventionAssociationInterventionEffectivenesses" cascade="none" lazy="true">
            <key>
              <column name="DiagnosisDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationInterventionEffectivenessQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.DiplomaLevelDescriptorAggregate.EdFi.DiplomaLevelDescriptorQ" table="DiplomaLevelDescriptor" lazy="false">
          <key>
            <column name="DiplomaLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DiplomaLevelDescriptorId" column="DiplomaLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentAcademicRecordDiplomas" cascade="none" lazy="true">
            <key>
              <column name="DiplomaLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordDiplomaQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.DiplomaTypeDescriptorAggregate.EdFi.DiplomaTypeDescriptorQ" table="DiplomaTypeDescriptor" lazy="false">
          <key>
            <column name="DiplomaTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DiplomaTypeDescriptorId" column="DiplomaTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentAcademicRecordDiplomas" cascade="none" lazy="true">
            <key>
              <column name="DiplomaTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordDiplomaQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.DisabilityDescriptorAggregate.EdFi.DisabilityDescriptorQ" table="DisabilityDescriptor" lazy="false">
          <key>
            <column name="DisabilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentEducationOrganizationAssociationDisabilities" cascade="none" lazy="true">
            <key>
              <column name="DisabilityDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityQ" />
          </set>

          <set name="StudentSpecialEducationProgramAssociationDisabilities" cascade="none" lazy="true">
            <key>
              <column name="DisabilityDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.DisabilityDesignationDescriptorAggregate.EdFi.DisabilityDesignationDescriptorQ" table="DisabilityDesignationDescriptor" lazy="false">
          <key>
            <column name="DisabilityDesignationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentEducationOrganizationAssociationDisabilityDesignations" cascade="none" lazy="true">
            <key>
              <column name="DisabilityDesignationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityDesignationQ" />
          </set>

          <set name="StudentSpecialEducationProgramAssociationDisabilityDesignations" cascade="none" lazy="true">
            <key>
              <column name="DisabilityDesignationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityDesignationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.DisabilityDeterminationSourceTypeDescriptorAggregate.EdFi.DisabilityDeterminationSourceTypeDescriptorQ" table="DisabilityDeterminationSourceTypeDescriptor" lazy="false">
          <key>
            <column name="DisabilityDeterminationSourceTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentEducationOrganizationAssociationDisabilities" cascade="none" lazy="true">
            <key>
              <column name="DisabilityDeterminationSourceTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityQ" />
          </set>

          <set name="StudentSpecialEducationProgramAssociationDisabilities" cascade="none" lazy="true">
            <key>
              <column name="DisabilityDeterminationSourceTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionLengthDifferenceReasonDescriptorAggregate.EdFi.DisciplineActionLengthDifferenceReasonDescriptorQ" table="DisciplineActionLengthDifferenceReasonDescriptor" lazy="false">
          <key>
            <column name="DisciplineActionLengthDifferenceReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisciplineActionLengthDifferenceReasonDescriptorId" column="DisciplineActionLengthDifferenceReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="DisciplineActions" cascade="none" lazy="true">
            <key>
              <column name="DisciplineActionLengthDifferenceReasonDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineDescriptorAggregate.EdFi.DisciplineDescriptorQ" table="DisciplineDescriptor" lazy="false">
          <key>
            <column name="DisciplineDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisciplineDescriptorId" column="DisciplineDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="DisciplineActionDisciplines" cascade="none" lazy="true">
            <key>
              <column name="DisciplineDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionDisciplineQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentParticipationCodeDescriptorAggregate.EdFi.DisciplineIncidentParticipationCodeDescriptorQ" table="DisciplineIncidentParticipationCodeDescriptor" lazy="false">
          <key>
            <column name="DisciplineIncidentParticipationCodeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="DisciplineIncidentExternalParticipants" cascade="none" lazy="true">
            <key>
              <column name="DisciplineIncidentParticipationCodeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentExternalParticipantQ" />
          </set>

          <set name="StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCodes" cascade="none" lazy="true">
            <key>
              <column name="DisciplineIncidentParticipationCodeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCodeQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationalEnvironmentDescriptorAggregate.EdFi.EducationalEnvironmentDescriptorQ" table="EducationalEnvironmentDescriptor" lazy="false">
          <key>
            <column name="EducationalEnvironmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="RestraintEvents" cascade="none" lazy="true">
            <key>
              <column name="EducationalEnvironmentDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventAggregate.EdFi.RestraintEventQ" />
          </set>

          <set name="Sections" cascade="none" lazy="true">
            <key>
              <column name="EducationalEnvironmentDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" />
          </set>

          <set name="StudentInterventionAttendanceEvents" cascade="none" lazy="true">
            <key>
              <column name="EducationalEnvironmentDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAttendanceEventAggregate.EdFi.StudentInterventionAttendanceEventQ" />
          </set>

          <set name="StudentProgramAttendanceEvents" cascade="none" lazy="true">
            <key>
              <column name="EducationalEnvironmentDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentProgramAttendanceEventAggregate.EdFi.StudentProgramAttendanceEventQ" />
          </set>

          <set name="StudentSchoolAttendanceEvents" cascade="none" lazy="true">
            <key>
              <column name="EducationalEnvironmentDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAttendanceEventAggregate.EdFi.StudentSchoolAttendanceEventQ" />
          </set>

          <set name="StudentSectionAttendanceEvents" cascade="none" lazy="true">
            <key>
              <column name="EducationalEnvironmentDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEventQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationCategoryDescriptorAggregate.EdFi.EducationOrganizationCategoryDescriptorQ" table="EducationOrganizationCategoryDescriptor" lazy="false">
          <key>
            <column name="EducationOrganizationCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationOrganizationCategoryDescriptorId" column="EducationOrganizationCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizationCategories" cascade="none" lazy="true">
            <key>
              <column name="EducationOrganizationCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationCategoryQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationIdentificationSystemDescriptorAggregate.EdFi.EducationOrganizationIdentificationSystemDescriptorQ" table="EducationOrganizationIdentificationSystemDescriptor" lazy="false">
          <key>
            <column name="EducationOrganizationIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationOrganizationIdentificationSystemDescriptorId" column="EducationOrganizationIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizationIdentificationCodes" cascade="none" lazy="true">
            <key>
              <column name="EducationOrganizationIdentificationSystemDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationIdentificationCodeQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationPlanDescriptorAggregate.EdFi.EducationPlanDescriptorQ" table="EducationPlanDescriptor" lazy="false">
          <key>
            <column name="EducationPlanDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationPlanDescriptorId" column="EducationPlanDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSchoolAssociationEducationPlans" cascade="none" lazy="true">
            <key>
              <column name="EducationPlanDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationEducationPlanQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ElectronicMailTypeDescriptorAggregate.EdFi.ElectronicMailTypeDescriptorQ" table="ElectronicMailTypeDescriptor" lazy="false">
          <key>
            <column name="ElectronicMailTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ParentElectronicMails" cascade="none" lazy="true">
            <key>
              <column name="ElectronicMailTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentElectronicMailQ" />
          </set>

          <set name="StaffElectronicMails" cascade="none" lazy="true">
            <key>
              <column name="ElectronicMailTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffElectronicMailQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationElectronicMails" cascade="none" lazy="true">
            <key>
              <column name="ElectronicMailTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationElectronicMailQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.EmploymentStatusDescriptorAggregate.EdFi.EmploymentStatusDescriptorQ" table="EmploymentStatusDescriptor" lazy="false">
          <key>
            <column name="EmploymentStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="OpenStaffPositions" cascade="none" lazy="true">
            <key>
              <column name="EmploymentStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionQ" />
          </set>

          <set name="StaffEducationOrganizationEmploymentAssociations" cascade="none" lazy="true">
            <key>
              <column name="EmploymentStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.EntryGradeLevelReasonDescriptorAggregate.EdFi.EntryGradeLevelReasonDescriptorQ" table="EntryGradeLevelReasonDescriptor" lazy="false">
          <key>
            <column name="EntryGradeLevelReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EntryGradeLevelReasonDescriptorId" column="EntryGradeLevelReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSchoolAssociations" cascade="none" lazy="true">
            <key>
              <column name="EntryGradeLevelReasonDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.EntryTypeDescriptorAggregate.EdFi.EntryTypeDescriptorQ" table="EntryTypeDescriptor" lazy="false">
          <key>
            <column name="EntryTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EntryTypeDescriptorId" column="EntryTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSchoolAssociations" cascade="none" lazy="true">
            <key>
              <column name="EntryTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.EventCircumstanceDescriptorAggregate.EdFi.EventCircumstanceDescriptorQ" table="EventCircumstanceDescriptor" lazy="false">
          <key>
            <column name="EventCircumstanceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EventCircumstanceDescriptorId" column="EventCircumstanceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentAssessments" cascade="none" lazy="true">
            <key>
              <column name="EventCircumstanceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ExitWithdrawTypeDescriptorAggregate.EdFi.ExitWithdrawTypeDescriptorQ" table="ExitWithdrawTypeDescriptor" lazy="false">
          <key>
            <column name="ExitWithdrawTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ExitWithdrawTypeDescriptorId" column="ExitWithdrawTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSchoolAssociations" cascade="none" lazy="true">
            <key>
              <column name="ExitWithdrawTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryTypeDescriptorAggregate.EdFi.GradebookEntryTypeDescriptorQ" table="GradebookEntryTypeDescriptor" lazy="false">
          <key>
            <column name="GradebookEntryTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradebookEntryTypeDescriptorId" column="GradebookEntryTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="GradebookEntries" cascade="none" lazy="true">
            <key>
              <column name="GradebookEntryTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" table="GradeLevelDescriptor" lazy="false">
          <key>
            <column name="GradeLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentAssessedGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentAssessedGradeLevelQ" />
          </set>

          <set name="BellScheduleGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.BellScheduleAggregate.EdFi.BellScheduleGradeLevelQ" />
          </set>

          <set name="CalendarGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarAggregate.EdFi.CalendarGradeLevelQ" />
          </set>

          <set name="CompetencyObjectives" cascade="none" lazy="true">
            <key>
              <column name="ObjectiveGradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CompetencyObjectiveAggregate.EdFi.CompetencyObjectiveQ" />
          </set>

          <set name="CourseOfferedGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseOfferedGradeLevelQ" />
          </set>

          <set name="CourseOfferingOfferedGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingOfferedGradeLevelQ" />
          </set>

          <set name="CourseTranscripts" cascade="none" lazy="true">
            <key>
              <column name="WhenTakenGradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptQ" />
          </set>

          <set name="CredentialGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialGradeLevelQ" />
          </set>

          <set name="EducationContentAppropriateGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentAppropriateGradeLevelQ" />
          </set>

          <set name="GraduationPlanCreditsByCourses" cascade="none" lazy="true">
            <key>
              <column name="WhenTakenGradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseQ" />
          </set>

          <set name="InterventionAppropriateGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionAppropriateGradeLevelQ" />
          </set>

          <set name="InterventionPrescriptionAppropriateGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateGradeLevelQ" />
          </set>

          <set name="InterventionStudyAppropriateGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateGradeLevelQ" />
          </set>

          <set name="InterventionStudyInterventionEffectivenesses" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyInterventionEffectivenessQ" />
          </set>

          <set name="LearningObjectiveGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveGradeLevelQ" />
          </set>

          <set name="LearningStandardGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardGradeLevelQ" />
          </set>

          <set name="OpenStaffPositionInstructionalGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionInstructionalGradeLevelQ" />
          </set>

          <set name="SchoolGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolGradeLevelQ" />
          </set>

          <set name="SectionOfferedGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionOfferedGradeLevelQ" />
          </set>

          <set name="StaffSchoolAssociationGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationGradeLevelQ" />
          </set>

          <set name="StudentAssessments" cascade="none" lazy="true">
            <key>
              <column name="WhenAssessedGradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" />
          </set>

          <set name="StudentInterventionAssociationInterventionEffectivenesses" cascade="none" lazy="true">
            <key>
              <column name="GradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationInterventionEffectivenessQ" />
          </set>

          <set name="StudentSchoolAssociations" cascade="none" lazy="true">
            <key>
              <column name="EntryGradeLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.GradePointAverageTypeDescriptorAggregate.EdFi.GradePointAverageTypeDescriptorQ" table="GradePointAverageTypeDescriptor" lazy="false">
          <key>
            <column name="GradePointAverageTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradePointAverageTypeDescriptorId" column="GradePointAverageTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ReportCardGradePointAverages" cascade="none" lazy="true">
            <key>
              <column name="GradePointAverageTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardGradePointAverageQ" />
          </set>

          <set name="StudentAcademicRecordGradePointAverages" cascade="none" lazy="true">
            <key>
              <column name="GradePointAverageTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordGradePointAverageQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.GradeTypeDescriptorAggregate.EdFi.GradeTypeDescriptorQ" table="GradeTypeDescriptor" lazy="false">
          <key>
            <column name="GradeTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Grades" cascade="none" lazy="true">
            <key>
              <column name="GradeTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodDescriptorAggregate.EdFi.GradingPeriodDescriptorQ" table="GradingPeriodDescriptor" lazy="false">
          <key>
            <column name="GradingPeriodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="GradingPeriods" cascade="none" lazy="true">
            <key>
              <column name="GradingPeriodDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodAggregate.EdFi.GradingPeriodQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanTypeDescriptorAggregate.EdFi.GraduationPlanTypeDescriptorQ" table="GraduationPlanTypeDescriptor" lazy="false">
          <key>
            <column name="GraduationPlanTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="GraduationPlans" cascade="none" lazy="true">
            <key>
              <column name="GraduationPlanTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.GunFreeSchoolsActReportingStatusDescriptorAggregate.EdFi.GunFreeSchoolsActReportingStatusDescriptorQ" table="GunFreeSchoolsActReportingStatusDescriptor" lazy="false">
          <key>
            <column name="GunFreeSchoolsActReportingStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GunFreeSchoolsActReportingStatusDescriptorId" column="GunFreeSchoolsActReportingStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="LocalEducationAgencyAccountabilities" cascade="none" lazy="true">
            <key>
              <column name="GunFreeSchoolsActReportingStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyAccountabilityQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.HomelessPrimaryNighttimeResidenceDescriptorAggregate.EdFi.HomelessPrimaryNighttimeResidenceDescriptorQ" table="HomelessPrimaryNighttimeResidenceDescriptor" lazy="false">
          <key>
            <column name="HomelessPrimaryNighttimeResidenceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="HomelessPrimaryNighttimeResidenceDescriptorId" column="HomelessPrimaryNighttimeResidenceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentHomelessProgramAssociations" cascade="none" lazy="true">
            <key>
              <column name="HomelessPrimaryNighttimeResidenceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.HomelessProgramServiceDescriptorAggregate.EdFi.HomelessProgramServiceDescriptorQ" table="HomelessProgramServiceDescriptor" lazy="false">
          <key>
            <column name="HomelessProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="HomelessProgramServiceDescriptorId" column="HomelessProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentHomelessProgramAssociationHomelessProgramServices" cascade="none" lazy="true">
            <key>
              <column name="HomelessProgramServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociationHomelessProgramServiceQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.IdentificationDocumentUseDescriptorAggregate.EdFi.IdentificationDocumentUseDescriptorQ" table="IdentificationDocumentUseDescriptor" lazy="false">
          <key>
            <column name="IdentificationDocumentUseDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ParentPersonalIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="IdentificationDocumentUseDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentPersonalIdentificationDocumentQ" />
          </set>

          <set name="StaffIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="IdentificationDocumentUseDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffIdentificationDocumentQ" />
          </set>

          <set name="StaffPersonalIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="IdentificationDocumentUseDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffPersonalIdentificationDocumentQ" />
          </set>

          <set name="StudentIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="IdentificationDocumentUseDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentIdentificationDocumentQ" />
          </set>

          <set name="StudentPersonalIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="IdentificationDocumentUseDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentPersonalIdentificationDocumentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.IncidentLocationDescriptorAggregate.EdFi.IncidentLocationDescriptorQ" table="IncidentLocationDescriptor" lazy="false">
          <key>
            <column name="IncidentLocationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IncidentLocationDescriptorId" column="IncidentLocationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="DisciplineIncidents" cascade="none" lazy="true">
            <key>
              <column name="IncidentLocationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.IndicatorDescriptorAggregate.EdFi.IndicatorDescriptorQ" table="IndicatorDescriptor" lazy="false">
          <key>
            <column name="IndicatorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IndicatorDescriptorId" column="IndicatorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizationIndicators" cascade="none" lazy="true">
            <key>
              <column name="IndicatorDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.IndicatorGroupDescriptorAggregate.EdFi.IndicatorGroupDescriptorQ" table="IndicatorGroupDescriptor" lazy="false">
          <key>
            <column name="IndicatorGroupDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IndicatorGroupDescriptorId" column="IndicatorGroupDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizationIndicators" cascade="none" lazy="true">
            <key>
              <column name="IndicatorGroupDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.IndicatorLevelDescriptorAggregate.EdFi.IndicatorLevelDescriptorQ" table="IndicatorLevelDescriptor" lazy="false">
          <key>
            <column name="IndicatorLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IndicatorLevelDescriptorId" column="IndicatorLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizationIndicators" cascade="none" lazy="true">
            <key>
              <column name="IndicatorLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.InstitutionTelephoneNumberTypeDescriptorAggregate.EdFi.InstitutionTelephoneNumberTypeDescriptorQ" table="InstitutionTelephoneNumberTypeDescriptor" lazy="false">
          <key>
            <column name="InstitutionTelephoneNumberTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InstitutionTelephoneNumberTypeDescriptorId" column="InstitutionTelephoneNumberTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizationInstitutionTelephones" cascade="none" lazy="true">
            <key>
              <column name="InstitutionTelephoneNumberTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationInstitutionTelephoneQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.InteractivityStyleDescriptorAggregate.EdFi.InteractivityStyleDescriptorQ" table="InteractivityStyleDescriptor" lazy="false">
          <key>
            <column name="InteractivityStyleDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InteractivityStyleDescriptorId" column="InteractivityStyleDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationContents" cascade="none" lazy="true">
            <key>
              <column name="InteractivityStyleDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.InternetAccessDescriptorAggregate.EdFi.InternetAccessDescriptorQ" table="InternetAccessDescriptor" lazy="false">
          <key>
            <column name="InternetAccessDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InternetAccessDescriptorId" column="InternetAccessDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Schools" cascade="none" lazy="true">
            <key>
              <column name="InternetAccessDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionClassDescriptorAggregate.EdFi.InterventionClassDescriptorQ" table="InterventionClassDescriptor" lazy="false">
          <key>
            <column name="InterventionClassDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Interventions" cascade="none" lazy="true">
            <key>
              <column name="InterventionClassDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionQ" />
          </set>

          <set name="InterventionPrescriptions" cascade="none" lazy="true">
            <key>
              <column name="InterventionClassDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionQ" />
          </set>

          <set name="InterventionStudies" cascade="none" lazy="true">
            <key>
              <column name="InterventionClassDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionEffectivenessRatingDescriptorAggregate.EdFi.InterventionEffectivenessRatingDescriptorQ" table="InterventionEffectivenessRatingDescriptor" lazy="false">
          <key>
            <column name="InterventionEffectivenessRatingDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InterventionEffectivenessRatingDescriptorId" column="InterventionEffectivenessRatingDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="InterventionStudyInterventionEffectivenesses" cascade="none" lazy="true">
            <key>
              <column name="InterventionEffectivenessRatingDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyInterventionEffectivenessQ" />
          </set>

          <set name="StudentInterventionAssociationInterventionEffectivenesses" cascade="none" lazy="true">
            <key>
              <column name="InterventionEffectivenessRatingDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationInterventionEffectivenessQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageDescriptorAggregate.EdFi.LanguageDescriptorQ" table="LanguageDescriptor" lazy="false">
          <key>
            <column name="LanguageDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentLanguages" cascade="none" lazy="true">
            <key>
              <column name="LanguageDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentLanguageQ" />
          </set>

          <set name="EducationContentLanguages" cascade="none" lazy="true">
            <key>
              <column name="LanguageDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentLanguageQ" />
          </set>

          <set name="ParentLanguages" cascade="none" lazy="true">
            <key>
              <column name="LanguageDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentLanguageQ" />
          </set>

          <set name="Sections" cascade="none" lazy="true">
            <key>
              <column name="InstructionLanguageDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" />
          </set>

          <set name="StaffLanguages" cascade="none" lazy="true">
            <key>
              <column name="LanguageDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffLanguageQ" />
          </set>

          <set name="StudentAssessments" cascade="none" lazy="true">
            <key>
              <column name="AdministrationLanguageDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationLanguages" cascade="none" lazy="true">
            <key>
              <column name="LanguageDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguageQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageInstructionProgramServiceDescriptorAggregate.EdFi.LanguageInstructionProgramServiceDescriptorQ" table="LanguageInstructionProgramServiceDescriptor" lazy="false">
          <key>
            <column name="LanguageInstructionProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LanguageInstructionProgramServiceDescriptorId" column="LanguageInstructionProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentLanguageInstructionProgramAssociationLanguageInstructionProgramServices" cascade="none" lazy="true">
            <key>
              <column name="LanguageInstructionProgramServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramServiceQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageUseDescriptorAggregate.EdFi.LanguageUseDescriptorQ" table="LanguageUseDescriptor" lazy="false">
          <key>
            <column name="LanguageUseDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ParentLanguageUses" cascade="none" lazy="true">
            <key>
              <column name="LanguageUseDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentLanguageUseQ" />
          </set>

          <set name="StaffLanguageUses" cascade="none" lazy="true">
            <key>
              <column name="LanguageUseDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffLanguageUseQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationLanguageUses" cascade="none" lazy="true">
            <key>
              <column name="LanguageUseDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguageUseQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardCategoryDescriptorAggregate.EdFi.LearningStandardCategoryDescriptorQ" table="LearningStandardCategoryDescriptor" lazy="false">
          <key>
            <column name="LearningStandardCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LearningStandardCategoryDescriptorId" column="LearningStandardCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="LearningStandards" cascade="none" lazy="true">
            <key>
              <column name="LearningStandardCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardEquivalenceStrengthDescriptorAggregate.EdFi.LearningStandardEquivalenceStrengthDescriptorQ" table="LearningStandardEquivalenceStrengthDescriptor" lazy="false">
          <key>
            <column name="LearningStandardEquivalenceStrengthDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LearningStandardEquivalenceStrengthDescriptorId" column="LearningStandardEquivalenceStrengthDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="LearningStandardEquivalenceAssociations" cascade="none" lazy="true">
            <key>
              <column name="LearningStandardEquivalenceStrengthDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardEquivalenceAssociationAggregate.EdFi.LearningStandardEquivalenceAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardScopeDescriptorAggregate.EdFi.LearningStandardScopeDescriptorQ" table="LearningStandardScopeDescriptor" lazy="false">
          <key>
            <column name="LearningStandardScopeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LearningStandardScopeDescriptorId" column="LearningStandardScopeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="LearningStandards" cascade="none" lazy="true">
            <key>
              <column name="LearningStandardScopeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LevelOfEducationDescriptorAggregate.EdFi.LevelOfEducationDescriptorQ" table="LevelOfEducationDescriptor" lazy="false">
          <key>
            <column name="LevelOfEducationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LevelOfEducationDescriptorId" column="LevelOfEducationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Staffs" cascade="none" lazy="true">
            <key>
              <column name="HighestCompletedLevelOfEducationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LicenseStatusDescriptorAggregate.EdFi.LicenseStatusDescriptorQ" table="LicenseStatusDescriptor" lazy="false">
          <key>
            <column name="LicenseStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LicenseStatusDescriptorId" column="LicenseStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CommunityProviderLicenses" cascade="none" lazy="true">
            <key>
              <column name="LicenseStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityProviderLicenseAggregate.EdFi.CommunityProviderLicenseQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LicenseTypeDescriptorAggregate.EdFi.LicenseTypeDescriptorQ" table="LicenseTypeDescriptor" lazy="false">
          <key>
            <column name="LicenseTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LicenseTypeDescriptorId" column="LicenseTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CommunityProviderLicenses" cascade="none" lazy="true">
            <key>
              <column name="LicenseTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityProviderLicenseAggregate.EdFi.CommunityProviderLicenseQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LimitedEnglishProficiencyDescriptorAggregate.EdFi.LimitedEnglishProficiencyDescriptorQ" table="LimitedEnglishProficiencyDescriptor" lazy="false">
          <key>
            <column name="LimitedEnglishProficiencyDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LimitedEnglishProficiencyDescriptorId" column="LimitedEnglishProficiencyDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentEducationOrganizationAssociations" cascade="none" lazy="true">
            <key>
              <column name="LimitedEnglishProficiencyDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LocaleDescriptorAggregate.EdFi.LocaleDescriptorQ" table="LocaleDescriptor" lazy="false">
          <key>
            <column name="LocaleDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizationAddresses" cascade="none" lazy="true">
            <key>
              <column name="LocaleDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressQ" />
          </set>

          <set name="ParentAddresses" cascade="none" lazy="true">
            <key>
              <column name="LocaleDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentAddressQ" />
          </set>

          <set name="StaffAddresses" cascade="none" lazy="true">
            <key>
              <column name="LocaleDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffAddressQ" />
          </set>

          <set name="StaffEducationOrganizationContactAssociationAddresses" cascade="none" lazy="true">
            <key>
              <column name="LocaleDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddressQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationAddresses" cascade="none" lazy="true">
            <key>
              <column name="LocaleDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyCategoryDescriptorAggregate.EdFi.LocalEducationAgencyCategoryDescriptorQ" table="LocalEducationAgencyCategoryDescriptor" lazy="false">
          <key>
            <column name="LocalEducationAgencyCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LocalEducationAgencyCategoryDescriptorId" column="LocalEducationAgencyCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="LocalEducationAgencies" cascade="none" lazy="true">
            <key>
              <column name="LocalEducationAgencyCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.MagnetSpecialProgramEmphasisSchoolDescriptorAggregate.EdFi.MagnetSpecialProgramEmphasisSchoolDescriptorQ" table="MagnetSpecialProgramEmphasisSchoolDescriptor" lazy="false">
          <key>
            <column name="MagnetSpecialProgramEmphasisSchoolDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MagnetSpecialProgramEmphasisSchoolDescriptorId" column="MagnetSpecialProgramEmphasisSchoolDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Schools" cascade="none" lazy="true">
            <key>
              <column name="MagnetSpecialProgramEmphasisSchoolDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.MediumOfInstructionDescriptorAggregate.EdFi.MediumOfInstructionDescriptorQ" table="MediumOfInstructionDescriptor" lazy="false">
          <key>
            <column name="MediumOfInstructionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MediumOfInstructionDescriptorId" column="MediumOfInstructionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="PostSecondaryInstitutionMediumOfInstructions" cascade="none" lazy="true">
            <key>
              <column name="MediumOfInstructionDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionMediumOfInstructionQ" />
          </set>

          <set name="Sections" cascade="none" lazy="true">
            <key>
              <column name="MediumOfInstructionDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.MethodCreditEarnedDescriptorAggregate.EdFi.MethodCreditEarnedDescriptorQ" table="MethodCreditEarnedDescriptor" lazy="false">
          <key>
            <column name="MethodCreditEarnedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MethodCreditEarnedDescriptorId" column="MethodCreditEarnedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CourseTranscripts" cascade="none" lazy="true">
            <key>
              <column name="MethodCreditEarnedDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.MigrantEducationProgramServiceDescriptorAggregate.EdFi.MigrantEducationProgramServiceDescriptorQ" table="MigrantEducationProgramServiceDescriptor" lazy="false">
          <key>
            <column name="MigrantEducationProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MigrantEducationProgramServiceDescriptorId" column="MigrantEducationProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentMigrantEducationProgramAssociationMigrantEducationProgramServices" cascade="none" lazy="true">
            <key>
              <column name="MigrantEducationProgramServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociationMigrantEducationProgramServiceQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.MonitoredDescriptorAggregate.EdFi.MonitoredDescriptorQ" table="MonitoredDescriptor" lazy="false">
          <key>
            <column name="MonitoredDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MonitoredDescriptorId" column="MonitoredDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessments" cascade="none" lazy="true">
            <key>
              <column name="MonitoredDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessmentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.NeglectedOrDelinquentProgramDescriptorAggregate.EdFi.NeglectedOrDelinquentProgramDescriptorQ" table="NeglectedOrDelinquentProgramDescriptor" lazy="false">
          <key>
            <column name="NeglectedOrDelinquentProgramDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="NeglectedOrDelinquentProgramDescriptorId" column="NeglectedOrDelinquentProgramDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentNeglectedOrDelinquentProgramAssociations" cascade="none" lazy="true">
            <key>
              <column name="NeglectedOrDelinquentProgramDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.NeglectedOrDelinquentProgramServiceDescriptorAggregate.EdFi.NeglectedOrDelinquentProgramServiceDescriptorQ" table="NeglectedOrDelinquentProgramServiceDescriptor" lazy="false">
          <key>
            <column name="NeglectedOrDelinquentProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="NeglectedOrDelinquentProgramServiceDescriptorId" column="NeglectedOrDelinquentProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramServices" cascade="none" lazy="true">
            <key>
              <column name="NeglectedOrDelinquentProgramServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramServiceQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.NetworkPurposeDescriptorAggregate.EdFi.NetworkPurposeDescriptorQ" table="NetworkPurposeDescriptor" lazy="false">
          <key>
            <column name="NetworkPurposeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="NetworkPurposeDescriptorId" column="NetworkPurposeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizationNetworks" cascade="none" lazy="true">
            <key>
              <column name="NetworkPurposeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationNetworkAggregate.EdFi.EducationOrganizationNetworkQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.OldEthnicityDescriptorAggregate.EdFi.OldEthnicityDescriptorQ" table="OldEthnicityDescriptor" lazy="false">
          <key>
            <column name="OldEthnicityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OldEthnicityDescriptorId" column="OldEthnicityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Staffs" cascade="none" lazy="true">
            <key>
              <column name="OldEthnicityDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" />
          </set>

          <set name="StudentEducationOrganizationAssociations" cascade="none" lazy="true">
            <key>
              <column name="OldEthnicityDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.OperationalStatusDescriptorAggregate.EdFi.OperationalStatusDescriptorQ" table="OperationalStatusDescriptor" lazy="false">
          <key>
            <column name="OperationalStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OperationalStatusDescriptorId" column="OperationalStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationOrganizations" cascade="none" lazy="true">
            <key>
              <column name="OperationalStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.OtherNameTypeDescriptorAggregate.EdFi.OtherNameTypeDescriptorQ" table="OtherNameTypeDescriptor" lazy="false">
          <key>
            <column name="OtherNameTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ParentOtherNames" cascade="none" lazy="true">
            <key>
              <column name="OtherNameTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentOtherNameQ" />
          </set>

          <set name="StaffOtherNames" cascade="none" lazy="true">
            <key>
              <column name="OtherNameTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffOtherNameQ" />
          </set>

          <set name="StudentOtherNames" cascade="none" lazy="true">
            <key>
              <column name="OtherNameTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentOtherNameQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ParticipationDescriptorAggregate.EdFi.ParticipationDescriptorQ" table="ParticipationDescriptor" lazy="false">
          <key>
            <column name="ParticipationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ParticipationDescriptorId" column="ParticipationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessments" cascade="none" lazy="true">
            <key>
              <column name="ParticipationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessmentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ParticipationStatusDescriptorAggregate.EdFi.ParticipationStatusDescriptorQ" table="ParticipationStatusDescriptor" lazy="false">
          <key>
            <column name="ParticipationStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ParticipationStatusDescriptorId" column="ParticipationStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="GeneralStudentProgramAssociationParticipationStatuses" cascade="none" lazy="true">
            <key>
              <column name="ParticipationStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationParticipationStatusQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.PerformanceBaseConversionDescriptorAggregate.EdFi.PerformanceBaseConversionDescriptorQ" table="PerformanceBaseConversionDescriptor" lazy="false">
          <key>
            <column name="PerformanceBaseConversionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PerformanceBaseConversionDescriptorId" column="PerformanceBaseConversionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Grades" cascade="none" lazy="true">
            <key>
              <column name="PerformanceBaseConversionDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeQ" />
          </set>

          <set name="GradeLearningStandardGrades" cascade="none" lazy="true">
            <key>
              <column name="PerformanceBaseConversionDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeLearningStandardGradeQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.PerformanceLevelDescriptorAggregate.EdFi.PerformanceLevelDescriptorQ" table="PerformanceLevelDescriptor" lazy="false">
          <key>
            <column name="PerformanceLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="PerformanceLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPerformanceLevelQ" />
          </set>

          <set name="GraduationPlanRequiredAssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="PerformanceLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentPerformanceLevelQ" />
          </set>

          <set name="ObjectiveAssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="PerformanceLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentPerformanceLevelQ" />
          </set>

          <set name="StudentAssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="PerformanceLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentPerformanceLevelQ" />
          </set>

          <set name="StudentAssessmentStudentObjectiveAssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="PerformanceLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevelQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.PersonalInformationVerificationDescriptorAggregate.EdFi.PersonalInformationVerificationDescriptorQ" table="PersonalInformationVerificationDescriptor" lazy="false">
          <key>
            <column name="PersonalInformationVerificationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ParentPersonalIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="PersonalInformationVerificationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentPersonalIdentificationDocumentQ" />
          </set>

          <set name="StaffIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="PersonalInformationVerificationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffIdentificationDocumentQ" />
          </set>

          <set name="StaffPersonalIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="PersonalInformationVerificationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffPersonalIdentificationDocumentQ" />
          </set>

          <set name="StudentIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="PersonalInformationVerificationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentIdentificationDocumentQ" />
          </set>

          <set name="StudentPersonalIdentificationDocuments" cascade="none" lazy="true">
            <key>
              <column name="PersonalInformationVerificationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentPersonalIdentificationDocumentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.PlatformTypeDescriptorAggregate.EdFi.PlatformTypeDescriptorQ" table="PlatformTypeDescriptor" lazy="false">
          <key>
            <column name="PlatformTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PlatformTypeDescriptorId" column="PlatformTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentPlatformTypes" cascade="none" lazy="true">
            <key>
              <column name="PlatformTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPlatformTypeQ" />
          </set>

          <set name="StudentAssessments" cascade="none" lazy="true">
            <key>
              <column name="PlatformTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.PopulationServedDescriptorAggregate.EdFi.PopulationServedDescriptorQ" table="PopulationServedDescriptor" lazy="false">
          <key>
            <column name="PopulationServedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="InterventionPopulationServeds" cascade="none" lazy="true">
            <key>
              <column name="PopulationServedDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionPopulationServedQ" />
          </set>

          <set name="InterventionPrescriptionPopulationServeds" cascade="none" lazy="true">
            <key>
              <column name="PopulationServedDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionPopulationServedQ" />
          </set>

          <set name="InterventionStudyInterventionEffectivenesses" cascade="none" lazy="true">
            <key>
              <column name="PopulationServedDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyInterventionEffectivenessQ" />
          </set>

          <set name="InterventionStudyPopulationServeds" cascade="none" lazy="true">
            <key>
              <column name="PopulationServedDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyPopulationServedQ" />
          </set>

          <set name="Sections" cascade="none" lazy="true">
            <key>
              <column name="PopulationServedDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" />
          </set>

          <set name="StudentInterventionAssociationInterventionEffectivenesses" cascade="none" lazy="true">
            <key>
              <column name="PopulationServedDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationInterventionEffectivenessQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.PostingResultDescriptorAggregate.EdFi.PostingResultDescriptorQ" table="PostingResultDescriptor" lazy="false">
          <key>
            <column name="PostingResultDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PostingResultDescriptorId" column="PostingResultDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="OpenStaffPositions" cascade="none" lazy="true">
            <key>
              <column name="PostingResultDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryEventCategoryDescriptorAggregate.EdFi.PostSecondaryEventCategoryDescriptorQ" table="PostSecondaryEventCategoryDescriptor" lazy="false">
          <key>
            <column name="PostSecondaryEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PostSecondaryEventCategoryDescriptorId" column="PostSecondaryEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="PostSecondaryEvents" cascade="none" lazy="true">
            <key>
              <column name="PostSecondaryEventCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryEventAggregate.EdFi.PostSecondaryEventQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryInstitutionLevelDescriptorAggregate.EdFi.PostSecondaryInstitutionLevelDescriptorQ" table="PostSecondaryInstitutionLevelDescriptor" lazy="false">
          <key>
            <column name="PostSecondaryInstitutionLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PostSecondaryInstitutionLevelDescriptorId" column="PostSecondaryInstitutionLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="PostSecondaryInstitutions" cascade="none" lazy="true">
            <key>
              <column name="PostSecondaryInstitutionLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ProficiencyDescriptorAggregate.EdFi.ProficiencyDescriptorQ" table="ProficiencyDescriptor" lazy="false">
          <key>
            <column name="ProficiencyDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProficiencyDescriptorId" column="ProficiencyDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessments" cascade="none" lazy="true">
            <key>
              <column name="ProficiencyDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessmentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAssignmentDescriptorAggregate.EdFi.ProgramAssignmentDescriptorQ" table="ProgramAssignmentDescriptor" lazy="false">
          <key>
            <column name="ProgramAssignmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="OpenStaffPositions" cascade="none" lazy="true">
            <key>
              <column name="ProgramAssignmentDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionQ" />
          </set>

          <set name="StaffSchoolAssociations" cascade="none" lazy="true">
            <key>
              <column name="ProgramAssignmentDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramCharacteristicDescriptorAggregate.EdFi.ProgramCharacteristicDescriptorQ" table="ProgramCharacteristicDescriptor" lazy="false">
          <key>
            <column name="ProgramCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramCharacteristicDescriptorId" column="ProgramCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ProgramCharacteristics" cascade="none" lazy="true">
            <key>
              <column name="ProgramCharacteristicDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramCharacteristicQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristics" cascade="none" lazy="true">
            <key>
              <column name="ProgramCharacteristicDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristicQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramSponsorDescriptorAggregate.EdFi.ProgramSponsorDescriptorQ" table="ProgramSponsorDescriptor" lazy="false">
          <key>
            <column name="ProgramSponsorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramSponsorDescriptorId" column="ProgramSponsorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ProgramSponsors" cascade="none" lazy="true">
            <key>
              <column name="ProgramSponsorDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramSponsorQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramTypeDescriptorAggregate.EdFi.ProgramTypeDescriptorQ" table="ProgramTypeDescriptor" lazy="false">
          <key>
            <column name="ProgramTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Programs" cascade="none" lazy="true">
            <key>
              <column name="ProgramTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationProgramParticipations" cascade="none" lazy="true">
            <key>
              <column name="ProgramTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationProgramParticipationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgressDescriptorAggregate.EdFi.ProgressDescriptorQ" table="ProgressDescriptor" lazy="false">
          <key>
            <column name="ProgressDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgressDescriptorId" column="ProgressDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessments" cascade="none" lazy="true">
            <key>
              <column name="ProgressDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessmentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgressLevelDescriptorAggregate.EdFi.ProgressLevelDescriptorQ" table="ProgressLevelDescriptor" lazy="false">
          <key>
            <column name="ProgressLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgressLevelDescriptorId" column="ProgressLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ELAStudentNeglectedOrDelinquentProgramAssociations" cascade="none" lazy="true">
            <key>
              <column name="ELAProgressLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationQ" />
          </set>

          <set name="MathematicsStudentNeglectedOrDelinquentProgramAssociations" cascade="none" lazy="true">
            <key>
              <column name="MathematicsProgressLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ProviderCategoryDescriptorAggregate.EdFi.ProviderCategoryDescriptorQ" table="ProviderCategoryDescriptor" lazy="false">
          <key>
            <column name="ProviderCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProviderCategoryDescriptorId" column="ProviderCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CommunityProviders" cascade="none" lazy="true">
            <key>
              <column name="ProviderCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityProviderAggregate.EdFi.CommunityProviderQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ProviderProfitabilityDescriptorAggregate.EdFi.ProviderProfitabilityDescriptorQ" table="ProviderProfitabilityDescriptor" lazy="false">
          <key>
            <column name="ProviderProfitabilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProviderProfitabilityDescriptorId" column="ProviderProfitabilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CommunityProviders" cascade="none" lazy="true">
            <key>
              <column name="ProviderProfitabilityDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityProviderAggregate.EdFi.CommunityProviderQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ProviderStatusDescriptorAggregate.EdFi.ProviderStatusDescriptorQ" table="ProviderStatusDescriptor" lazy="false">
          <key>
            <column name="ProviderStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProviderStatusDescriptorId" column="ProviderStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CommunityProviders" cascade="none" lazy="true">
            <key>
              <column name="ProviderStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityProviderAggregate.EdFi.CommunityProviderQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.PublicationStatusDescriptorAggregate.EdFi.PublicationStatusDescriptorQ" table="PublicationStatusDescriptor" lazy="false">
          <key>
            <column name="PublicationStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentContentStandards" cascade="none" lazy="true">
            <key>
              <column name="PublicationStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentContentStandardQ" />
          </set>

          <set name="LearningObjectiveContentStandards" cascade="none" lazy="true">
            <key>
              <column name="PublicationStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandardQ" />
          </set>

          <set name="LearningStandardContentStandards" cascade="none" lazy="true">
            <key>
              <column name="PublicationStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardContentStandardQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.QuestionFormDescriptorAggregate.EdFi.QuestionFormDescriptorQ" table="QuestionFormDescriptor" lazy="false">
          <key>
            <column name="QuestionFormDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="QuestionFormDescriptorId" column="QuestionFormDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="SurveyQuestions" cascade="none" lazy="true">
            <key>
              <column name="QuestionFormDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionAggregate.EdFi.SurveyQuestionQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.RaceDescriptorAggregate.EdFi.RaceDescriptorQ" table="RaceDescriptor" lazy="false">
          <key>
            <column name="RaceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RaceDescriptorId" column="RaceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffRaces" cascade="none" lazy="true">
            <key>
              <column name="RaceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffRaceQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationRaces" cascade="none" lazy="true">
            <key>
              <column name="RaceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationRaceQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ReasonExitedDescriptorAggregate.EdFi.ReasonExitedDescriptorQ" table="ReasonExitedDescriptor" lazy="false">
          <key>
            <column name="ReasonExitedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ReasonExitedDescriptorId" column="ReasonExitedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="GeneralStudentProgramAssociations" cascade="none" lazy="true">
            <key>
              <column name="ReasonExitedDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ReasonNotTestedDescriptorAggregate.EdFi.ReasonNotTestedDescriptorQ" table="ReasonNotTestedDescriptor" lazy="false">
          <key>
            <column name="ReasonNotTestedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ReasonNotTestedDescriptorId" column="ReasonNotTestedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentAssessments" cascade="none" lazy="true">
            <key>
              <column name="ReasonNotTestedDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.RecognitionTypeDescriptorAggregate.EdFi.RecognitionTypeDescriptorQ" table="RecognitionTypeDescriptor" lazy="false">
          <key>
            <column name="RecognitionTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RecognitionTypeDescriptorId" column="RecognitionTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffRecognitions" cascade="none" lazy="true">
            <key>
              <column name="RecognitionTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffRecognitionQ" />
          </set>

          <set name="StudentAcademicRecordRecognitions" cascade="none" lazy="true">
            <key>
              <column name="RecognitionTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordRecognitionQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.RelationDescriptorAggregate.EdFi.RelationDescriptorQ" table="RelationDescriptor" lazy="false">
          <key>
            <column name="RelationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RelationDescriptorId" column="RelationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentParentAssociations" cascade="none" lazy="true">
            <key>
              <column name="RelationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentParentAssociationAggregate.EdFi.StudentParentAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.RepeatIdentifierDescriptorAggregate.EdFi.RepeatIdentifierDescriptorQ" table="RepeatIdentifierDescriptor" lazy="false">
          <key>
            <column name="RepeatIdentifierDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RepeatIdentifierDescriptorId" column="RepeatIdentifierDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSectionAssociations" cascade="none" lazy="true">
            <key>
              <column name="RepeatIdentifierDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ReporterDescriptionDescriptorAggregate.EdFi.ReporterDescriptionDescriptorQ" table="ReporterDescriptionDescriptor" lazy="false">
          <key>
            <column name="ReporterDescriptionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ReporterDescriptionDescriptorId" column="ReporterDescriptionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="DisciplineIncidents" cascade="none" lazy="true">
            <key>
              <column name="ReporterDescriptionDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ResidencyStatusDescriptorAggregate.EdFi.ResidencyStatusDescriptorQ" table="ResidencyStatusDescriptor" lazy="false">
          <key>
            <column name="ResidencyStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResidencyStatusDescriptorId" column="ResidencyStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSchoolAssociations" cascade="none" lazy="true">
            <key>
              <column name="ResidencyStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ResponseIndicatorDescriptorAggregate.EdFi.ResponseIndicatorDescriptorQ" table="ResponseIndicatorDescriptor" lazy="false">
          <key>
            <column name="ResponseIndicatorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResponseIndicatorDescriptorId" column="ResponseIndicatorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentAssessmentItems" cascade="none" lazy="true">
            <key>
              <column name="ResponseIndicatorDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentItemQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ResponsibilityDescriptorAggregate.EdFi.ResponsibilityDescriptorQ" table="ResponsibilityDescriptor" lazy="false">
          <key>
            <column name="ResponsibilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResponsibilityDescriptorId" column="ResponsibilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentEducationOrganizationResponsibilityAssociations" cascade="none" lazy="true">
            <key>
              <column name="ResponsibilityDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationResponsibilityAssociationAggregate.EdFi.StudentEducationOrganizationResponsibilityAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventReasonDescriptorAggregate.EdFi.RestraintEventReasonDescriptorQ" table="RestraintEventReasonDescriptor" lazy="false">
          <key>
            <column name="RestraintEventReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RestraintEventReasonDescriptorId" column="RestraintEventReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="RestraintEventReasons" cascade="none" lazy="true">
            <key>
              <column name="RestraintEventReasonDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventAggregate.EdFi.RestraintEventReasonQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptorQ" table="ResultDatatypeTypeDescriptor" lazy="false">
          <key>
            <column name="ResultDatatypeTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="AssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="ResultDatatypeTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentPerformanceLevelQ" />
          </set>

          <set name="AssessmentScores" cascade="none" lazy="true">
            <key>
              <column name="ResultDatatypeTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentScoreQ" />
          </set>

          <set name="GraduationPlanRequiredAssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="ResultDatatypeTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentPerformanceLevelQ" />
          </set>

          <set name="GraduationPlanRequiredAssessmentScores" cascade="none" lazy="true">
            <key>
              <column name="ResultDatatypeTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentScoreQ" />
          </set>

          <set name="ObjectiveAssessmentPerformanceLevels" cascade="none" lazy="true">
            <key>
              <column name="ResultDatatypeTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentPerformanceLevelQ" />
          </set>

          <set name="ObjectiveAssessmentScores" cascade="none" lazy="true">
            <key>
              <column name="ResultDatatypeTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentScoreQ" />
          </set>

          <set name="StudentAssessmentScoreResults" cascade="none" lazy="true">
            <key>
              <column name="ResultDatatypeTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentScoreResultQ" />
          </set>

          <set name="StudentAssessmentStudentObjectiveAssessmentScoreResults" cascade="none" lazy="true">
            <key>
              <column name="ResultDatatypeTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentScoreResultQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.RetestIndicatorDescriptorAggregate.EdFi.RetestIndicatorDescriptorQ" table="RetestIndicatorDescriptor" lazy="false">
          <key>
            <column name="RetestIndicatorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RetestIndicatorDescriptorId" column="RetestIndicatorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentAssessments" cascade="none" lazy="true">
            <key>
              <column name="RetestIndicatorDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolCategoryDescriptorAggregate.EdFi.SchoolCategoryDescriptorQ" table="SchoolCategoryDescriptor" lazy="false">
          <key>
            <column name="SchoolCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolCategoryDescriptorId" column="SchoolCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="SchoolCategories" cascade="none" lazy="true">
            <key>
              <column name="SchoolCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolCategoryQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolChoiceImplementStatusDescriptorAggregate.EdFi.SchoolChoiceImplementStatusDescriptorQ" table="SchoolChoiceImplementStatusDescriptor" lazy="false">
          <key>
            <column name="SchoolChoiceImplementStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolChoiceImplementStatusDescriptorId" column="SchoolChoiceImplementStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="LocalEducationAgencyAccountabilities" cascade="none" lazy="true">
            <key>
              <column name="SchoolChoiceImplementStatusDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyAccountabilityQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolFoodServiceProgramServiceDescriptorAggregate.EdFi.SchoolFoodServiceProgramServiceDescriptorQ" table="SchoolFoodServiceProgramServiceDescriptor" lazy="false">
          <key>
            <column name="SchoolFoodServiceProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolFoodServiceProgramServiceDescriptorId" column="SchoolFoodServiceProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramServices" cascade="none" lazy="true">
            <key>
              <column name="SchoolFoodServiceProgramServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolFoodServiceProgramAssociationAggregate.EdFi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramServiceQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolTypeDescriptorAggregate.EdFi.SchoolTypeDescriptorQ" table="SchoolTypeDescriptor" lazy="false">
          <key>
            <column name="SchoolTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolTypeDescriptorId" column="SchoolTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Schools" cascade="none" lazy="true">
            <key>
              <column name="SchoolTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SectionCharacteristicDescriptorAggregate.EdFi.SectionCharacteristicDescriptorQ" table="SectionCharacteristicDescriptor" lazy="false">
          <key>
            <column name="SectionCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SectionCharacteristicDescriptorId" column="SectionCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="SectionCharacteristics" cascade="none" lazy="true">
            <key>
              <column name="SectionCharacteristicDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionCharacteristicQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SeparationDescriptorAggregate.EdFi.SeparationDescriptorQ" table="SeparationDescriptor" lazy="false">
          <key>
            <column name="SeparationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SeparationDescriptorId" column="SeparationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffEducationOrganizationEmploymentAssociations" cascade="none" lazy="true">
            <key>
              <column name="SeparationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SeparationReasonDescriptorAggregate.EdFi.SeparationReasonDescriptorQ" table="SeparationReasonDescriptor" lazy="false">
          <key>
            <column name="SeparationReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SeparationReasonDescriptorId" column="SeparationReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffEducationOrganizationEmploymentAssociations" cascade="none" lazy="true">
            <key>
              <column name="SeparationReasonDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.ServiceDescriptorAggregate.EdFi.ServiceDescriptorQ" table="ServiceDescriptor" lazy="false">
          <key>
            <column name="ServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ProgramServices" cascade="none" lazy="true">
            <key>
              <column name="ServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramServiceQ" />
          </set>

          <set name="StudentCTEProgramAssociationServices" cascade="none" lazy="true">
            <key>
              <column name="ServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationServiceQ" />
          </set>

          <set name="StudentProgramAssociationServices" cascade="none" lazy="true">
            <key>
              <column name="ServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentProgramAssociationAggregate.EdFi.StudentProgramAssociationServiceQ" />
          </set>

          <set name="StudentTitleIPartAProgramAssociationServices" cascade="none" lazy="true">
            <key>
              <column name="ServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationServiceQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SexDescriptorAggregate.EdFi.SexDescriptorQ" table="SexDescriptor" lazy="false">
          <key>
            <column name="SexDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SexDescriptorId" column="SexDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="EducationContentAppropriateSexes" cascade="none" lazy="true">
            <key>
              <column name="SexDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentAppropriateSexQ" />
          </set>

          <set name="InterventionAppropriateSexes" cascade="none" lazy="true">
            <key>
              <column name="SexDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionAppropriateSexQ" />
          </set>

          <set name="InterventionPrescriptionAppropriateSexes" cascade="none" lazy="true">
            <key>
              <column name="SexDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateSexQ" />
          </set>

          <set name="InterventionStudyAppropriateSexes" cascade="none" lazy="true">
            <key>
              <column name="SexDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateSexQ" />
          </set>

          <set name="Parents" cascade="none" lazy="true">
            <key>
              <column name="SexDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentQ" />
          </set>

          <set name="Staffs" cascade="none" lazy="true">
            <key>
              <column name="SexDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" />
          </set>

          <set name="Students" cascade="none" lazy="true">
            <key>
              <column name="BirthSexDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" />
          </set>

          <set name="StudentEducationOrganizationAssociations" cascade="none" lazy="true">
            <key>
              <column name="SexDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SourceSystemDescriptorAggregate.EdFi.SourceSystemDescriptorQ" table="SourceSystemDescriptor" lazy="false">
          <key>
            <column name="SourceSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="People" cascade="none" lazy="true">
            <key>
              <column name="SourceSystemDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.PersonAggregate.EdFi.PersonQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SpecialEducationProgramServiceDescriptorAggregate.EdFi.SpecialEducationProgramServiceDescriptorQ" table="SpecialEducationProgramServiceDescriptor" lazy="false">
          <key>
            <column name="SpecialEducationProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SpecialEducationProgramServiceDescriptorId" column="SpecialEducationProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSpecialEducationProgramAssociationSpecialEducationProgramServices" cascade="none" lazy="true">
            <key>
              <column name="SpecialEducationProgramServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SpecialEducationSettingDescriptorAggregate.EdFi.SpecialEducationSettingDescriptorQ" table="SpecialEducationSettingDescriptor" lazy="false">
          <key>
            <column name="SpecialEducationSettingDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SpecialEducationSettingDescriptorId" column="SpecialEducationSettingDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSpecialEducationProgramAssociations" cascade="none" lazy="true">
            <key>
              <column name="SpecialEducationSettingDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffClassificationDescriptorAggregate.EdFi.StaffClassificationDescriptorQ" table="StaffClassificationDescriptor" lazy="false">
          <key>
            <column name="StaffClassificationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="OpenStaffPositions" cascade="none" lazy="true">
            <key>
              <column name="StaffClassificationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionQ" />
          </set>

          <set name="StaffEducationOrganizationAssignmentAssociations" cascade="none" lazy="true">
            <key>
              <column name="StaffClassificationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationAssignmentAssociationAggregate.EdFi.StaffEducationOrganizationAssignmentAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffIdentificationSystemDescriptorAggregate.EdFi.StaffIdentificationSystemDescriptorQ" table="StaffIdentificationSystemDescriptor" lazy="false">
          <key>
            <column name="StaffIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StaffIdentificationSystemDescriptorId" column="StaffIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffIdentificationCodes" cascade="none" lazy="true">
            <key>
              <column name="StaffIdentificationSystemDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffIdentificationCodeQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffLeaveEventCategoryDescriptorAggregate.EdFi.StaffLeaveEventCategoryDescriptorQ" table="StaffLeaveEventCategoryDescriptor" lazy="false">
          <key>
            <column name="StaffLeaveEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StaffLeaveEventCategoryDescriptorId" column="StaffLeaveEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffLeaves" cascade="none" lazy="true">
            <key>
              <column name="StaffLeaveEventCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffLeaveAggregate.EdFi.StaffLeaveQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptorQ" table="StateAbbreviationDescriptor" lazy="false">
          <key>
            <column name="StateAbbreviationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Credentials" cascade="none" lazy="true">
            <key>
              <column name="StateOfIssueStateAbbreviationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialQ" />
          </set>

          <set name="EducationOrganizationAddresses" cascade="none" lazy="true">
            <key>
              <column name="StateAbbreviationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressQ" />
          </set>

          <set name="InterventionStudyStateAbbreviations" cascade="none" lazy="true">
            <key>
              <column name="StateAbbreviationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyStateAbbreviationQ" />
          </set>

          <set name="ParentAddresses" cascade="none" lazy="true">
            <key>
              <column name="StateAbbreviationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentAddressQ" />
          </set>

          <set name="StaffAddresses" cascade="none" lazy="true">
            <key>
              <column name="StateAbbreviationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffAddressQ" />
          </set>

          <set name="StaffEducationOrganizationContactAssociationAddresses" cascade="none" lazy="true">
            <key>
              <column name="StateAbbreviationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddressQ" />
          </set>

          <set name="Students" cascade="none" lazy="true">
            <key>
              <column name="BirthStateAbbreviationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationAddresses" cascade="none" lazy="true">
            <key>
              <column name="StateAbbreviationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCharacteristicDescriptorAggregate.EdFi.StudentCharacteristicDescriptorQ" table="StudentCharacteristicDescriptor" lazy="false">
          <key>
            <column name="StudentCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StudentCharacteristicDescriptorId" column="StudentCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentEducationOrganizationAssociationStudentCharacteristics" cascade="none" lazy="true">
            <key>
              <column name="StudentCharacteristicDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristicQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentIdentificationSystemDescriptorAggregate.EdFi.StudentIdentificationSystemDescriptorQ" table="StudentIdentificationSystemDescriptor" lazy="false">
          <key>
            <column name="StudentIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StudentIdentificationSystemDescriptorId" column="StudentIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentEducationOrganizationAssociationStudentIdentificationCodes" cascade="none" lazy="true">
            <key>
              <column name="StudentIdentificationSystemDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIdentificationCodeQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentParticipationCodeDescriptorAggregate.EdFi.StudentParticipationCodeDescriptorQ" table="StudentParticipationCodeDescriptor" lazy="false">
          <key>
            <column name="StudentParticipationCodeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StudentParticipationCodeDescriptorId" column="StudentParticipationCodeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentDisciplineIncidentAssociations" cascade="none" lazy="true">
            <key>
              <column name="StudentParticipationCodeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyCategoryDescriptorAggregate.EdFi.SurveyCategoryDescriptorQ" table="SurveyCategoryDescriptor" lazy="false">
          <key>
            <column name="SurveyCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SurveyCategoryDescriptorId" column="SurveyCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Surveys" cascade="none" lazy="true">
            <key>
              <column name="SurveyCategoryDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyLevelDescriptorAggregate.EdFi.SurveyLevelDescriptorQ" table="SurveyLevelDescriptor" lazy="false">
          <key>
            <column name="SurveyLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SurveyLevelDescriptorId" column="SurveyLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="SurveyResponseSurveyLevels" cascade="none" lazy="true">
            <key>
              <column name="SurveyLevelDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseSurveyLevelQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.TeachingCredentialBasisDescriptorAggregate.EdFi.TeachingCredentialBasisDescriptorQ" table="TeachingCredentialBasisDescriptor" lazy="false">
          <key>
            <column name="TeachingCredentialBasisDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TeachingCredentialBasisDescriptorId" column="TeachingCredentialBasisDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Credentials" cascade="none" lazy="true">
            <key>
              <column name="TeachingCredentialBasisDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.TeachingCredentialDescriptorAggregate.EdFi.TeachingCredentialDescriptorQ" table="TeachingCredentialDescriptor" lazy="false">
          <key>
            <column name="TeachingCredentialDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TeachingCredentialDescriptorId" column="TeachingCredentialDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Credentials" cascade="none" lazy="true">
            <key>
              <column name="TeachingCredentialDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.TechnicalSkillsAssessmentDescriptorAggregate.EdFi.TechnicalSkillsAssessmentDescriptorQ" table="TechnicalSkillsAssessmentDescriptor" lazy="false">
          <key>
            <column name="TechnicalSkillsAssessmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TechnicalSkillsAssessmentDescriptorId" column="TechnicalSkillsAssessmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentCTEProgramAssociations" cascade="none" lazy="true">
            <key>
              <column name="TechnicalSkillsAssessmentDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.TelephoneNumberTypeDescriptorAggregate.EdFi.TelephoneNumberTypeDescriptorQ" table="TelephoneNumberTypeDescriptor" lazy="false">
          <key>
            <column name="TelephoneNumberTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="ParentTelephones" cascade="none" lazy="true">
            <key>
              <column name="TelephoneNumberTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentTelephoneQ" />
          </set>

          <set name="StaffEducationOrganizationContactAssociationTelephones" cascade="none" lazy="true">
            <key>
              <column name="TelephoneNumberTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationTelephoneQ" />
          </set>

          <set name="StaffTelephones" cascade="none" lazy="true">
            <key>
              <column name="TelephoneNumberTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffTelephoneQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationTelephones" cascade="none" lazy="true">
            <key>
              <column name="TelephoneNumberTypeDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTelephoneQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.TermDescriptorAggregate.EdFi.TermDescriptorQ" table="TermDescriptor" lazy="false">
          <key>
            <column name="TermDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TermDescriptorId" column="TermDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Sessions" cascade="none" lazy="true">
            <key>
              <column name="TermDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionQ" />
          </set>

          <set name="StudentAcademicRecords" cascade="none" lazy="true">
            <key>
              <column name="TermDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.TitleIPartAParticipantDescriptorAggregate.EdFi.TitleIPartAParticipantDescriptorQ" table="TitleIPartAParticipantDescriptor" lazy="false">
          <key>
            <column name="TitleIPartAParticipantDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TitleIPartAParticipantDescriptorId" column="TitleIPartAParticipantDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentTitleIPartAProgramAssociations" cascade="none" lazy="true">
            <key>
              <column name="TitleIPartAParticipantDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.TitleIPartAProgramServiceDescriptorAggregate.EdFi.TitleIPartAProgramServiceDescriptorQ" table="TitleIPartAProgramServiceDescriptor" lazy="false">
          <key>
            <column name="TitleIPartAProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TitleIPartAProgramServiceDescriptorId" column="TitleIPartAProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentTitleIPartAProgramAssociationTitleIPartAProgramServices" cascade="none" lazy="true">
            <key>
              <column name="TitleIPartAProgramServiceDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationTitleIPartAProgramServiceQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.TitleIPartASchoolDesignationDescriptorAggregate.EdFi.TitleIPartASchoolDesignationDescriptorQ" table="TitleIPartASchoolDesignationDescriptor" lazy="false">
          <key>
            <column name="TitleIPartASchoolDesignationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TitleIPartASchoolDesignationDescriptorId" column="TitleIPartASchoolDesignationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="Schools" cascade="none" lazy="true">
            <key>
              <column name="TitleIPartASchoolDesignationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.TribalAffiliationDescriptorAggregate.EdFi.TribalAffiliationDescriptorQ" table="TribalAffiliationDescriptor" lazy="false">
          <key>
            <column name="TribalAffiliationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffTribalAffiliations" cascade="none" lazy="true">
            <key>
              <column name="TribalAffiliationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffTribalAffiliationQ" />
          </set>

          <set name="StudentEducationOrganizationAssociationTribalAffiliations" cascade="none" lazy="true">
            <key>
              <column name="TribalAffiliationDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTribalAffiliationQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.VisaDescriptorAggregate.EdFi.VisaDescriptorQ" table="VisaDescriptor" lazy="false">
          <key>
            <column name="VisaDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="VisaDescriptorId" column="VisaDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StaffVisas" cascade="none" lazy="true">
            <key>
              <column name="VisaDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffVisaQ" />
          </set>

          <set name="StudentVisas" cascade="none" lazy="true">
            <key>
              <column name="VisaDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentVisaQ" />
          </set>

      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.WeaponDescriptorAggregate.EdFi.WeaponDescriptorQ" table="WeaponDescriptor" lazy="false">
          <key>
            <column name="WeaponDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="WeaponDescriptorId" column="WeaponDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="DisciplineIncidentWeapons" cascade="none" lazy="true">
            <key>
              <column name="WeaponDescriptorId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentWeaponQ" />
          </set>

      </joined-subclass>
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionQ" table="DisciplineAction" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineActionIdentifier" column="DisciplineActionIdentifier" type="string" length="20" />
      <key-property name="DisciplineDate" column="DisciplineDate" type="date" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="ActualDisciplineActionLength" column="ActualDisciplineActionLength" type="decimal" />
    <property name="AssignmentSchoolId" column="AssignmentSchoolId" type="int" />
    <property name="DisciplineActionLength" column="DisciplineActionLength" type="decimal" />
    <property name="DisciplineActionLengthDifferenceReasonDescriptorId" column="DisciplineActionLengthDifferenceReasonDescriptorId" type="int" />
    <property name="IEPPlacementMeetingIndicator" column="IEPPlacementMeetingIndicator" type="bool" />
    <property name="ReceivedEducationServicesDuringExpulsion" column="ReceivedEducationServicesDuringExpulsion" type="bool" />
    <property name="RelatedToZeroTolerancePolicy" column="RelatedToZeroTolerancePolicy" type="bool" />
    <property name="ResponsibilitySchoolId" column="ResponsibilitySchoolId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssignmentSchool" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssignmentSchoolId" />
    </many-to-one>
    <many-to-one name="DisciplineActionLengthDifferenceReasonDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionLengthDifferenceReasonDescriptorAggregate.EdFi.DisciplineActionLengthDifferenceReasonDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DisciplineActionLengthDifferenceReasonDescriptorId" />
    </many-to-one>
    <many-to-one name="ResponsibilitySchool" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResponsibilitySchoolId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="DisciplineActionDisciplines" cascade="none" lazy="true">
      <key>
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionDisciplineQ" />
    </set>

    <set name="DisciplineActionStaffs" cascade="none" lazy="true">
      <key>
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionStaffQ" />
    </set>

    <set name="DisciplineActionStudentDisciplineIncidentAssociations" cascade="none" lazy="true">
      <key>
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionStudentDisciplineIncidentAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionDisciplineQ" table="DisciplineActionDiscipline" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineDescriptorId" column="DisciplineDescriptorId" type="int" />
      <key-many-to-one name="DisciplineAction">
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DisciplineDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineDescriptorAggregate.EdFi.DisciplineDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DisciplineDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionStaffQ" table="DisciplineActionStaff" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="DisciplineAction">
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionStudentDisciplineIncidentAssociationQ" table="DisciplineActionStudentDisciplineIncidentAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="20" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-many-to-one name="DisciplineAction">
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="StudentDisciplineIncidentAssociation" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentQ" table="DisciplineIncident" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="20" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CaseNumber" column="CaseNumber" type="string" length="20" />
    <property name="IncidentCost" column="IncidentCost" type="decimal" />
    <property name="IncidentDate" column="IncidentDate" type="date" not-null="true" />
    <property name="IncidentDescription" column="IncidentDescription" type="string" length="1024" />
    <property name="IncidentLocationDescriptorId" column="IncidentLocationDescriptorId" type="int" />
    <property name="IncidentTime" column="IncidentTime" type="TimeAsTimeSpan" />
    <property name="ReportedToLawEnforcement" column="ReportedToLawEnforcement" type="bool" />
    <property name="ReporterDescriptionDescriptorId" column="ReporterDescriptionDescriptorId" type="int" />
    <property name="ReporterName" column="ReporterName" type="string" length="75" />
    <property name="StaffUSI" column="StaffUSI" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="IncidentLocationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.IncidentLocationDescriptorAggregate.EdFi.IncidentLocationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IncidentLocationDescriptorId" />
    </many-to-one>
    <many-to-one name="ReporterDescriptionDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ReporterDescriptionDescriptorAggregate.EdFi.ReporterDescriptionDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ReporterDescriptionDescriptorId" />
    </many-to-one>
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="DisciplineIncidentBehaviors" cascade="none" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentBehaviorQ" />
    </set>

    <set name="DisciplineIncidentExternalParticipants" cascade="none" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentExternalParticipantQ" />
    </set>

    <set name="DisciplineIncidentWeapons" cascade="none" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentWeaponQ" />
    </set>

    <set name="StaffDisciplineIncidentAssociations" cascade="none" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationQ" />
    </set>

    <set name="StudentDisciplineIncidentAssociations" cascade="none" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentBehaviorQ" table="DisciplineIncidentBehavior" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int" />
      <key-many-to-one name="DisciplineIncident">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BehaviorDetailedDescription" column="BehaviorDetailedDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="BehaviorDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.BehaviorDescriptorAggregate.EdFi.BehaviorDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BehaviorDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentExternalParticipantQ" table="DisciplineIncidentExternalParticipant" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" />
      <key-property name="FirstName" column="FirstName" type="string" length="75" />
      <key-property name="LastSurname" column="LastSurname" type="string" length="75" />
      <key-many-to-one name="DisciplineIncident">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DisciplineIncidentParticipationCodeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentParticipationCodeDescriptorAggregate.EdFi.DisciplineIncidentParticipationCodeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DisciplineIncidentParticipationCodeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentWeaponQ" table="DisciplineIncidentWeapon" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="WeaponDescriptorId" column="WeaponDescriptorId" type="int" />
      <key-many-to-one name="DisciplineIncident">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="WeaponDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.WeaponDescriptorAggregate.EdFi.WeaponDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="WeaponDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentQ" table="EducationContent" lazy="false" discriminator-value="NULL">
    <id name="ContentIdentifier" column="ContentIdentifier" type="string" length="225">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AdditionalAuthorsIndicator" column="AdditionalAuthorsIndicator" type="bool" />
    <property name="ContentClassDescriptorId" column="ContentClassDescriptorId" type="int" />
    <property name="Cost" column="Cost" type="decimal" />
    <property name="CostRateDescriptorId" column="CostRateDescriptorId" type="int" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="InteractivityStyleDescriptorId" column="InteractivityStyleDescriptorId" type="int" />
    <property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
    <property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Publisher" column="Publisher" type="string" length="50" />
    <property name="ShortDescription" column="ShortDescription" type="string" length="75" />
    <property name="TimeRequired" column="TimeRequired" type="string" length="30" />
    <property name="UseRightsURL" column="UseRightsURL" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="10" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ContentClassDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ContentClassDescriptorAggregate.EdFi.ContentClassDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ContentClassDescriptorId" />
    </many-to-one>
    <many-to-one name="CostRateDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CostRateDescriptorAggregate.EdFi.CostRateDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CostRateDescriptorId" />
    </many-to-one>
    <many-to-one name="InteractivityStyleDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.InteractivityStyleDescriptorAggregate.EdFi.InteractivityStyleDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InteractivityStyleDescriptorId" />
    </many-to-one>
    <many-to-one name="LearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardId" />
    </many-to-one>

    <!-- Collections -->
    <set name="DerivativeSourceEducationContentDerivativeSourceEducationContents" cascade="none" lazy="true">
      <key>
        <column name="DerivativeSourceContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentDerivativeSourceEducationContentQ" />
    </set>

    <set name="EducationContentAppropriateGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentAppropriateGradeLevelQ" />
    </set>

    <set name="EducationContentAppropriateSexes" cascade="none" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentAppropriateSexQ" />
    </set>

    <set name="EducationContentAuthors" cascade="none" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentAuthorQ" />
    </set>

    <set name="EducationContentDerivativeSourceEducationContents" cascade="none" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentDerivativeSourceEducationContentQ" />
    </set>

    <set name="EducationContentDerivativeSourceLearningResourceMetadataURIs" cascade="none" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentDerivativeSourceLearningResourceMetadataURIQ" />
    </set>

    <set name="EducationContentDerivativeSourceURIs" cascade="none" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentDerivativeSourceURIQ" />
    </set>

    <set name="EducationContentLanguages" cascade="none" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentLanguageQ" />
    </set>

    <set name="InterventionEducationContents" cascade="none" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionEducationContentQ" />
    </set>

    <set name="InterventionPrescriptionEducationContents" cascade="none" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionEducationContentQ" />
    </set>

    <set name="InterventionStudyEducationContents" cascade="none" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyEducationContentQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentAppropriateGradeLevelQ" table="EducationContentAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentAppropriateSexQ" table="EducationContentAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SexDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SexDescriptorAggregate.EdFi.SexDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SexDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentAuthorQ" table="EducationContentAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="100" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentDerivativeSourceEducationContentQ" table="EducationContentDerivativeSourceEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DerivativeSourceContentIdentifier" column="DerivativeSourceContentIdentifier" type="string" length="225" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DerivativeSourceEducationContent" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DerivativeSourceContentIdentifier" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentDerivativeSourceLearningResourceMetadataURIQ" table="EducationContentDerivativeSourceLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DerivativeSourceLearningResourceMetadataURI" column="DerivativeSourceLearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentDerivativeSourceURIQ" table="EducationContentDerivativeSourceURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DerivativeSourceURI" column="DerivativeSourceURI" type="string" length="255" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentLanguageQ" table="EducationContentLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LanguageDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageDescriptorAggregate.EdFi.LanguageDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LanguageDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" table="EducationOrganization" lazy="false" abstract="true" discriminator-value="NULL">
    <id name="EducationOrganizationId" column="EducationOrganizationId" type="int">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="NameOfInstitution" column="NameOfInstitution" type="string" length="75" not-null="true" />
    <property name="OperationalStatusDescriptorId" column="OperationalStatusDescriptorId" type="int" />
    <property name="ShortNameOfInstitution" column="ShortNameOfInstitution" type="string" length="75" />
    <property name="WebSite" column="WebSite" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="OperationalStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.OperationalStatusDescriptorAggregate.EdFi.OperationalStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="OperationalStatusDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="AccountabilityRatings" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountabilityRatingAggregate.EdFi.AccountabilityRatingQ" />
    </set>

    <set name="AccountCodes" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountCodeAggregate.EdFi.AccountCodeQ" />
    </set>

    <set name="Accounts" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountAggregate.EdFi.AccountQ" />
    </set>

    <set name="AssessmentContentStandards" cascade="none" lazy="true">
      <key>
        <column name="MandatingEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentContentStandardQ" />
    </set>

    <set name="Assessments" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentQ" />
    </set>

    <set name="Cohorts" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortQ" />
    </set>

    <set name="CompetencyObjectives" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CompetencyObjectiveAggregate.EdFi.CompetencyObjectiveQ" />
    </set>

    <set name="Courses" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" />
    </set>

    <set name="CourseTranscripts" cascade="none" lazy="true">
      <key>
        <column name="ExternalEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptQ" />
    </set>

    <set name="EducationOrganizationAddresses" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressQ" />
    </set>

    <set name="EducationOrganizationCategories" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationCategoryQ" />
    </set>

    <set name="EducationOrganizationIdentificationCodes" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationIdentificationCodeQ" />
    </set>

    <set name="EducationOrganizationIndicators" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorQ" />
    </set>

    <set name="EducationOrganizationInstitutionTelephones" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationInstitutionTelephoneQ" />
    </set>

    <set name="EducationOrganizationInternationalAddresses" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationInternationalAddressQ" />
    </set>

    <set name="EducationOrganizationInterventionPrescriptionAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationInterventionPrescriptionAssociationAggregate.EdFi.EducationOrganizationInterventionPrescriptionAssociationQ" />
    </set>

    <set name="EducationOrganizationNetworkAssociations" cascade="none" lazy="true">
      <key>
        <column name="MemberEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationNetworkAssociationAggregate.EdFi.EducationOrganizationNetworkAssociationQ" />
    </set>

    <set name="EducationOrganizationPeerAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationPeerAssociationAggregate.EdFi.EducationOrganizationPeerAssociationQ" />
    </set>

    <set name="GeneralStudentProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationQ" />
    </set>

    <set name="GraduationPlans" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanQ" />
    </set>

    <set name="InterventionPrescriptions" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionQ" />
    </set>

    <set name="Interventions" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionQ" />
    </set>

    <set name="InterventionStudies" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyQ" />
    </set>

    <set name="LearningObjectiveContentStandards" cascade="none" lazy="true">
      <key>
        <column name="MandatingEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandardQ" />
    </set>

    <set name="LearningStandardContentStandards" cascade="none" lazy="true">
      <key>
        <column name="MandatingEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardContentStandardQ" />
    </set>

    <set name="OpenStaffPositions" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionQ" />
    </set>

    <set name="PeerEducationOrganizationPeerAssociations" cascade="none" lazy="true">
      <key>
        <column name="PeerEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationPeerAssociationAggregate.EdFi.EducationOrganizationPeerAssociationQ" />
    </set>

    <set name="Programs" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" />
    </set>

    <set name="ReportCards" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardQ" />
    </set>

    <set name="StaffEducationOrganizationAssignmentAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationAssignmentAssociationAggregate.EdFi.StaffEducationOrganizationAssignmentAssociationQ" />
    </set>

    <set name="StaffEducationOrganizationContactAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationQ" />
    </set>

    <set name="StaffEducationOrganizationEmploymentAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationQ" />
    </set>

    <set name="StudentAcademicRecords" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordQ" />
    </set>

    <set name="StudentEducationOrganizationAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationQ" />
    </set>

    <set name="StudentEducationOrganizationResponsibilityAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationResponsibilityAssociationAggregate.EdFi.StudentEducationOrganizationResponsibilityAssociationQ" />
    </set>

    <set name="StudentProgramAttendanceEvents" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentProgramAttendanceEventAggregate.EdFi.StudentProgramAttendanceEventQ" />
    </set>

    <set name="SurveyResponseEducationOrganizationTargetAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveyResponseEducationOrganizationTargetAssociationQ" />
    </set>

    <set name="Surveys" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" />
    </set>

    <set name="SurveySectionResponseEducationOrganizationTargetAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveySectionResponseEducationOrganizationTargetAssociationQ" />
    </set>

    <!-- Derived classes -->
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityOrganizationAggregate.EdFi.CommunityOrganizationQ" lazy="false" discriminator-value="edfi.CommunityOrganization" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="CommunityOrganization" >
          <key>
            <column name="CommunityOrganizationId" />
          </key>

          <!-- PK properties -->
          <property name="CommunityOrganizationId" column="CommunityOrganizationId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="CommunityProviders" cascade="none" lazy="true">
            <key>
              <column name="CommunityOrganizationId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityProviderAggregate.EdFi.CommunityProviderQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityProviderAggregate.EdFi.CommunityProviderQ" lazy="false" discriminator-value="edfi.CommunityProvider" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="CommunityProvider" >
          <key>
            <column name="CommunityProviderId" />
          </key>

          <!-- PK properties -->
          <property name="CommunityProviderId" column="CommunityProviderId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="CommunityOrganizationId" column="CommunityOrganizationId" type="int" />
          <property name="LicenseExemptIndicator" column="LicenseExemptIndicator" type="bool" />
          <property name="ProviderCategoryDescriptorId" column="ProviderCategoryDescriptorId" type="int" not-null="true" />
          <property name="ProviderProfitabilityDescriptorId" column="ProviderProfitabilityDescriptorId" type="int" />
          <property name="ProviderStatusDescriptorId" column="ProviderStatusDescriptorId" type="int" not-null="true" />
          <property name="SchoolIndicator" column="SchoolIndicator" type="bool" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="CommunityOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityOrganizationAggregate.EdFi.CommunityOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="CommunityOrganizationId" />
          </many-to-one>
          <many-to-one name="ProviderCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProviderCategoryDescriptorAggregate.EdFi.ProviderCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="ProviderCategoryDescriptorId" />
          </many-to-one>
          <many-to-one name="ProviderProfitabilityDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProviderProfitabilityDescriptorAggregate.EdFi.ProviderProfitabilityDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="ProviderProfitabilityDescriptorId" />
          </many-to-one>
          <many-to-one name="ProviderStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProviderStatusDescriptorAggregate.EdFi.ProviderStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="ProviderStatusDescriptorId" />
          </many-to-one>

          <!-- Collections -->
          <set name="CommunityProviderLicenses" cascade="none" lazy="true">
            <key>
              <column name="CommunityProviderId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CommunityProviderLicenseAggregate.EdFi.CommunityProviderLicenseQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationNetworkAggregate.EdFi.EducationOrganizationNetworkQ" lazy="false" discriminator-value="edfi.EducationOrganizationNetwork" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="EducationOrganizationNetwork" >
          <key>
            <column name="EducationOrganizationNetworkId" />
          </key>

          <!-- PK properties -->
          <property name="EducationOrganizationNetworkId" column="EducationOrganizationNetworkId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="NetworkPurposeDescriptorId" column="NetworkPurposeDescriptorId" type="int" not-null="true" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="NetworkPurposeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.NetworkPurposeDescriptorAggregate.EdFi.NetworkPurposeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="NetworkPurposeDescriptorId" />
          </many-to-one>

          <!-- Collections -->
          <set name="EducationOrganizationNetworkAssociations" cascade="none" lazy="true">
            <key>
              <column name="EducationOrganizationNetworkId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationNetworkAssociationAggregate.EdFi.EducationOrganizationNetworkAssociationQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationServiceCenterAggregate.EdFi.EducationServiceCenterQ" lazy="false" discriminator-value="edfi.EducationServiceCenter" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="EducationServiceCenter" >
          <key>
            <column name="EducationServiceCenterId" />
          </key>

          <!-- PK properties -->
          <property name="EducationServiceCenterId" column="EducationServiceCenterId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="StateEducationAgencyId" column="StateEducationAgencyId" type="int" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="StateEducationAgency" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateEducationAgencyAggregate.EdFi.StateEducationAgencyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="StateEducationAgencyId" />
          </many-to-one>

          <!-- Collections -->
          <set name="LocalEducationAgencies" cascade="none" lazy="true">
            <key>
              <column name="EducationServiceCenterId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyQ" lazy="false" discriminator-value="edfi.LocalEducationAgency" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="LocalEducationAgency" >
          <key>
            <column name="LocalEducationAgencyId" />
          </key>

          <!-- PK properties -->
          <property name="LocalEducationAgencyId" column="LocalEducationAgencyId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="CharterStatusDescriptorId" column="CharterStatusDescriptorId" type="int" />
          <property name="EducationServiceCenterId" column="EducationServiceCenterId" type="int" />
          <property name="LocalEducationAgencyCategoryDescriptorId" column="LocalEducationAgencyCategoryDescriptorId" type="int" not-null="true" />
          <property name="ParentLocalEducationAgencyId" column="ParentLocalEducationAgencyId" type="int" />
          <property name="StateEducationAgencyId" column="StateEducationAgencyId" type="int" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="CharterStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CharterStatusDescriptorAggregate.EdFi.CharterStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="CharterStatusDescriptorId" />
          </many-to-one>
          <many-to-one name="EducationServiceCenter" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationServiceCenterAggregate.EdFi.EducationServiceCenterQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="EducationServiceCenterId" />
          </many-to-one>
          <many-to-one name="LocalEducationAgencyCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyCategoryDescriptorAggregate.EdFi.LocalEducationAgencyCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="LocalEducationAgencyCategoryDescriptorId" />
          </many-to-one>
          <many-to-one name="ParentLocalEducationAgency" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="ParentLocalEducationAgencyId" />
          </many-to-one>
          <many-to-one name="StateEducationAgency" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateEducationAgencyAggregate.EdFi.StateEducationAgencyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="StateEducationAgencyId" />
          </many-to-one>

          <!-- Collections -->
          <set name="LocalEducationAgencyAccountabilities" cascade="none" lazy="true">
            <key>
              <column name="LocalEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyAccountabilityQ" />
          </set>

          <set name="LocalEducationAgencyFederalFunds" cascade="none" lazy="true">
            <key>
              <column name="LocalEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyFederalFundsQ" />
          </set>

          <set name="Schools" cascade="none" lazy="true">
            <key>
              <column name="LocalEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyQH" lazy="false" discriminator-value="edfi.LocalEducationAgencyH" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="LocalEducationAgencyH" >
          <key>
            <column name="LocalEducationAgencyId" />
          </key>

          <!-- PK properties -->
          <property name="LocalEducationAgencyId" column="LocalEducationAgencyId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="CharterStatusDescriptorId" column="CharterStatusDescriptorId" type="int" />
          <property name="EducationServiceCenterId" column="EducationServiceCenterId" type="int" />
          <property name="LocalEducationAgencyCategoryDescriptorId" column="LocalEducationAgencyCategoryDescriptorId" type="int" />
          <property name="ParentLocalEducationAgencyId" column="ParentLocalEducationAgencyId" type="int" />
          <property name="StateEducationAgencyId" column="StateEducationAgencyId" type="int" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="CharterStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CharterStatusDescriptorAggregate.EdFi.CharterStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="CharterStatusDescriptorId" />
          </many-to-one>
          <many-to-one name="EducationServiceCenter" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationServiceCenterAggregate.EdFi.EducationServiceCenterQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="EducationServiceCenterId" />
          </many-to-one>
          <many-to-one name="LocalEducationAgencyCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyCategoryDescriptorAggregate.EdFi.LocalEducationAgencyCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="LocalEducationAgencyCategoryDescriptorId" />
          </many-to-one>
          <many-to-one name="ParentLocalEducationAgency" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="ParentLocalEducationAgencyId" />
          </many-to-one>
          <many-to-one name="StateEducationAgency" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateEducationAgencyAggregate.EdFi.StateEducationAgencyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="StateEducationAgencyId" />
          </many-to-one>

          <!-- Collections -->
          <set name="LocalEducationAgencyAccountabilities" cascade="none" lazy="true">
            <key>
              <column name="LocalEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyAccountabilityQ" />
          </set>

          <set name="LocalEducationAgencyFederalFunds" cascade="none" lazy="true">
            <key>
              <column name="LocalEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyFederalFundsQ" />
          </set>

          <set name="Schools" cascade="none" lazy="true">
            <key>
              <column name="LocalEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionQ" lazy="false" discriminator-value="edfi.PostSecondaryInstitution" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="PostSecondaryInstitution" >
          <key>
            <column name="PostSecondaryInstitutionId" />
          </key>

          <!-- PK properties -->
          <property name="PostSecondaryInstitutionId" column="PostSecondaryInstitutionId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AdministrativeFundingControlDescriptorId" column="AdministrativeFundingControlDescriptorId" type="int" />
          <property name="PostSecondaryInstitutionLevelDescriptorId" column="PostSecondaryInstitutionLevelDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="AdministrativeFundingControlDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AdministrativeFundingControlDescriptorAggregate.EdFi.AdministrativeFundingControlDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="AdministrativeFundingControlDescriptorId" />
          </many-to-one>
          <many-to-one name="PostSecondaryInstitutionLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryInstitutionLevelDescriptorAggregate.EdFi.PostSecondaryInstitutionLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="PostSecondaryInstitutionLevelDescriptorId" />
          </many-to-one>

          <!-- Collections -->
          <set name="PostSecondaryInstitutionMediumOfInstructions" cascade="none" lazy="true">
            <key>
              <column name="PostSecondaryInstitutionId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionMediumOfInstructionQ" />
          </set>

          <set name="PostSecondaryEvents" cascade="none" lazy="true">
            <key>
              <column name="PostSecondaryInstitutionId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryEventAggregate.EdFi.PostSecondaryEventQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" lazy="false" discriminator-value="edfi.School" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="School" >
          <key>
            <column name="SchoolId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolId" column="SchoolId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AdministrativeFundingControlDescriptorId" column="AdministrativeFundingControlDescriptorId" type="int" />
          <property name="CharterApprovalAgencyTypeDescriptorId" column="CharterApprovalAgencyTypeDescriptorId" type="int" />
          <property name="CharterApprovalSchoolYear" column="CharterApprovalSchoolYear" type="short" />
          <property name="CharterStatusDescriptorId" column="CharterStatusDescriptorId" type="int" />
          <property name="InternetAccessDescriptorId" column="InternetAccessDescriptorId" type="int" />
          <property name="LocalEducationAgencyId" column="LocalEducationAgencyId" type="int" />
          <property name="MagnetSpecialProgramEmphasisSchoolDescriptorId" column="MagnetSpecialProgramEmphasisSchoolDescriptorId" type="int" />
          <property name="SchoolTypeDescriptorId" column="SchoolTypeDescriptorId" type="int" />
          <property name="TitleIPartASchoolDesignationDescriptorId" column="TitleIPartASchoolDesignationDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="AdministrativeFundingControlDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AdministrativeFundingControlDescriptorAggregate.EdFi.AdministrativeFundingControlDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="AdministrativeFundingControlDescriptorId" />
          </many-to-one>
          <many-to-one name="CharterApprovalAgencyTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CharterApprovalAgencyTypeDescriptorAggregate.EdFi.CharterApprovalAgencyTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="CharterApprovalAgencyTypeDescriptorId" />
          </many-to-one>
          <many-to-one name="CharterApprovalSchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="CharterApprovalSchoolYear" />
          </many-to-one>
          <many-to-one name="CharterStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CharterStatusDescriptorAggregate.EdFi.CharterStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="CharterStatusDescriptorId" />
          </many-to-one>
          <many-to-one name="InternetAccessDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.InternetAccessDescriptorAggregate.EdFi.InternetAccessDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="InternetAccessDescriptorId" />
          </many-to-one>
          <many-to-one name="LocalEducationAgency" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="LocalEducationAgencyId" />
          </many-to-one>
          <many-to-one name="MagnetSpecialProgramEmphasisSchoolDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.MagnetSpecialProgramEmphasisSchoolDescriptorAggregate.EdFi.MagnetSpecialProgramEmphasisSchoolDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="MagnetSpecialProgramEmphasisSchoolDescriptorId" />
          </many-to-one>
          <many-to-one name="SchoolTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolTypeDescriptorAggregate.EdFi.SchoolTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="SchoolTypeDescriptorId" />
          </many-to-one>
          <many-to-one name="TitleIPartASchoolDesignationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TitleIPartASchoolDesignationDescriptorAggregate.EdFi.TitleIPartASchoolDesignationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="TitleIPartASchoolDesignationDescriptorId" />
          </many-to-one>

          <!-- Collections -->
          <set name="SchoolCategories" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolCategoryQ" />
          </set>

          <set name="SchoolGradeLevels" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolGradeLevelQ" />
          </set>

          <set name="AcademicWeeks" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicWeekAggregate.EdFi.AcademicWeekQ" />
          </set>

          <set name="BellSchedules" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.BellScheduleAggregate.EdFi.BellScheduleQ" />
          </set>

          <set name="Calendars" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarAggregate.EdFi.CalendarQ" />
          </set>

          <set name="ClassPeriods" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ClassPeriodAggregate.EdFi.ClassPeriodQ" />
          </set>

          <set name="CourseOfferings" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingQ" />
          </set>

          <set name="ResponsibilityDisciplineActions" cascade="none" lazy="true">
            <key>
              <column name="ResponsibilitySchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionQ" />
          </set>

          <set name="AssignmentDisciplineActions" cascade="none" lazy="true">
            <key>
              <column name="AssignmentSchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionQ" />
          </set>

          <set name="DisciplineIncidents" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentQ" />
          </set>

          <set name="FeederFeederSchoolAssociations" cascade="none" lazy="true">
            <key>
              <column name="FeederSchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.FeederSchoolAssociationAggregate.EdFi.FeederSchoolAssociationQ" />
          </set>

          <set name="FeederSchoolAssociations" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.FeederSchoolAssociationAggregate.EdFi.FeederSchoolAssociationQ" />
          </set>

          <set name="GradingPeriods" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodAggregate.EdFi.GradingPeriodQ" />
          </set>

          <set name="Locations" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocationAggregate.EdFi.LocationQ" />
          </set>

          <set name="RestraintEvents" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventAggregate.EdFi.RestraintEventQ" />
          </set>

          <set name="Sections" cascade="none" lazy="true">
            <key>
              <column name="LocationSchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" />
          </set>

          <set name="Sessions" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionQ" />
          </set>

          <set name="StaffSchoolAssociations" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationQ" />
          </set>

          <set name="StudentSchoolAssociations" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
          </set>

          <set name="StudentSchoolAttendanceEvents" cascade="none" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAttendanceEventAggregate.EdFi.StudentSchoolAttendanceEventQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StateEducationAgencyAggregate.EdFi.StateEducationAgencyQ" lazy="false" discriminator-value="edfi.StateEducationAgency" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StateEducationAgency" >
          <key>
            <column name="StateEducationAgencyId" />
          </key>

          <!-- PK properties -->
          <property name="StateEducationAgencyId" column="StateEducationAgencyId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StateEducationAgencyAccountabilities" cascade="none" lazy="true">
            <key>
              <column name="StateEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StateEducationAgencyAggregate.EdFi.StateEducationAgencyAccountabilityQ" />
          </set>

          <set name="StateEducationAgencyFederalFunds" cascade="none" lazy="true">
            <key>
              <column name="StateEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StateEducationAgencyAggregate.EdFi.StateEducationAgencyFederalFundsQ" />
          </set>

          <set name="EducationServiceCenters" cascade="none" lazy="true">
            <key>
              <column name="StateEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationServiceCenterAggregate.EdFi.EducationServiceCenterQ" />
          </set>

          <set name="LocalEducationAgencies" cascade="none" lazy="true">
            <key>
              <column name="StateEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyQ" />
          </set>

      </join>
    </subclass>
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressQ" table="EducationOrganizationAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AddressTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AddressTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="LocaleDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocaleDescriptorAggregate.EdFi.LocaleDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocaleDescriptorId" />
    </many-to-one>
    <many-to-one name="StateAbbreviationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StateAbbreviationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="EducationOrganizationAddressPeriods" cascade="none" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressPeriodQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressPeriodQ" table="EducationOrganizationAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="EducationOrganizationAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationCategoryQ" table="EducationOrganizationCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationCategoryDescriptorId" column="EducationOrganizationCategoryDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganizationCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationCategoryDescriptorAggregate.EdFi.EducationOrganizationCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationCategoryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationIdentificationCodeQ" table="EducationOrganizationIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationIdentificationSystemDescriptorId" column="EducationOrganizationIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganizationIdentificationSystemDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationIdentificationSystemDescriptorAggregate.EdFi.EducationOrganizationIdentificationSystemDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationIdentificationSystemDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorQ" table="EducationOrganizationIndicator" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IndicatorDescriptorId" column="IndicatorDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="IndicatorGroupDescriptorId" column="IndicatorGroupDescriptorId" type="int" />
    <property name="IndicatorLevelDescriptorId" column="IndicatorLevelDescriptorId" type="int" />
    <property name="IndicatorValue" column="IndicatorValue" type="string" length="35" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="IndicatorDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.IndicatorDescriptorAggregate.EdFi.IndicatorDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IndicatorDescriptorId" />
    </many-to-one>
    <many-to-one name="IndicatorGroupDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.IndicatorGroupDescriptorAggregate.EdFi.IndicatorGroupDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IndicatorGroupDescriptorId" />
    </many-to-one>
    <many-to-one name="IndicatorLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.IndicatorLevelDescriptorAggregate.EdFi.IndicatorLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IndicatorLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="EducationOrganizationIndicatorPeriods" cascade="none" lazy="true">
      <key>
        <column name="IndicatorDescriptorId" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorPeriodQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorPeriodQ" table="EducationOrganizationIndicatorPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="EducationOrganizationIndicator">
        <column name="IndicatorDescriptorId" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationInstitutionTelephoneQ" table="EducationOrganizationInstitutionTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="InstitutionTelephoneNumberTypeDescriptorId" column="InstitutionTelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="InstitutionTelephoneNumberTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.InstitutionTelephoneNumberTypeDescriptorAggregate.EdFi.InstitutionTelephoneNumberTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InstitutionTelephoneNumberTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationInternationalAddressQ" table="EducationOrganizationInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AddressTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AddressTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="CountryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CountryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationInterventionPrescriptionAssociationAggregate.EdFi.EducationOrganizationInterventionPrescriptionAssociationQ" table="EducationOrganizationInterventionPrescriptionAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="int" />
      <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="InterventionPrescription" class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InterventionPrescriptionEducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationNetworkAssociationAggregate.EdFi.EducationOrganizationNetworkAssociationQ" table="EducationOrganizationNetworkAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationNetworkId" column="EducationOrganizationNetworkId" type="int" />
      <key-property name="MemberEducationOrganizationId" column="MemberEducationOrganizationId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganizationNetwork" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationNetworkAggregate.EdFi.EducationOrganizationNetworkQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationNetworkId" />
    </many-to-one>
    <many-to-one name="MemberEducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MemberEducationOrganizationId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationPeerAssociationAggregate.EdFi.EducationOrganizationPeerAssociationQ" table="EducationOrganizationPeerAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="PeerEducationOrganizationId" column="PeerEducationOrganizationId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="PeerEducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PeerEducationOrganizationId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.FeederSchoolAssociationAggregate.EdFi.FeederSchoolAssociationQ" table="FeederSchoolAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="FeederSchoolId" column="FeederSchoolId" type="int" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="FeederRelationshipDescription" column="FeederRelationshipDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="FeederSchool" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="FeederSchoolId" />
    </many-to-one>
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationQ" table="GeneralStudentProgramAssociation" lazy="false" abstract="true" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="ReasonExitedDescriptorId" column="ReasonExitedDescriptorId" type="int" />
    <property name="ServedOutsideOfRegularSession" column="ServedOutsideOfRegularSession" type="bool" />

    <!-- One-to-one child mappings -->
    <one-to-one name="GeneralStudentProgramAssociationParticipationStatus" class="EdFi.Ods.Entities.NHibernate.QueryModels.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationParticipationStatusQ" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="Program" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="ReasonExitedDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ReasonExitedDescriptorAggregate.EdFi.ReasonExitedDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ReasonExitedDescriptorId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentCompetencyObjectiveGeneralStudentProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveGeneralStudentProgramAssociationQ" />
    </set>

    <set name="StudentLearningObjectiveGeneralStudentProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveGeneralStudentProgramAssociationQ" />
    </set>

    <!-- Derived classes -->
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationQ" lazy="false" discriminator-value="edfi.StudentCTEProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentCTEProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="NonTraditionalGenderStatus" column="NonTraditionalGenderStatus" type="bool" />
          <property name="PrivateCTEProgram" column="PrivateCTEProgram" type="bool" />
          <property name="TechnicalSkillsAssessmentDescriptorId" column="TechnicalSkillsAssessmentDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="TechnicalSkillsAssessmentDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TechnicalSkillsAssessmentDescriptorAggregate.EdFi.TechnicalSkillsAssessmentDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="TechnicalSkillsAssessmentDescriptorId" />
          </many-to-one>

          <!-- Collections -->
          <set name="StudentCTEProgramAssociationCTEPrograms" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgramQ" />
          </set>

          <set name="StudentCTEProgramAssociationCTEProgramServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgramServiceQ" />
          </set>

          <set name="StudentCTEProgramAssociationServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationServiceQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociationQ" lazy="false" discriminator-value="edfi.StudentHomelessProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentHomelessProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AwaitingFosterCare" column="AwaitingFosterCare" type="bool" />
          <property name="HomelessPrimaryNighttimeResidenceDescriptorId" column="HomelessPrimaryNighttimeResidenceDescriptorId" type="int" />
          <property name="HomelessUnaccompaniedYouth" column="HomelessUnaccompaniedYouth" type="bool" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="HomelessPrimaryNighttimeResidenceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.HomelessPrimaryNighttimeResidenceDescriptorAggregate.EdFi.HomelessPrimaryNighttimeResidenceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="HomelessPrimaryNighttimeResidenceDescriptorId" />
          </many-to-one>

          <!-- Collections -->
          <set name="StudentHomelessProgramAssociationHomelessProgramServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociationHomelessProgramServiceQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationQ" lazy="false" discriminator-value="edfi.StudentLanguageInstructionProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentLanguageInstructionProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="Dosage" column="Dosage" type="int" />
          <property name="EnglishLearnerParticipation" column="EnglishLearnerParticipation" type="bool" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessments" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessmentQ" />
          </set>

          <set name="StudentLanguageInstructionProgramAssociationLanguageInstructionProgramServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramServiceQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociationQ" lazy="false" discriminator-value="edfi.StudentMigrantEducationProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentMigrantEducationProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="ContinuationOfServicesReasonDescriptorId" column="ContinuationOfServicesReasonDescriptorId" type="int" />
          <property name="EligibilityExpirationDate" column="EligibilityExpirationDate" type="date" />
          <property name="LastQualifyingMove" column="LastQualifyingMove" type="date" not-null="true" />
          <property name="PriorityForServices" column="PriorityForServices" type="bool" not-null="true" />
          <property name="QualifyingArrivalDate" column="QualifyingArrivalDate" type="date" />
          <property name="StateResidencyDate" column="StateResidencyDate" type="date" />
          <property name="USInitialEntry" column="USInitialEntry" type="date" />
          <property name="USInitialSchoolEntry" column="USInitialSchoolEntry" type="date" />
          <property name="USMostRecentEntry" column="USMostRecentEntry" type="date" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="ContinuationOfServicesReasonDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ContinuationOfServicesReasonDescriptorAggregate.EdFi.ContinuationOfServicesReasonDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="ContinuationOfServicesReasonDescriptorId" />
          </many-to-one>

          <!-- Collections -->
          <set name="StudentMigrantEducationProgramAssociationMigrantEducationProgramServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociationMigrantEducationProgramServiceQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationQ" lazy="false" discriminator-value="edfi.StudentNeglectedOrDelinquentProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentNeglectedOrDelinquentProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="ELAProgressLevelDescriptorId" column="ELAProgressLevelDescriptorId" type="int" />
          <property name="MathematicsProgressLevelDescriptorId" column="MathematicsProgressLevelDescriptorId" type="int" />
          <property name="NeglectedOrDelinquentProgramDescriptorId" column="NeglectedOrDelinquentProgramDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="ELAProgressLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgressLevelDescriptorAggregate.EdFi.ProgressLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="ELAProgressLevelDescriptorId" />
          </many-to-one>
          <many-to-one name="MathematicsProgressLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgressLevelDescriptorAggregate.EdFi.ProgressLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="MathematicsProgressLevelDescriptorId" />
          </many-to-one>
          <many-to-one name="NeglectedOrDelinquentProgramDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.NeglectedOrDelinquentProgramDescriptorAggregate.EdFi.NeglectedOrDelinquentProgramDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="NeglectedOrDelinquentProgramDescriptorId" />
          </many-to-one>

          <!-- Collections -->
          <set name="StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramServiceQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentProgramAssociationAggregate.EdFi.StudentProgramAssociationQ" lazy="false" discriminator-value="edfi.StudentProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentProgramAssociationServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentProgramAssociationAggregate.EdFi.StudentProgramAssociationServiceQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolFoodServiceProgramAssociationAggregate.EdFi.StudentSchoolFoodServiceProgramAssociationQ" lazy="false" discriminator-value="edfi.StudentSchoolFoodServiceProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentSchoolFoodServiceProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="DirectCertification" column="DirectCertification" type="bool" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolFoodServiceProgramAssociationAggregate.EdFi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramServiceQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationQ" lazy="false" discriminator-value="edfi.StudentSpecialEducationProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentSpecialEducationProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="IdeaEligibility" column="IdeaEligibility" type="bool" />
          <property name="IEPBeginDate" column="IEPBeginDate" type="date" />
          <property name="IEPEndDate" column="IEPEndDate" type="date" />
          <property name="IEPReviewDate" column="IEPReviewDate" type="date" />
          <property name="LastEvaluationDate" column="LastEvaluationDate" type="date" />
          <property name="MedicallyFragile" column="MedicallyFragile" type="bool" />
          <property name="MultiplyDisabled" column="MultiplyDisabled" type="bool" />
          <property name="SchoolHoursPerWeek" column="SchoolHoursPerWeek" type="decimal" />
          <property name="SpecialEducationHoursPerWeek" column="SpecialEducationHoursPerWeek" type="decimal" />
          <property name="SpecialEducationSettingDescriptorId" column="SpecialEducationSettingDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="SpecialEducationSettingDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SpecialEducationSettingDescriptorAggregate.EdFi.SpecialEducationSettingDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="SpecialEducationSettingDescriptorId" />
          </many-to-one>

          <!-- Collections -->
          <set name="StudentSpecialEducationProgramAssociationDisabilities" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityQ" />
          </set>

          <set name="StudentSpecialEducationProgramAssociationServiceProviders" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationServiceProviderQ" />
          </set>

          <set name="StudentSpecialEducationProgramAssociationSpecialEducationProgramServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceQ" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationQ" lazy="false" discriminator-value="edfi.StudentTitleIPartAProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentTitleIPartAProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="TitleIPartAParticipantDescriptorId" column="TitleIPartAParticipantDescriptorId" type="int" not-null="true" />

          <!-- Aggregate references -->

          <!-- Back references -->
          <many-to-one name="TitleIPartAParticipantDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TitleIPartAParticipantDescriptorAggregate.EdFi.TitleIPartAParticipantDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
            <column name="TitleIPartAParticipantDescriptorId" />
          </many-to-one>

          <!-- Collections -->
          <set name="StudentTitleIPartAProgramAssociationServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationServiceQ" />
          </set>

          <set name="StudentTitleIPartAProgramAssociationTitleIPartAProgramServices" cascade="none" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationTitleIPartAProgramServiceQ" />
          </set>

      </join>
    </subclass>
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationParticipationStatusQ" table="GeneralStudentProgramAssociationParticipationStatus" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="GeneralStudentProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="ParticipationStatusDescriptorId" column="ParticipationStatusDescriptorId" type="int" not-null="true" />
    <property name="StatusBeginDate" column="StatusBeginDate" type="date" />
    <property name="StatusEndDate" column="StatusEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ParticipationStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ParticipationStatusDescriptorAggregate.EdFi.ParticipationStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ParticipationStatusDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeQ" table="Grade" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int" />
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="LetterGradeEarned" column="LetterGradeEarned" type="string" length="20" />
    <property name="NumericGradeEarned" column="NumericGradeEarned" type="decimal" />
    <property name="PerformanceBaseConversionDescriptorId" column="PerformanceBaseConversionDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeTypeDescriptorAggregate.EdFi.GradeTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="GradingPeriod" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodAggregate.EdFi.GradingPeriodQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSequence" />
        <column name="SchoolId" />
        <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="PerformanceBaseConversionDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PerformanceBaseConversionDescriptorAggregate.EdFi.PerformanceBaseConversionDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PerformanceBaseConversionDescriptorId" />
    </many-to-one>
    <many-to-one name="StudentSectionAssociation" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BeginDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="GradeLearningStandardGrades" cascade="none" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="GradeTypeDescriptorId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeLearningStandardGradeQ" />
    </set>

    <set name="ReportCardGrades" cascade="none" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="GradeTypeDescriptorId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardGradeQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeLearningStandardGradeQ" table="GradeLearningStandardGrade" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="Grade">
        <column name="BeginDate" />
        <column name="GradeTypeDescriptorId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="LetterGradeEarned" column="LetterGradeEarned" type="string" length="20" />
    <property name="NumericGradeEarned" column="NumericGradeEarned" type="decimal" />
    <property name="PerformanceBaseConversionDescriptorId" column="PerformanceBaseConversionDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardId" />
    </many-to-one>
    <many-to-one name="PerformanceBaseConversionDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PerformanceBaseConversionDescriptorAggregate.EdFi.PerformanceBaseConversionDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PerformanceBaseConversionDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryQ" table="GradebookEntry" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DateAssigned" column="DateAssigned" type="date" />
      <key-property name="GradebookEntryTitle" column="GradebookEntryTitle" type="string" length="60" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="DueDate" column="DueDate" type="date" />
    <property name="GradebookEntryTypeDescriptorId" column="GradebookEntryTypeDescriptorId" type="int" />
    <property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
    <property name="PeriodSequence" column="PeriodSequence" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradebookEntryTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryTypeDescriptorAggregate.EdFi.GradebookEntryTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradebookEntryTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="GradingPeriod" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodAggregate.EdFi.GradingPeriodQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradingPeriodDescriptorId" />
        <column name="PeriodSequence" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="Section" class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
    </many-to-one>

    <!-- Collections -->
    <set name="GradebookEntryLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="DateAssigned" />
        <column name="GradebookEntryTitle" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryLearningObjectiveQ" />
    </set>

    <set name="GradebookEntryLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="DateAssigned" />
        <column name="GradebookEntryTitle" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryLearningStandardQ" />
    </set>

    <set name="StudentGradebookEntries" cascade="none" lazy="true">
      <key>
        <column name="DateAssigned" />
        <column name="GradebookEntryTitle" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentGradebookEntryAggregate.EdFi.StudentGradebookEntryQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryLearningObjectiveQ" table="GradebookEntryLearningObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="GradebookEntry">
        <column name="DateAssigned" />
        <column name="GradebookEntryTitle" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningObjective" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryLearningStandardQ" table="GradebookEntryLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="GradebookEntry">
        <column name="DateAssigned" />
        <column name="GradebookEntryTitle" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodAggregate.EdFi.GradingPeriodQ" table="GradingPeriod" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="PeriodSequence" column="PeriodSequence" type="int" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" not-null="true" />
    <property name="TotalInstructionalDays" column="TotalInstructionalDays" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradingPeriodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodDescriptorAggregate.EdFi.GradingPeriodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradingPeriodDescriptorId" />
    </many-to-one>
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>

    <!-- Collections -->
    <set name="GradebookEntries" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="PeriodSequence" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryQ" />
    </set>

    <set name="Grades" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSequence" />
        <column name="SchoolId" />
        <column name="GradingPeriodSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeQ" />
    </set>

    <set name="ReportCards" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSequence" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardQ" />
    </set>

    <set name="SessionGradingPeriods" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="PeriodSequence" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionGradingPeriodQ" />
    </set>

    <set name="StudentCompetencyObjectives" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSequence" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveQ" />
    </set>

    <set name="StudentLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSequence" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanQ" table="GraduationPlan" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int" />
      <key-property name="GraduationSchoolYear" column="GraduationSchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="IndividualPlan" column="IndividualPlan" type="bool" />
    <property name="TotalRequiredCreditConversion" column="TotalRequiredCreditConversion" type="decimal" />
    <property name="TotalRequiredCredits" column="TotalRequiredCredits" type="decimal" not-null="true" />
    <property name="TotalRequiredCreditTypeDescriptorId" column="TotalRequiredCreditTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="GraduationPlanTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanTypeDescriptorAggregate.EdFi.GraduationPlanTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GraduationPlanTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="GraduationSchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GraduationSchoolYear" />
    </many-to-one>
    <many-to-one name="TotalRequiredCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TotalRequiredCreditTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="GraduationPlanCreditsByCourses" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseQ" />
    </set>

    <set name="GraduationPlanCreditsByCreditCategories" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCreditCategoryQ" />
    </set>

    <set name="GraduationPlanCreditsBySubjects" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsBySubjectQ" />
    </set>

    <set name="GraduationPlanRequiredAssessments" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentQ" />
    </set>

    <set name="StudentSchoolAssociationAlternativeGraduationPlans" cascade="none" lazy="true">
      <key>
        <column name="AlternativeEducationOrganizationId" />
        <column name="AlternativeGraduationPlanTypeDescriptorId" />
        <column name="AlternativeGraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationAlternativeGraduationPlanQ" />
    </set>

    <set name="StudentSchoolAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseQ" table="GraduationPlanCreditsByCourse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseSetName" column="CourseSetName" type="string" length="120" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CreditConversion" column="CreditConversion" type="decimal" />
    <property name="Credits" column="Credits" type="decimal" not-null="true" />
    <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" />
    <property name="WhenTakenGradeLevelDescriptorId" column="WhenTakenGradeLevelDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CreditTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="WhenTakenGradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="WhenTakenGradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="GraduationPlanCreditsByCourseCourses" cascade="none" lazy="true">
      <key>
        <column name="CourseSetName" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseCourseQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseCourseQ" table="GraduationPlanCreditsByCourseCourse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseCode" column="CourseCode" type="string" length="60" />
      <key-property name="CourseEducationOrganizationId" column="CourseEducationOrganizationId" type="int" />
      <key-many-to-one name="GraduationPlanCreditsByCourse">
        <column name="CourseSetName" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Course" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCreditCategoryQ" table="GraduationPlanCreditsByCreditCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CreditCategoryDescriptorId" column="CreditCategoryDescriptorId" type="int" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CreditConversion" column="CreditConversion" type="decimal" />
    <property name="Credits" column="Credits" type="decimal" not-null="true" />
    <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CreditCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditCategoryDescriptorAggregate.EdFi.CreditCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CreditCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="CreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CreditTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanCreditsBySubjectQ" table="GraduationPlanCreditsBySubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CreditConversion" column="CreditConversion" type="decimal" />
    <property name="Credits" column="Credits" type="decimal" not-null="true" />
    <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>
    <many-to-one name="CreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CreditTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentQ" table="GraduationPlanRequiredAssessment" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- One-to-one child mappings -->
    <one-to-one name="GraduationPlanRequiredAssessmentPerformanceLevel" class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentPerformanceLevelQ" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Assessment" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
    </many-to-one>

    <!-- Collections -->
    <set name="GraduationPlanRequiredAssessmentScores" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentScoreQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentPerformanceLevelQ" table="GraduationPlanRequiredAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="GraduationPlanRequiredAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" not-null="true" />
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" not-null="true" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentReportingMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentReportingMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="PerformanceLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PerformanceLevelDescriptorAggregate.EdFi.PerformanceLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PerformanceLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="ResultDatatypeTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResultDatatypeTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentScoreQ" table="GraduationPlanRequiredAssessmentScore" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="GraduationPlanRequiredAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentReportingMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentReportingMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="ResultDatatypeTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResultDatatypeTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionQ" table="Intervention" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" />
    <property name="MaxDosage" column="MaxDosage" type="int" />
    <property name="MinDosage" column="MinDosage" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DeliveryMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DeliveryMethodDescriptorAggregate.EdFi.DeliveryMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DeliveryMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="InterventionClassDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionClassDescriptorAggregate.EdFi.InterventionClassDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InterventionClassDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="InterventionAppropriateGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionAppropriateGradeLevelQ" />
    </set>

    <set name="InterventionAppropriateSexes" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionAppropriateSexQ" />
    </set>

    <set name="InterventionDiagnoses" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionDiagnosisQ" />
    </set>

    <set name="InterventionEducationContents" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionEducationContentQ" />
    </set>

    <set name="InterventionInterventionPrescriptions" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionInterventionPrescriptionQ" />
    </set>

    <set name="InterventionLearningResourceMetadataURIs" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionLearningResourceMetadataURIQ" />
    </set>

    <set name="InterventionMeetingTimes" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionMeetingTimeQ" />
    </set>

    <set name="InterventionPopulationServeds" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionPopulationServedQ" />
    </set>

    <set name="InterventionStaffs" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionStaffQ" />
    </set>

    <set name="InterventionURIs" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionURIQ" />
    </set>

    <set name="StudentInterventionAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationQ" />
    </set>

    <set name="StudentInterventionAttendanceEvents" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAttendanceEventAggregate.EdFi.StudentInterventionAttendanceEventQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionAppropriateGradeLevelQ" table="InterventionAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionAppropriateSexQ" table="InterventionAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SexDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SexDescriptorAggregate.EdFi.SexDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SexDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionDiagnosisQ" table="InterventionDiagnosis" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DiagnosisDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DiagnosisDescriptorAggregate.EdFi.DiagnosisDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DiagnosisDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionEducationContentQ" table="InterventionEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentIdentifier" column="ContentIdentifier" type="string" length="225" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationContent" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ContentIdentifier" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionInterventionPrescriptionQ" table="InterventionInterventionPrescription" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="int" />
      <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="60" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="InterventionPrescription" class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InterventionPrescriptionEducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionLearningResourceMetadataURIQ" table="InterventionLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionMeetingTimeQ" table="InterventionMeetingTime" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EndTime" column="EndTime" type="TimeAsTimeSpan" />
      <key-property name="StartTime" column="StartTime" type="TimeAsTimeSpan" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionPopulationServedQ" table="InterventionPopulationServed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="PopulationServedDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PopulationServedDescriptorAggregate.EdFi.PopulationServedDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PopulationServedDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionStaffQ" table="InterventionStaff" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionURIQ" table="InterventionURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="URI" column="URI" type="string" length="255" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionQ" table="InterventionPrescription" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" />
    <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" />
    <property name="MaxDosage" column="MaxDosage" type="int" />
    <property name="MinDosage" column="MinDosage" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DeliveryMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DeliveryMethodDescriptorAggregate.EdFi.DeliveryMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DeliveryMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="InterventionClassDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionClassDescriptorAggregate.EdFi.InterventionClassDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InterventionClassDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="EducationOrganizationInterventionPrescriptionAssociations" cascade="none" lazy="true">
      <key>
        <column name="InterventionPrescriptionEducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationInterventionPrescriptionAssociationAggregate.EdFi.EducationOrganizationInterventionPrescriptionAssociationQ" />
    </set>

    <set name="InterventionInterventionPrescriptions" cascade="none" lazy="true">
      <key>
        <column name="InterventionPrescriptionEducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionInterventionPrescriptionQ" />
    </set>

    <set name="InterventionPrescriptionAppropriateGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateGradeLevelQ" />
    </set>

    <set name="InterventionPrescriptionAppropriateSexes" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateSexQ" />
    </set>

    <set name="InterventionPrescriptionDiagnoses" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionDiagnosisQ" />
    </set>

    <set name="InterventionPrescriptionEducationContents" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionEducationContentQ" />
    </set>

    <set name="InterventionPrescriptionLearningResourceMetadataURIs" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionLearningResourceMetadataURIQ" />
    </set>

    <set name="InterventionPrescriptionPopulationServeds" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionPopulationServedQ" />
    </set>

    <set name="InterventionPrescriptionURIs" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionURIQ" />
    </set>

    <set name="InterventionStudies" cascade="none" lazy="true">
      <key>
        <column name="InterventionPrescriptionEducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateGradeLevelQ" table="InterventionPrescriptionAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateSexQ" table="InterventionPrescriptionAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SexDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SexDescriptorAggregate.EdFi.SexDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SexDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionDiagnosisQ" table="InterventionPrescriptionDiagnosis" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DiagnosisDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DiagnosisDescriptorAggregate.EdFi.DiagnosisDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DiagnosisDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionEducationContentQ" table="InterventionPrescriptionEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentIdentifier" column="ContentIdentifier" type="string" length="225" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationContent" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ContentIdentifier" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionLearningResourceMetadataURIQ" table="InterventionPrescriptionLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionPopulationServedQ" table="InterventionPrescriptionPopulationServed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="PopulationServedDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PopulationServedDescriptorAggregate.EdFi.PopulationServedDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PopulationServedDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionURIQ" table="InterventionPrescriptionURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="URI" column="URI" type="string" length="255" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyQ" table="InterventionStudy" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="InterventionStudyIdentificationCode" column="InterventionStudyIdentificationCode" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" />
    <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" />
    <property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="int" not-null="true" />
    <property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="60" not-null="true" />
    <property name="Participants" column="Participants" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DeliveryMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DeliveryMethodDescriptorAggregate.EdFi.DeliveryMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DeliveryMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="InterventionClassDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionClassDescriptorAggregate.EdFi.InterventionClassDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InterventionClassDescriptorId" />
    </many-to-one>
    <many-to-one name="InterventionPrescription" class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InterventionPrescriptionEducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
    </many-to-one>

    <!-- Collections -->
    <set name="InterventionStudyAppropriateGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateGradeLevelQ" />
    </set>

    <set name="InterventionStudyAppropriateSexes" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateSexQ" />
    </set>

    <set name="InterventionStudyEducationContents" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyEducationContentQ" />
    </set>

    <set name="InterventionStudyInterventionEffectivenesses" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyInterventionEffectivenessQ" />
    </set>

    <set name="InterventionStudyLearningResourceMetadataURIs" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyLearningResourceMetadataURIQ" />
    </set>

    <set name="InterventionStudyPopulationServeds" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyPopulationServedQ" />
    </set>

    <set name="InterventionStudyStateAbbreviations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyStateAbbreviationQ" />
    </set>

    <set name="InterventionStudyURIs" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyURIQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateGradeLevelQ" table="InterventionStudyAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateSexQ" table="InterventionStudyAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SexDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SexDescriptorAggregate.EdFi.SexDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SexDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyEducationContentQ" table="InterventionStudyEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentIdentifier" column="ContentIdentifier" type="string" length="225" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationContent" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ContentIdentifier" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyInterventionEffectivenessQ" table="InterventionStudyInterventionEffectiveness" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ImprovementIndex" column="ImprovementIndex" type="int" />
    <property name="InterventionEffectivenessRatingDescriptorId" column="InterventionEffectivenessRatingDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DiagnosisDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DiagnosisDescriptorAggregate.EdFi.DiagnosisDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DiagnosisDescriptorId" />
    </many-to-one>
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="InterventionEffectivenessRatingDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionEffectivenessRatingDescriptorAggregate.EdFi.InterventionEffectivenessRatingDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InterventionEffectivenessRatingDescriptorId" />
    </many-to-one>
    <many-to-one name="PopulationServedDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PopulationServedDescriptorAggregate.EdFi.PopulationServedDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PopulationServedDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyLearningResourceMetadataURIQ" table="InterventionStudyLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyPopulationServedQ" table="InterventionStudyPopulationServed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="PopulationServedDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PopulationServedDescriptorAggregate.EdFi.PopulationServedDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PopulationServedDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyStateAbbreviationQ" table="InterventionStudyStateAbbreviation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="StateAbbreviationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StateAbbreviationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionStudyAggregate.EdFi.InterventionStudyURIQ" table="InterventionStudyURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="URI" column="URI" type="string" length="255" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveQ" table="LearningObjective" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />
    <property name="Objective" column="Objective" type="string" length="60" not-null="true" />
    <property name="ParentLearningObjectiveId" column="ParentLearningObjectiveId" type="string" length="60" />
    <property name="ParentNamespace" column="ParentNamespace" type="string" length="255" />
    <property name="SuccessCriteria" column="SuccessCriteria" type="string" length="150" />

    <!-- One-to-one child mappings -->
    <one-to-one name="LearningObjectiveContentStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandardQ" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ParentLearningObjective" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ParentLearningObjectiveId" />
        <column name="ParentNamespace" />
    </many-to-one>

    <!-- Collections -->
    <set name="CourseLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLearningObjectiveQ" />
    </set>

    <set name="GradebookEntryLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryLearningObjectiveQ" />
    </set>

    <set name="LearningObjectiveAcademicSubjects" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveAcademicSubjectQ" />
    </set>

    <set name="LearningObjectiveGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveGradeLevelQ" />
    </set>

    <set name="LearningObjectiveLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveLearningStandardQ" />
    </set>

    <set name="ObjectiveAssessmentLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="LearningObjectiveNamespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningObjectiveQ" />
    </set>

    <set name="ProgramLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramLearningObjectiveQ" />
    </set>

    <set name="StudentLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveQH" table="LearningObjectiveH" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />
    <property name="Objective" column="Objective" type="string" length="60" />
    <property name="ParentLearningObjectiveId" column="ParentLearningObjectiveId" type="string" length="60" />
    <property name="ParentNamespace" column="ParentNamespace" type="string" length="255" />
    <property name="SuccessCriteria" column="SuccessCriteria" type="string" length="150" />

    <!-- One-to-one child mappings -->
    <one-to-one name="LearningObjectiveContentStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandardQ" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ParentLearningObjective" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ParentLearningObjectiveId" />
        <column name="ParentNamespace" />
    </many-to-one>

    <!-- Collections -->
    <set name="CourseLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLearningObjectiveQ" />
    </set>

    <set name="GradebookEntryLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryLearningObjectiveQ" />
    </set>

    <set name="LearningObjectiveAcademicSubjects" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveAcademicSubjectQ" />
    </set>

    <set name="LearningObjectiveGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveGradeLevelQ" />
    </set>

    <set name="LearningObjectiveLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveLearningStandardQ" />
    </set>

    <set name="ObjectiveAssessmentLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="LearningObjectiveNamespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningObjectiveQ" />
    </set>

    <set name="ProgramLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramLearningObjectiveQ" />
    </set>

    <set name="StudentLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveAcademicSubjectQ" table="LearningObjectiveAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="LearningObjective">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandardQ" table="LearningObjectiveContentStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="LearningObjective">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="MandatingEducationOrganizationId" column="MandatingEducationOrganizationId" type="int" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Title" column="Title" type="string" length="75" not-null="true" />
    <property name="URI" column="URI" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="50" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="MandatingEducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MandatingEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="PublicationStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PublicationStatusDescriptorAggregate.EdFi.PublicationStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PublicationStatusDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="LearningObjectiveContentStandardAuthors" cascade="none" lazy="true">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandardAuthorQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandardAuthorQ" table="LearningObjectiveContentStandardAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="100" />
      <key-many-to-one name="LearningObjectiveContentStandard">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveGradeLevelQ" table="LearningObjectiveGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="LearningObjective">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveLearningStandardQ" table="LearningObjectiveLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="LearningObjective">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" table="LearningStandard" lazy="false" discriminator-value="NULL">
    <id name="LearningStandardId" column="LearningStandardId" type="string" length="60">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CourseTitle" column="CourseTitle" type="string" length="60" />
    <property name="Description" column="Description" type="string" length="1024" not-null="true" />
    <property name="LearningStandardCategoryDescriptorId" column="LearningStandardCategoryDescriptorId" type="int" />
    <property name="LearningStandardItemCode" column="LearningStandardItemCode" type="string" length="60" />
    <property name="LearningStandardScopeDescriptorId" column="LearningStandardScopeDescriptorId" type="int" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="ParentLearningStandardId" column="ParentLearningStandardId" type="string" length="60" />
    <property name="SuccessCriteria" column="SuccessCriteria" type="string" length="150" />
    <property name="URI" column="URI" type="string" length="255" />

    <!-- One-to-one child mappings -->
    <one-to-one name="LearningStandardContentStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardContentStandardQ" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningStandardCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardCategoryDescriptorAggregate.EdFi.LearningStandardCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="LearningStandardScopeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardScopeDescriptorAggregate.EdFi.LearningStandardScopeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardScopeDescriptorId" />
    </many-to-one>
    <many-to-one name="ParentLearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ParentLearningStandardId" />
    </many-to-one>

    <!-- Collections -->
    <set name="AssessmentItemLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemLearningStandardQ" />
    </set>

    <set name="CourseLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLearningStandardQ" />
    </set>

    <set name="EducationContents" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentQ" />
    </set>

    <set name="GradebookEntryLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryLearningStandardQ" />
    </set>

    <set name="GradeLearningStandardGrades" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeLearningStandardGradeQ" />
    </set>

    <set name="LearningObjectiveLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveLearningStandardQ" />
    </set>

    <set name="LearningStandardAcademicSubjects" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardAcademicSubjectQ" />
    </set>

    <set name="LearningStandardGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardGradeLevelQ" />
    </set>

    <set name="LearningStandardIdentificationCodes" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardIdentificationCodeQ" />
    </set>

    <set name="LearningStandardPrerequisiteLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardPrerequisiteLearningStandardQ" />
    </set>

    <set name="ObjectiveAssessmentLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningStandardQ" />
    </set>

    <set name="PrerequisiteLearningStandardPrerequisiteLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="PrerequisiteLearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardPrerequisiteLearningStandardQ" />
    </set>

    <set name="ProgramLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramLearningStandardQ" />
    </set>

    <set name="SourceLearningStandardEquivalenceAssociations" cascade="none" lazy="true">
      <key>
        <column name="SourceLearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardEquivalenceAssociationAggregate.EdFi.LearningStandardEquivalenceAssociationQ" />
    </set>

    <set name="TargetLearningStandardEquivalenceAssociations" cascade="none" lazy="true">
      <key>
        <column name="TargetLearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardEquivalenceAssociationAggregate.EdFi.LearningStandardEquivalenceAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQH" table="LearningStandardH" lazy="false" discriminator-value="NULL">
    <id name="LearningStandardId" column="LearningStandardId" type="string" length="60">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CourseTitle" column="CourseTitle" type="string" length="60" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="LearningStandardCategoryDescriptorId" column="LearningStandardCategoryDescriptorId" type="int" />
    <property name="LearningStandardItemCode" column="LearningStandardItemCode" type="string" length="60" />
    <property name="LearningStandardScopeDescriptorId" column="LearningStandardScopeDescriptorId" type="int" />
    <property name="Namespace" column="Namespace" type="string" length="255" />
    <property name="ParentLearningStandardId" column="ParentLearningStandardId" type="string" length="60" />
    <property name="SuccessCriteria" column="SuccessCriteria" type="string" length="150" />
    <property name="URI" column="URI" type="string" length="255" />

    <!-- One-to-one child mappings -->
    <one-to-one name="LearningStandardContentStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardContentStandardQ" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningStandardCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardCategoryDescriptorAggregate.EdFi.LearningStandardCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="LearningStandardScopeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardScopeDescriptorAggregate.EdFi.LearningStandardScopeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardScopeDescriptorId" />
    </many-to-one>
    <many-to-one name="ParentLearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ParentLearningStandardId" />
    </many-to-one>

    <!-- Collections -->
    <set name="AssessmentItemLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemLearningStandardQ" />
    </set>

    <set name="CourseLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseLearningStandardQ" />
    </set>

    <set name="EducationContents" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationContentAggregate.EdFi.EducationContentQ" />
    </set>

    <set name="GradebookEntryLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryLearningStandardQ" />
    </set>

    <set name="GradeLearningStandardGrades" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeLearningStandardGradeQ" />
    </set>

    <set name="LearningObjectiveLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveLearningStandardQ" />
    </set>

    <set name="LearningStandardAcademicSubjects" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardAcademicSubjectQ" />
    </set>

    <set name="LearningStandardGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardGradeLevelQ" />
    </set>

    <set name="LearningStandardIdentificationCodes" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardIdentificationCodeQ" />
    </set>

    <set name="LearningStandardPrerequisiteLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardPrerequisiteLearningStandardQ" />
    </set>

    <set name="ObjectiveAssessmentLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningStandardQ" />
    </set>

    <set name="PrerequisiteLearningStandardPrerequisiteLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="PrerequisiteLearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardPrerequisiteLearningStandardQ" />
    </set>

    <set name="ProgramLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramLearningStandardQ" />
    </set>

    <set name="SourceLearningStandardEquivalenceAssociations" cascade="none" lazy="true">
      <key>
        <column name="SourceLearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardEquivalenceAssociationAggregate.EdFi.LearningStandardEquivalenceAssociationQ" />
    </set>

    <set name="TargetLearningStandardEquivalenceAssociations" cascade="none" lazy="true">
      <key>
        <column name="TargetLearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardEquivalenceAssociationAggregate.EdFi.LearningStandardEquivalenceAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardAcademicSubjectQ" table="LearningStandardAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardContentStandardQ" table="LearningStandardContentStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="MandatingEducationOrganizationId" column="MandatingEducationOrganizationId" type="int" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Title" column="Title" type="string" length="75" not-null="true" />
    <property name="URI" column="URI" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="50" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="MandatingEducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MandatingEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="PublicationStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PublicationStatusDescriptorAggregate.EdFi.PublicationStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PublicationStatusDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="LearningStandardContentStandardAuthors" cascade="none" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardContentStandardAuthorQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardContentStandardAuthorQ" table="LearningStandardContentStandardAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="100" />
      <key-many-to-one name="LearningStandardContentStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardGradeLevelQ" table="LearningStandardGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardIdentificationCodeQ" table="LearningStandardIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentStandardName" column="ContentStandardName" type="string" length="65" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardPrerequisiteLearningStandardQ" table="LearningStandardPrerequisiteLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PrerequisiteLearningStandardId" column="PrerequisiteLearningStandardId" type="string" length="60" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="PrerequisiteLearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PrerequisiteLearningStandardId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardEquivalenceAssociationAggregate.EdFi.LearningStandardEquivalenceAssociationQ" table="LearningStandardEquivalenceAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SourceLearningStandardId" column="SourceLearningStandardId" type="string" length="60" />
      <key-property name="TargetLearningStandardId" column="TargetLearningStandardId" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EffectiveDate" column="EffectiveDate" type="date" />
    <property name="LearningStandardEquivalenceStrengthDescription" column="LearningStandardEquivalenceStrengthDescription" type="string" length="255" />
    <property name="LearningStandardEquivalenceStrengthDescriptorId" column="LearningStandardEquivalenceStrengthDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningStandardEquivalenceStrengthDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardEquivalenceStrengthDescriptorAggregate.EdFi.LearningStandardEquivalenceStrengthDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardEquivalenceStrengthDescriptorId" />
    </many-to-one>
    <many-to-one name="SourceLearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SourceLearningStandardId" />
    </many-to-one>
    <many-to-one name="TargetLearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TargetLearningStandardId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyAccountabilityQ" table="LocalEducationAgencyAccountability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="LocalEducationAgency">
        <column name="LocalEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="GunFreeSchoolsActReportingStatusDescriptorId" column="GunFreeSchoolsActReportingStatusDescriptorId" type="int" />
    <property name="SchoolChoiceImplementStatusDescriptorId" column="SchoolChoiceImplementStatusDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GunFreeSchoolsActReportingStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GunFreeSchoolsActReportingStatusDescriptorAggregate.EdFi.GunFreeSchoolsActReportingStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GunFreeSchoolsActReportingStatusDescriptorId" />
    </many-to-one>
    <many-to-one name="SchoolChoiceImplementStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolChoiceImplementStatusDescriptorAggregate.EdFi.SchoolChoiceImplementStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolChoiceImplementStatusDescriptorId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyFederalFundsQ" table="LocalEducationAgencyFederalFunds" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-many-to-one name="LocalEducationAgency">
        <column name="LocalEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="InnovativeDollarsSpent" column="InnovativeDollarsSpent" type="decimal" />
    <property name="InnovativeDollarsSpentStrategicPriorities" column="InnovativeDollarsSpentStrategicPriorities" type="decimal" />
    <property name="InnovativeProgramsFundsReceived" column="InnovativeProgramsFundsReceived" type="decimal" />
    <property name="SchoolImprovementAllocation" column="SchoolImprovementAllocation" type="decimal" />
    <property name="SchoolImprovementReservedFundsPercentage" column="SchoolImprovementReservedFundsPercentage" type="decimal" />
    <property name="StateAssessmentAdministrationFunding" column="StateAssessmentAdministrationFunding" type="decimal" />
    <property name="SupplementalEducationalServicesFundsSpent" column="SupplementalEducationalServicesFundsSpent" type="decimal" />
    <property name="SupplementalEducationalServicesPerPupilExpenditure" column="SupplementalEducationalServicesPerPupilExpenditure" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.LocationAggregate.EdFi.LocationQ" table="Location" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassroomIdentificationCode" column="ClassroomIdentificationCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="MaximumNumberOfSeats" column="MaximumNumberOfSeats" type="int" />
    <property name="OptimalNumberOfSeats" column="OptimalNumberOfSeats" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>

    <!-- Collections -->
    <set name="Sections" cascade="none" lazy="true">
      <key>
        <column name="LocationClassroomIdentificationCode" />
        <column name="LocationSchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentQ" table="ObjectiveAssessment" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />
    <property name="ParentIdentificationCode" column="ParentIdentificationCode" type="string" length="60" />
    <property name="PercentOfAssessment" column="PercentOfAssessment" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>
    <many-to-one name="Assessment" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
    </many-to-one>
    <many-to-one name="ParentObjectiveAssessment" class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="ParentIdentificationCode" />
        <column name="Namespace" />
    </many-to-one>

    <!-- Collections -->
    <set name="ObjectiveAssessmentAssessmentItems" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentAssessmentItemQ" />
    </set>

    <set name="ObjectiveAssessmentLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningObjectiveQ" />
    </set>

    <set name="ObjectiveAssessmentLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningStandardQ" />
    </set>

    <set name="ObjectiveAssessmentPerformanceLevels" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentPerformanceLevelQ" />
    </set>

    <set name="ObjectiveAssessmentScores" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentScoreQ" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessments" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentQ" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessmentsHierarchy" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentQH" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentQH" table="ObjectiveAssessmentH" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />
    <property name="ParentIdentificationCode" column="ParentIdentificationCode" type="string" length="60" />
    <property name="PercentOfAssessment" column="PercentOfAssessment" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>
    <many-to-one name="Assessment" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
    </many-to-one>
    <many-to-one name="ParentObjectiveAssessment" class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="ParentIdentificationCode" />
        <column name="Namespace" />
    </many-to-one>

    <!-- Collections -->
    <set name="ObjectiveAssessmentAssessmentItems" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentAssessmentItemQ" />
    </set>

    <set name="ObjectiveAssessmentLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningObjectiveQ" />
    </set>

    <set name="ObjectiveAssessmentLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningStandardQ" />
    </set>

    <set name="ObjectiveAssessmentPerformanceLevels" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentPerformanceLevelQ" />
    </set>

    <set name="ObjectiveAssessmentScores" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentScoreQ" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessments" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentQ" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessmentsHierarchy" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentQH" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentAssessmentItemQ" table="ObjectiveAssessmentAssessmentItem" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentItemIdentificationCode" column="AssessmentItemIdentificationCode" type="string" length="60" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentItem" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="AssessmentItemIdentificationCode" />
        <column name="Namespace" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningObjectiveQ" table="ObjectiveAssessmentLearningObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="LearningObjectiveNamespace" column="LearningObjectiveNamespace" type="string" length="255" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningObjective" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningObjectiveId" />
        <column name="LearningObjectiveNamespace" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningStandardQ" table="ObjectiveAssessmentLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentPerformanceLevelQ" table="ObjectiveAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentReportingMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentReportingMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="PerformanceLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PerformanceLevelDescriptorAggregate.EdFi.PerformanceLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PerformanceLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="ResultDatatypeTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResultDatatypeTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentScoreQ" table="ObjectiveAssessmentScore" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentReportingMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentReportingMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="ResultDatatypeTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResultDatatypeTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionQ" table="OpenStaffPosition" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="RequisitionNumber" column="RequisitionNumber" type="string" length="20" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="DatePosted" column="DatePosted" type="date" not-null="true" />
    <property name="DatePostingRemoved" column="DatePostingRemoved" type="date" />
    <property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" not-null="true" />
    <property name="PositionTitle" column="PositionTitle" type="string" length="100" />
    <property name="PostingResultDescriptorId" column="PostingResultDescriptorId" type="int" />
    <property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int" />
    <property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="EmploymentStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EmploymentStatusDescriptorAggregate.EdFi.EmploymentStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EmploymentStatusDescriptorId" />
    </many-to-one>
    <many-to-one name="PostingResultDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PostingResultDescriptorAggregate.EdFi.PostingResultDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PostingResultDescriptorId" />
    </many-to-one>
    <many-to-one name="ProgramAssignmentDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAssignmentDescriptorAggregate.EdFi.ProgramAssignmentDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramAssignmentDescriptorId" />
    </many-to-one>
    <many-to-one name="StaffClassificationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffClassificationDescriptorAggregate.EdFi.StaffClassificationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffClassificationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="OpenStaffPositionAcademicSubjects" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionAcademicSubjectQ" />
    </set>

    <set name="OpenStaffPositionInstructionalGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionInstructionalGradeLevelQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionAcademicSubjectQ" table="OpenStaffPositionAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="OpenStaffPosition">
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.OpenStaffPositionAggregate.EdFi.OpenStaffPositionInstructionalGradeLevelQ" table="OpenStaffPositionInstructionalGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="OpenStaffPosition">
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentQ" table="Parent" lazy="false" discriminator-value="NULL">
    <id name="ParentUSI" column="ParentUSI" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="LoginId" column="LoginId" type="string" length="60" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="ParentUniqueId" column="ParentUniqueId" type="string" length="32" not-null="true" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Person" class="EdFi.Ods.Entities.NHibernate.QueryModels.PersonAggregate.EdFi.PersonQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PersonId" />
        <column name="SourceSystemDescriptorId" />
    </many-to-one>
    <many-to-one name="SexDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SexDescriptorAggregate.EdFi.SexDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SexDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="ParentAddresses" cascade="none" lazy="true">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentAddressQ" />
    </set>

    <set name="ParentElectronicMails" cascade="none" lazy="true">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentElectronicMailQ" />
    </set>

    <set name="ParentInternationalAddresses" cascade="none" lazy="true">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentInternationalAddressQ" />
    </set>

    <set name="ParentLanguages" cascade="none" lazy="true">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentLanguageQ" />
    </set>

    <set name="ParentOtherNames" cascade="none" lazy="true">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentOtherNameQ" />
    </set>

    <set name="ParentPersonalIdentificationDocuments" cascade="none" lazy="true">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentPersonalIdentificationDocumentQ" />
    </set>

    <set name="ParentTelephones" cascade="none" lazy="true">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentTelephoneQ" />
    </set>

    <set name="StudentParentAssociations" cascade="none" lazy="true">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentParentAssociationAggregate.EdFi.StudentParentAssociationQ" />
    </set>

    <set name="SurveyResponses" cascade="none" lazy="true">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentAddressQ" table="ParentAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AddressTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AddressTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="LocaleDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocaleDescriptorAggregate.EdFi.LocaleDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocaleDescriptorId" />
    </many-to-one>
    <many-to-one name="StateAbbreviationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StateAbbreviationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="ParentAddressPeriods" cascade="none" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentAddressPeriodQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentAddressPeriodQ" table="ParentAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="ParentAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentElectronicMailQ" table="ParentElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ElectronicMailTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ElectronicMailTypeDescriptorAggregate.EdFi.ElectronicMailTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ElectronicMailTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentInternationalAddressQ" table="ParentInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AddressTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AddressTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="CountryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CountryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentLanguageQ" table="ParentLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LanguageDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageDescriptorAggregate.EdFi.LanguageDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LanguageDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="ParentLanguageUses" cascade="none" lazy="true">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentLanguageUseQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentLanguageUseQ" table="ParentLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="ParentLanguage">
        <column name="LanguageDescriptorId" />
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LanguageUseDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageUseDescriptorAggregate.EdFi.LanguageUseDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LanguageUseDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentOtherNameQ" table="ParentOtherName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="OtherNameTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.OtherNameTypeDescriptorAggregate.EdFi.OtherNameTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="OtherNameTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentPersonalIdentificationDocumentQ" table="ParentPersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="60" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="IdentificationDocumentUseDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.IdentificationDocumentUseDescriptorAggregate.EdFi.IdentificationDocumentUseDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IdentificationDocumentUseDescriptorId" />
    </many-to-one>
    <many-to-one name="IssuerCountryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IssuerCountryDescriptorId" />
    </many-to-one>
    <many-to-one name="PersonalInformationVerificationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PersonalInformationVerificationDescriptorAggregate.EdFi.PersonalInformationVerificationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PersonalInformationVerificationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentTelephoneQ" table="ParentTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="TelephoneNumberTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TelephoneNumberTypeDescriptorAggregate.EdFi.TelephoneNumberTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TelephoneNumberTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.PayrollAggregate.EdFi.PayrollQ" table="Payroll" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AmountToDate" column="AmountToDate" type="decimal" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Account" class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountAggregate.EdFi.AccountQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.PersonAggregate.EdFi.PersonQ" table="Person" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SourceSystemDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SourceSystemDescriptorAggregate.EdFi.SourceSystemDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="Parents" cascade="none" lazy="true">
      <key>
        <column name="PersonId" />
        <column name="SourceSystemDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentQ" />
    </set>

    <set name="Staffs" cascade="none" lazy="true">
      <key>
        <column name="PersonId" />
        <column name="SourceSystemDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" />
    </set>

    <set name="Students" cascade="none" lazy="true">
      <key>
        <column name="PersonId" />
        <column name="SourceSystemDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryEventAggregate.EdFi.PostSecondaryEventQ" table="PostSecondaryEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="PostSecondaryEventCategoryDescriptorId" column="PostSecondaryEventCategoryDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="PostSecondaryInstitutionId" column="PostSecondaryInstitutionId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="PostSecondaryEventCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryEventCategoryDescriptorAggregate.EdFi.PostSecondaryEventCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PostSecondaryEventCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="PostSecondaryInstitution" class="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PostSecondaryInstitutionId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionMediumOfInstructionQ" table="PostSecondaryInstitutionMediumOfInstruction" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MediumOfInstructionDescriptorId" column="MediumOfInstructionDescriptorId" type="int" />
      <key-many-to-one name="PostSecondaryInstitution">
        <column name="PostSecondaryInstitutionId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="MediumOfInstructionDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.MediumOfInstructionDescriptorAggregate.EdFi.MediumOfInstructionDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MediumOfInstructionDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" table="Program" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="ProgramId" column="ProgramId" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ProgramTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramTypeDescriptorAggregate.EdFi.ProgramTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="AssessmentPrograms" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentProgramQ" />
    </set>

    <set name="CohortPrograms" cascade="none" lazy="true">
      <key>
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortProgramQ" />
    </set>

    <set name="GeneralStudentProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationQ" />
    </set>

    <set name="ProgramCharacteristics" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramCharacteristicQ" />
    </set>

    <set name="ProgramLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramLearningObjectiveQ" />
    </set>

    <set name="ProgramLearningStandards" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramLearningStandardQ" />
    </set>

    <set name="ProgramServices" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramServiceQ" />
    </set>

    <set name="ProgramSponsors" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramSponsorQ" />
    </set>

    <set name="RestraintEventPrograms" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventAggregate.EdFi.RestraintEventProgramQ" />
    </set>

    <set name="SectionPrograms" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionProgramQ" />
    </set>

    <set name="StaffProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffProgramAssociationAggregate.EdFi.StaffProgramAssociationQ" />
    </set>

    <set name="StudentProgramAttendanceEvents" cascade="none" lazy="true">
      <key>
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentProgramAttendanceEventAggregate.EdFi.StudentProgramAttendanceEventQ" />
    </set>

    <set name="SurveyProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyProgramAssociationAggregate.EdFi.SurveyProgramAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramCharacteristicQ" table="ProgramCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramCharacteristicDescriptorId" column="ProgramCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ProgramCharacteristicDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramCharacteristicDescriptorAggregate.EdFi.ProgramCharacteristicDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramCharacteristicDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramLearningObjectiveQ" table="ProgramLearningObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningObjective" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramLearningStandardQ" table="ProgramLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LearningStandard" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningStandardAggregate.EdFi.LearningStandardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningStandardId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramServiceQ" table="ProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ServiceDescriptorAggregate.EdFi.ServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramSponsorQ" table="ProgramSponsor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramSponsorDescriptorId" column="ProgramSponsorDescriptorId" type="int" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ProgramSponsorDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramSponsorDescriptorAggregate.EdFi.ProgramSponsorDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramSponsorDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardQ" table="ReportCard" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="GPACumulative" column="GPACumulative" type="decimal" />
    <property name="GPAGivenGradingPeriod" column="GPAGivenGradingPeriod" type="decimal" />
    <property name="NumberOfDaysAbsent" column="NumberOfDaysAbsent" type="decimal" />
    <property name="NumberOfDaysInAttendance" column="NumberOfDaysInAttendance" type="decimal" />
    <property name="NumberOfDaysTardy" column="NumberOfDaysTardy" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="GradingPeriod" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodAggregate.EdFi.GradingPeriodQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSequence" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="ReportCardGradePointAverages" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardGradePointAverageQ" />
    </set>

    <set name="ReportCardGrades" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardGradeQ" />
    </set>

    <set name="ReportCardStudentCompetencyObjectives" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardStudentCompetencyObjectiveQ" />
    </set>

    <set name="ReportCardStudentLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardStudentLearningObjectiveQ" />
    </set>

    <set name="StudentAcademicRecordReportCards" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReportCardQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardGradeQ" table="ReportCardGrade" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Grade" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BeginDate" />
        <column name="GradeTypeDescriptorId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardGradePointAverageQ" table="ReportCardGradePointAverage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradePointAverageTypeDescriptorId" column="GradePointAverageTypeDescriptorId" type="int" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="GradePointAverageValue" column="GradePointAverageValue" type="decimal" not-null="true" />
    <property name="IsCumulative" column="IsCumulative" type="bool" />
    <property name="MaxGradePointAverageValue" column="MaxGradePointAverageValue" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradePointAverageTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradePointAverageTypeDescriptorAggregate.EdFi.GradePointAverageTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradePointAverageTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardStudentCompetencyObjectiveQ" table="ReportCardStudentCompetencyObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Objective" column="Objective" type="string" length="60" />
      <key-property name="ObjectiveEducationOrganizationId" column="ObjectiveEducationOrganizationId" type="int" />
      <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="StudentCompetencyObjective" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardStudentLearningObjectiveQ" table="ReportCardStudentLearningObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="StudentLearningObjective" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventAggregate.EdFi.RestraintEventQ" table="RestraintEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RestraintEventIdentifier" column="RestraintEventIdentifier" type="string" length="20" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDate" column="EventDate" type="date" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationalEnvironmentDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationalEnvironmentDescriptorAggregate.EdFi.EducationalEnvironmentDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationalEnvironmentDescriptorId" />
    </many-to-one>
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="RestraintEventPrograms" cascade="none" lazy="true">
      <key>
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventAggregate.EdFi.RestraintEventProgramQ" />
    </set>

    <set name="RestraintEventReasons" cascade="none" lazy="true">
      <key>
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventAggregate.EdFi.RestraintEventReasonQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventAggregate.EdFi.RestraintEventProgramQ" table="RestraintEventProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="RestraintEvent">
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Program" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventAggregate.EdFi.RestraintEventReasonQ" table="RestraintEventReason" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RestraintEventReasonDescriptorId" column="RestraintEventReasonDescriptorId" type="int" />
      <key-many-to-one name="RestraintEvent">
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="RestraintEventReasonDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventReasonDescriptorAggregate.EdFi.RestraintEventReasonDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="RestraintEventReasonDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolCategoryQ" table="SchoolCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolCategoryDescriptorId" column="SchoolCategoryDescriptorId" type="int" />
      <key-many-to-one name="School">
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SchoolCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolCategoryDescriptorAggregate.EdFi.SchoolCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolCategoryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolGradeLevelQ" table="SchoolGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="School">
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" table="SchoolYearType" lazy="false">
    <id name="SchoolYear" column="SchoolYear" type="short">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CurrentSchoolYear" column="CurrentSchoolYear" type="bool" not-null="true" />
    <property name="SchoolYearDescription" column="SchoolYearDescription" type="string" length="50" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="AccountabilityRatings" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AccountabilityRatingAggregate.EdFi.AccountabilityRatingQ" />
    </set>

    <set name="Calendars" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarAggregate.EdFi.CalendarQ" />
    </set>

    <set name="ClassOfStudentSchoolAssociations" cascade="none" lazy="true">
      <key>
        <column name="ClassOfSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
    </set>

    <set name="GradingPeriods" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodAggregate.EdFi.GradingPeriodQ" />
    </set>

    <set name="GraduationPlans" cascade="none" lazy="true">
      <key>
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanQ" />
    </set>

    <set name="LocalEducationAgencyAccountabilities" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyAccountabilityQ" />
    </set>

    <set name="Schools" cascade="none" lazy="true">
      <key>
        <column name="CharterApprovalSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" />
    </set>

    <set name="Sessions" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionQ" />
    </set>

    <set name="StaffSchoolAssociations" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationQ" />
    </set>

    <set name="StateEducationAgencyAccountabilities" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StateEducationAgencyAggregate.EdFi.StateEducationAgencyAccountabilityQ" />
    </set>

    <set name="StudentAcademicRecords" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordQ" />
    </set>

    <set name="StudentAssessments" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationCohortYears" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationCohortYearQ" />
    </set>

    <set name="StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessments" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessmentQ" />
    </set>

    <set name="StudentSchoolAssociations" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
    </set>

    <set name="Surveys" cascade="none" lazy="true">
      <key>
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" table="Section" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AvailableCreditConversion" column="AvailableCreditConversion" type="decimal" />
    <property name="AvailableCredits" column="AvailableCredits" type="decimal" />
    <property name="AvailableCreditTypeDescriptorId" column="AvailableCreditTypeDescriptorId" type="int" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="InstructionLanguageDescriptorId" column="InstructionLanguageDescriptorId" type="int" />
    <property name="LocationClassroomIdentificationCode" column="LocationClassroomIdentificationCode" type="string" length="60" />
    <property name="LocationSchoolId" column="LocationSchoolId" type="int" />
    <property name="MediumOfInstructionDescriptorId" column="MediumOfInstructionDescriptorId" type="int" />
    <property name="OfficialAttendancePeriod" column="OfficialAttendancePeriod" type="bool" />
    <property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
    <property name="SectionName" column="SectionName" type="string" length="100" />
    <property name="SequenceOfCourse" column="SequenceOfCourse" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AvailableCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AvailableCreditTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="CourseOffering" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
    </many-to-one>
    <many-to-one name="EducationalEnvironmentDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationalEnvironmentDescriptorAggregate.EdFi.EducationalEnvironmentDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationalEnvironmentDescriptorId" />
    </many-to-one>
    <many-to-one name="InstructionLanguageDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageDescriptorAggregate.EdFi.LanguageDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InstructionLanguageDescriptorId" />
    </many-to-one>
    <many-to-one name="Location" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocationAggregate.EdFi.LocationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocationClassroomIdentificationCode" />
        <column name="LocationSchoolId" />
    </many-to-one>
    <many-to-one name="LocationSchool" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocationSchoolId" />
    </many-to-one>
    <many-to-one name="MediumOfInstructionDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.MediumOfInstructionDescriptorAggregate.EdFi.MediumOfInstructionDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MediumOfInstructionDescriptorId" />
    </many-to-one>
    <many-to-one name="PopulationServedDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PopulationServedDescriptorAggregate.EdFi.PopulationServedDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PopulationServedDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="AssessmentSections" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentSectionQ" />
    </set>

    <set name="GradebookEntries" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryQ" />
    </set>

    <set name="SectionAttendanceTakenEvents" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAttendanceTakenEventAggregate.EdFi.SectionAttendanceTakenEventQ" />
    </set>

    <set name="SectionCharacteristics" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionCharacteristicQ" />
    </set>

    <set name="SectionClassPeriods" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionClassPeriodQ" />
    </set>

    <set name="SectionCourseLevelCharacteristics" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionCourseLevelCharacteristicQ" />
    </set>

    <set name="SectionOfferedGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionOfferedGradeLevelQ" />
    </set>

    <set name="SectionPrograms" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionProgramQ" />
    </set>

    <set name="StaffSectionAssociations" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSectionAssociationAggregate.EdFi.StaffSectionAssociationQ" />
    </set>

    <set name="StudentCohortAssociationSections" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationSectionQ" />
    </set>

    <set name="StudentSectionAssociations" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationQ" />
    </set>

    <set name="StudentSectionAttendanceEvents" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEventQ" />
    </set>

    <set name="SurveySectionAssociations" cascade="none" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionAssociationAggregate.EdFi.SurveySectionAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionCharacteristicQ" table="SectionCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SectionCharacteristicDescriptorId" column="SectionCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SectionCharacteristicDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionCharacteristicDescriptorAggregate.EdFi.SectionCharacteristicDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SectionCharacteristicDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionClassPeriodQ" table="SectionClassPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassPeriodName" column="ClassPeriodName" type="string" length="60" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ClassPeriod" class="EdFi.Ods.Entities.NHibernate.QueryModels.ClassPeriodAggregate.EdFi.ClassPeriodQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ClassPeriodName" />
        <column name="SchoolId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionCourseLevelCharacteristicQ" table="SectionCourseLevelCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CourseLevelCharacteristicDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseLevelCharacteristicDescriptorAggregate.EdFi.CourseLevelCharacteristicDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseLevelCharacteristicDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionOfferedGradeLevelQ" table="SectionOfferedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionProgramQ" table="SectionProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Program" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAttendanceTakenEventAggregate.EdFi.SectionAttendanceTakenEventQ" table="SectionAttendanceTakenEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarCode" column="CalendarCode" type="string" length="60" />
      <key-property name="Date" column="Date" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EventDate" column="EventDate" type="date" not-null="true" />
    <property name="StaffUSI" column="StaffUSI" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CalendarDate" class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarDateAggregate.EdFi.CalendarDateQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CalendarCode" />
        <column name="Date" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="Section" class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionQ" table="Session" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" not-null="true" />
    <property name="TermDescriptorId" column="TermDescriptorId" type="int" not-null="true" />
    <property name="TotalInstructionalDays" column="TotalInstructionalDays" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="TermDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TermDescriptorAggregate.EdFi.TermDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="CourseOfferings" cascade="none" lazy="true">
      <key>
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseOfferingAggregate.EdFi.CourseOfferingQ" />
    </set>

    <set name="SessionAcademicWeeks" cascade="none" lazy="true">
      <key>
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionAcademicWeekQ" />
    </set>

    <set name="SessionGradingPeriods" cascade="none" lazy="true">
      <key>
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionGradingPeriodQ" />
    </set>

    <set name="StudentSchoolAttendanceEvents" cascade="none" lazy="true">
      <key>
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAttendanceEventAggregate.EdFi.StudentSchoolAttendanceEventQ" />
    </set>

    <set name="Surveys" cascade="none" lazy="true">
      <key>
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionAcademicWeekQ" table="SessionAcademicWeek" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="WeekIdentifier" column="WeekIdentifier" type="string" length="80" />
      <key-many-to-one name="Session">
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicWeek" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicWeekAggregate.EdFi.AcademicWeekQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
        <column name="WeekIdentifier" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionGradingPeriodQ" table="SessionGradingPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="PeriodSequence" column="PeriodSequence" type="int" />
      <key-many-to-one name="Session">
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradingPeriod" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodAggregate.EdFi.GradingPeriodQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradingPeriodDescriptorId" />
        <column name="PeriodSequence" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" table="Staff" lazy="false" discriminator-value="NULL">
    <id name="StaffUSI" column="StaffUSI" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="BirthDate" column="BirthDate" type="date" />
    <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="HighestCompletedLevelOfEducationDescriptorId" column="HighestCompletedLevelOfEducationDescriptorId" type="int" />
    <property name="HighlyQualifiedTeacher" column="HighlyQualifiedTeacher" type="bool" />
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="LoginId" column="LoginId" type="string" length="60" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="OldEthnicityDescriptorId" column="OldEthnicityDescriptorId" type="int" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    <property name="StaffUniqueId" column="StaffUniqueId" type="string" length="32" not-null="true" />
    <property name="YearsOfPriorProfessionalExperience" column="YearsOfPriorProfessionalExperience" type="decimal" />
    <property name="YearsOfPriorTeachingExperience" column="YearsOfPriorTeachingExperience" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CitizenshipStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CitizenshipStatusDescriptorAggregate.EdFi.CitizenshipStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CitizenshipStatusDescriptorId" />
    </many-to-one>
    <many-to-one name="HighestCompletedLevelOfEducationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LevelOfEducationDescriptorAggregate.EdFi.LevelOfEducationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="HighestCompletedLevelOfEducationDescriptorId" />
    </many-to-one>
    <many-to-one name="OldEthnicityDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.OldEthnicityDescriptorAggregate.EdFi.OldEthnicityDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="OldEthnicityDescriptorId" />
    </many-to-one>
    <many-to-one name="Person" class="EdFi.Ods.Entities.NHibernate.QueryModels.PersonAggregate.EdFi.PersonQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PersonId" />
        <column name="SourceSystemDescriptorId" />
    </many-to-one>
    <many-to-one name="SexDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SexDescriptorAggregate.EdFi.SexDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SexDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="ContractedStaffs" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ContractedStaffAggregate.EdFi.ContractedStaffQ" />
    </set>

    <set name="DisciplineActionStaffs" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionStaffQ" />
    </set>

    <set name="DisciplineIncidents" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentQ" />
    </set>

    <set name="InterventionStaffs" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionStaffQ" />
    </set>

    <set name="Payrolls" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.PayrollAggregate.EdFi.PayrollQ" />
    </set>

    <set name="SectionAttendanceTakenEvents" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAttendanceTakenEventAggregate.EdFi.SectionAttendanceTakenEventQ" />
    </set>

    <set name="StaffAbsenceEvents" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAbsenceEventAggregate.EdFi.StaffAbsenceEventQ" />
    </set>

    <set name="StaffAddresses" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffAddressQ" />
    </set>

    <set name="StaffCohortAssociations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffCohortAssociationAggregate.EdFi.StaffCohortAssociationQ" />
    </set>

    <set name="StaffCredentials" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffCredentialQ" />
    </set>

    <set name="StaffDisciplineIncidentAssociations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationQ" />
    </set>

    <set name="StaffEducationOrganizationAssignmentAssociations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationAssignmentAssociationAggregate.EdFi.StaffEducationOrganizationAssignmentAssociationQ" />
    </set>

    <set name="StaffEducationOrganizationContactAssociations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationQ" />
    </set>

    <set name="StaffEducationOrganizationEmploymentAssociations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationQ" />
    </set>

    <set name="StaffElectronicMails" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffElectronicMailQ" />
    </set>

    <set name="StaffIdentificationCodes" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffIdentificationCodeQ" />
    </set>

    <set name="StaffIdentificationDocuments" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffIdentificationDocumentQ" />
    </set>

    <set name="StaffInternationalAddresses" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffInternationalAddressQ" />
    </set>

    <set name="StaffLanguages" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffLanguageQ" />
    </set>

    <set name="StaffLeaves" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffLeaveAggregate.EdFi.StaffLeaveQ" />
    </set>

    <set name="StaffOtherNames" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffOtherNameQ" />
    </set>

    <set name="StaffPersonalIdentificationDocuments" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffPersonalIdentificationDocumentQ" />
    </set>

    <set name="StaffProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffProgramAssociationAggregate.EdFi.StaffProgramAssociationQ" />
    </set>

    <set name="StaffRaces" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffRaceQ" />
    </set>

    <set name="StaffRecognitions" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffRecognitionQ" />
    </set>

    <set name="StaffSchoolAssociations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationQ" />
    </set>

    <set name="StaffSectionAssociations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSectionAssociationAggregate.EdFi.StaffSectionAssociationQ" />
    </set>

    <set name="StaffTelephones" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffTelephoneQ" />
    </set>

    <set name="StaffTribalAffiliations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffTribalAffiliationQ" />
    </set>

    <set name="StaffVisas" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffVisaQ" />
    </set>

    <set name="StudentSpecialEducationProgramAssociationServiceProviders" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationServiceProviderQ" />
    </set>

    <set name="StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProviders" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProviderQ" />
    </set>

    <set name="SurveyResponses" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseQ" />
    </set>

    <set name="SurveyResponseStaffTargetAssociations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseStaffTargetAssociationAggregate.EdFi.SurveyResponseStaffTargetAssociationQ" />
    </set>

    <set name="SurveySectionResponseStaffTargetAssociations" cascade="none" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseStaffTargetAssociationAggregate.EdFi.SurveySectionResponseStaffTargetAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffAddressQ" table="StaffAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AddressTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AddressTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="LocaleDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocaleDescriptorAggregate.EdFi.LocaleDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocaleDescriptorId" />
    </many-to-one>
    <many-to-one name="StateAbbreviationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StateAbbreviationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StaffAddressPeriods" cascade="none" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffAddressPeriodQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffAddressPeriodQ" table="StaffAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StaffAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffCredentialQ" table="StaffCredential" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="60" />
      <key-property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Credential" class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffElectronicMailQ" table="StaffElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ElectronicMailTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ElectronicMailTypeDescriptorAggregate.EdFi.ElectronicMailTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ElectronicMailTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffIdentificationCodeQ" table="StaffIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffIdentificationSystemDescriptorId" column="StaffIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="StaffIdentificationSystemDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffIdentificationSystemDescriptorAggregate.EdFi.StaffIdentificationSystemDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffIdentificationSystemDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffIdentificationDocumentQ" table="StaffIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="60" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="IdentificationDocumentUseDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.IdentificationDocumentUseDescriptorAggregate.EdFi.IdentificationDocumentUseDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IdentificationDocumentUseDescriptorId" />
    </many-to-one>
    <many-to-one name="IssuerCountryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IssuerCountryDescriptorId" />
    </many-to-one>
    <many-to-one name="PersonalInformationVerificationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PersonalInformationVerificationDescriptorAggregate.EdFi.PersonalInformationVerificationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PersonalInformationVerificationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffInternationalAddressQ" table="StaffInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AddressTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AddressTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="CountryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CountryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffLanguageQ" table="StaffLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LanguageDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageDescriptorAggregate.EdFi.LanguageDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LanguageDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StaffLanguageUses" cascade="none" lazy="true">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffLanguageUseQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffLanguageUseQ" table="StaffLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="StaffLanguage">
        <column name="LanguageDescriptorId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LanguageUseDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageUseDescriptorAggregate.EdFi.LanguageUseDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LanguageUseDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffOtherNameQ" table="StaffOtherName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="OtherNameTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.OtherNameTypeDescriptorAggregate.EdFi.OtherNameTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="OtherNameTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffPersonalIdentificationDocumentQ" table="StaffPersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="60" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="IdentificationDocumentUseDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.IdentificationDocumentUseDescriptorAggregate.EdFi.IdentificationDocumentUseDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IdentificationDocumentUseDescriptorId" />
    </many-to-one>
    <many-to-one name="IssuerCountryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IssuerCountryDescriptorId" />
    </many-to-one>
    <many-to-one name="PersonalInformationVerificationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PersonalInformationVerificationDescriptorAggregate.EdFi.PersonalInformationVerificationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PersonalInformationVerificationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffRaceQ" table="StaffRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="RaceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.RaceDescriptorAggregate.EdFi.RaceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="RaceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffRecognitionQ" table="StaffRecognition" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RecognitionTypeDescriptorId" column="RecognitionTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />
    <property name="RecognitionAwardDate" column="RecognitionAwardDate" type="date" />
    <property name="RecognitionAwardExpiresDate" column="RecognitionAwardExpiresDate" type="date" />
    <property name="RecognitionDescription" column="RecognitionDescription" type="string" length="80" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AchievementCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AchievementCategoryDescriptorAggregate.EdFi.AchievementCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AchievementCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="RecognitionTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.RecognitionTypeDescriptorAggregate.EdFi.RecognitionTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="RecognitionTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffTelephoneQ" table="StaffTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="TelephoneNumberTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TelephoneNumberTypeDescriptorAggregate.EdFi.TelephoneNumberTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TelephoneNumberTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffTribalAffiliationQ" table="StaffTribalAffiliation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="TribalAffiliationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TribalAffiliationDescriptorAggregate.EdFi.TribalAffiliationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TribalAffiliationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffVisaQ" table="StaffVisa" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="VisaDescriptorId" column="VisaDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="VisaDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.VisaDescriptorAggregate.EdFi.VisaDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="VisaDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAbsenceEventAggregate.EdFi.StaffAbsenceEventQ" table="StaffAbsenceEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AbsenceEventCategoryDescriptorId" column="AbsenceEventCategoryDescriptorId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AbsenceEventReason" column="AbsenceEventReason" type="string" length="40" />
    <property name="HoursAbsent" column="HoursAbsent" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AbsenceEventCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AbsenceEventCategoryDescriptorAggregate.EdFi.AbsenceEventCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AbsenceEventCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffCohortAssociationAggregate.EdFi.StaffCohortAssociationQ" table="StaffCohortAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="CohortIdentifier" column="CohortIdentifier" type="string" length="20" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="StudentRecordAccess" column="StudentRecordAccess" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Cohort" class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationQ" table="StaffDisciplineIncidentAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="20" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DisciplineIncident" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCodes" cascade="none" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCodeQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCodeQ" table="StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" />
      <key-many-to-one name="StaffDisciplineIncidentAssociation">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DisciplineIncidentParticipationCodeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentParticipationCodeDescriptorAggregate.EdFi.DisciplineIncidentParticipationCodeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DisciplineIncidentParticipationCodeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationAssignmentAssociationAggregate.EdFi.StaffEducationOrganizationAssignmentAssociationQ" table="StaffEducationOrganizationAssignmentAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="60" />
    <property name="EmploymentEducationOrganizationId" column="EmploymentEducationOrganizationId" type="int" />
    <property name="EmploymentHireDate" column="EmploymentHireDate" type="date" />
    <property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="OrderOfAssignment" column="OrderOfAssignment" type="int" />
    <property name="PositionTitle" column="PositionTitle" type="string" length="100" />
    <property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Credential" class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="EmploymentStaffEducationOrganizationEmploymentAssociation" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EmploymentEducationOrganizationId" />
        <column name="EmploymentStatusDescriptorId" />
        <column name="EmploymentHireDate" />
        <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="StaffClassificationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffClassificationDescriptorAggregate.EdFi.StaffClassificationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffClassificationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationQ" table="StaffEducationOrganizationContactAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContactTitle" column="ContactTitle" type="string" length="75" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="ContactTypeDescriptorId" column="ContactTypeDescriptorId" type="int" />
    <property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" not-null="true" />

    <!-- One-to-one child mappings -->
    <one-to-one name="StaffEducationOrganizationContactAssociationAddress" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddressQ" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ContactTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ContactTypeDescriptorAggregate.EdFi.ContactTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ContactTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="StaffEducationOrganizationContactAssociationTelephones" cascade="none" lazy="true">
      <key>
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationTelephoneQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddressQ" table="StaffEducationOrganizationContactAssociationAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StaffEducationOrganizationContactAssociation">
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" not-null="true" />
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="City" column="City" type="string" length="30" not-null="true" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />
    <property name="PostalCode" column="PostalCode" type="string" length="17" not-null="true" />
    <property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" not-null="true" />
    <property name="StreetNumberName" column="StreetNumberName" type="string" length="150" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AddressTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AddressTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="LocaleDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocaleDescriptorAggregate.EdFi.LocaleDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocaleDescriptorId" />
    </many-to-one>
    <many-to-one name="StateAbbreviationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StateAbbreviationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StaffEducationOrganizationContactAssociationAddressPeriods" cascade="none" lazy="true">
      <key>
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddressPeriodQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddressPeriodQ" table="StaffEducationOrganizationContactAssociationAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StaffEducationOrganizationContactAssociationAddress">
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationTelephoneQ" table="StaffEducationOrganizationContactAssociationTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="StaffEducationOrganizationContactAssociation">
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="TelephoneNumberTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TelephoneNumberTypeDescriptorAggregate.EdFi.TelephoneNumberTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TelephoneNumberTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationQ" table="StaffEducationOrganizationEmploymentAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" />
      <key-property name="HireDate" column="HireDate" type="date" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="60" />
    <property name="Department" column="Department" type="string" length="60" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="FullTimeEquivalency" column="FullTimeEquivalency" type="decimal" />
    <property name="HourlyWage" column="HourlyWage" type="decimal" />
    <property name="OfferDate" column="OfferDate" type="date" />
    <property name="SeparationDescriptorId" column="SeparationDescriptorId" type="int" />
    <property name="SeparationReasonDescriptorId" column="SeparationReasonDescriptorId" type="int" />
    <property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Credential" class="EdFi.Ods.Entities.NHibernate.QueryModels.CredentialAggregate.EdFi.CredentialQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="EmploymentStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EmploymentStatusDescriptorAggregate.EdFi.EmploymentStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EmploymentStatusDescriptorId" />
    </many-to-one>
    <many-to-one name="SeparationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SeparationDescriptorAggregate.EdFi.SeparationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SeparationDescriptorId" />
    </many-to-one>
    <many-to-one name="SeparationReasonDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SeparationReasonDescriptorAggregate.EdFi.SeparationReasonDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SeparationReasonDescriptorId" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="StaffEducationOrganizationAssignmentAssociations" cascade="none" lazy="true">
      <key>
        <column name="EmploymentEducationOrganizationId" />
        <column name="EmploymentStatusDescriptorId" />
        <column name="EmploymentHireDate" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffEducationOrganizationAssignmentAssociationAggregate.EdFi.StaffEducationOrganizationAssignmentAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffLeaveAggregate.EdFi.StaffLeaveQ" table="StaffLeave" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="StaffLeaveEventCategoryDescriptorId" column="StaffLeaveEventCategoryDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Reason" column="Reason" type="string" length="40" />
    <property name="SubstituteAssigned" column="SubstituteAssigned" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="StaffLeaveEventCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffLeaveEventCategoryDescriptorAggregate.EdFi.StaffLeaveEventCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffLeaveEventCategoryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffProgramAssociationAggregate.EdFi.StaffProgramAssociationQ" table="StaffProgramAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="StudentRecordAccess" column="StudentRecordAccess" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Program" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationQ" table="StaffSchoolAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CalendarCode" column="CalendarCode" type="string" length="60" />
    <property name="SchoolYear" column="SchoolYear" type="short" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Calendar" class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarAggregate.EdFi.CalendarQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="ProgramAssignmentDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAssignmentDescriptorAggregate.EdFi.ProgramAssignmentDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramAssignmentDescriptorId" />
    </many-to-one>
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="StaffSchoolAssociationAcademicSubjects" cascade="none" lazy="true">
      <key>
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationAcademicSubjectQ" />
    </set>

    <set name="StaffSchoolAssociationGradeLevels" cascade="none" lazy="true">
      <key>
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationGradeLevelQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationAcademicSubjectQ" table="StaffSchoolAssociationAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="StaffSchoolAssociation">
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicSubjectDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicSubjectDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationGradeLevelQ" table="StaffSchoolAssociationGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="StaffSchoolAssociation">
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StaffSectionAssociationAggregate.EdFi.StaffSectionAssociationQ" table="StaffSectionAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="ClassroomPositionDescriptorId" column="ClassroomPositionDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="HighlyQualifiedTeacher" column="HighlyQualifiedTeacher" type="bool" />
    <property name="PercentageContribution" column="PercentageContribution" type="decimal" />
    <property name="TeacherStudentDataLinkExclusion" column="TeacherStudentDataLinkExclusion" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ClassroomPositionDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ClassroomPositionDescriptorAggregate.EdFi.ClassroomPositionDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ClassroomPositionDescriptorId" />
    </many-to-one>
    <many-to-one name="Section" class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StateEducationAgencyAggregate.EdFi.StateEducationAgencyAccountabilityQ" table="StateEducationAgencyAccountability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="StateEducationAgency">
        <column name="StateEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CTEGraduationRateInclusion" column="CTEGraduationRateInclusion" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StateEducationAgencyAggregate.EdFi.StateEducationAgencyFederalFundsQ" table="StateEducationAgencyFederalFunds" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-many-to-one name="StateEducationAgency">
        <column name="StateEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FederalProgramsFundingAllocation" column="FederalProgramsFundingAllocation" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" table="Student" lazy="false" discriminator-value="NULL">
    <id name="StudentUSI" column="StudentUSI" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="BirthCity" column="BirthCity" type="string" length="30" />
    <property name="BirthCountryDescriptorId" column="BirthCountryDescriptorId" type="int" />
    <property name="BirthDate" column="BirthDate" type="date" not-null="true" />
    <property name="BirthInternationalProvince" column="BirthInternationalProvince" type="string" length="150" />
    <property name="BirthSexDescriptorId" column="BirthSexDescriptorId" type="int" />
    <property name="BirthStateAbbreviationDescriptorId" column="BirthStateAbbreviationDescriptorId" type="int" />
    <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" />
    <property name="DateEnteredUS" column="DateEnteredUS" type="date" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="MultipleBirthStatus" column="MultipleBirthStatus" type="bool" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    <property name="StudentUniqueId" column="StudentUniqueId" type="string" length="32" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="BirthCountryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BirthCountryDescriptorId" />
    </many-to-one>
    <many-to-one name="BirthSexDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SexDescriptorAggregate.EdFi.SexDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BirthSexDescriptorId" />
    </many-to-one>
    <many-to-one name="BirthStateAbbreviationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BirthStateAbbreviationDescriptorId" />
    </many-to-one>
    <many-to-one name="CitizenshipStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CitizenshipStatusDescriptorAggregate.EdFi.CitizenshipStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CitizenshipStatusDescriptorId" />
    </many-to-one>
    <many-to-one name="Person" class="EdFi.Ods.Entities.NHibernate.QueryModels.PersonAggregate.EdFi.PersonQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PersonId" />
        <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="DisciplineActions" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionQ" />
    </set>

    <set name="GeneralStudentProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationQ" />
    </set>

    <set name="PostSecondaryEvents" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.PostSecondaryEventAggregate.EdFi.PostSecondaryEventQ" />
    </set>

    <set name="ReportCards" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardQ" />
    </set>

    <set name="RestraintEvents" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.RestraintEventAggregate.EdFi.RestraintEventQ" />
    </set>

    <set name="StudentAcademicRecords" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordQ" />
    </set>

    <set name="StudentAssessments" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" />
    </set>

    <set name="StudentCohortAssociations" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationQ" />
    </set>

    <set name="StudentCompetencyObjectives" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveQ" />
    </set>

    <set name="StudentDisciplineIncidentAssociations" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationQ" />
    </set>

    <set name="StudentEducationOrganizationAssociations" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationQ" />
    </set>

    <set name="StudentEducationOrganizationResponsibilityAssociations" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationResponsibilityAssociationAggregate.EdFi.StudentEducationOrganizationResponsibilityAssociationQ" />
    </set>

    <set name="StudentIdentificationDocuments" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentIdentificationDocumentQ" />
    </set>

    <set name="StudentInterventionAssociations" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationQ" />
    </set>

    <set name="StudentInterventionAttendanceEvents" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAttendanceEventAggregate.EdFi.StudentInterventionAttendanceEventQ" />
    </set>

    <set name="StudentLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveQ" />
    </set>

    <set name="StudentOtherNames" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentOtherNameQ" />
    </set>

    <set name="StudentParentAssociations" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentParentAssociationAggregate.EdFi.StudentParentAssociationQ" />
    </set>

    <set name="StudentPersonalIdentificationDocuments" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentPersonalIdentificationDocumentQ" />
    </set>

    <set name="StudentProgramAttendanceEvents" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentProgramAttendanceEventAggregate.EdFi.StudentProgramAttendanceEventQ" />
    </set>

    <set name="StudentSchoolAssociations" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" />
    </set>

    <set name="StudentSchoolAttendanceEvents" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAttendanceEventAggregate.EdFi.StudentSchoolAttendanceEventQ" />
    </set>

    <set name="StudentSectionAssociations" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationQ" />
    </set>

    <set name="StudentSectionAttendanceEvents" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEventQ" />
    </set>

    <set name="StudentVisas" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentVisaQ" />
    </set>

    <set name="SurveyResponses" cascade="none" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentIdentificationDocumentQ" table="StudentIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="60" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="IdentificationDocumentUseDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.IdentificationDocumentUseDescriptorAggregate.EdFi.IdentificationDocumentUseDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IdentificationDocumentUseDescriptorId" />
    </many-to-one>
    <many-to-one name="IssuerCountryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IssuerCountryDescriptorId" />
    </many-to-one>
    <many-to-one name="PersonalInformationVerificationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PersonalInformationVerificationDescriptorAggregate.EdFi.PersonalInformationVerificationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PersonalInformationVerificationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentOtherNameQ" table="StudentOtherName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="OtherNameTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.OtherNameTypeDescriptorAggregate.EdFi.OtherNameTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="OtherNameTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentPersonalIdentificationDocumentQ" table="StudentPersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="60" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="IdentificationDocumentUseDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.IdentificationDocumentUseDescriptorAggregate.EdFi.IdentificationDocumentUseDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IdentificationDocumentUseDescriptorId" />
    </many-to-one>
    <many-to-one name="IssuerCountryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IssuerCountryDescriptorId" />
    </many-to-one>
    <many-to-one name="PersonalInformationVerificationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PersonalInformationVerificationDescriptorAggregate.EdFi.PersonalInformationVerificationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PersonalInformationVerificationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentVisaQ" table="StudentVisa" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="VisaDescriptorId" column="VisaDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="VisaDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.VisaDescriptorAggregate.EdFi.VisaDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="VisaDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordQ" table="StudentAcademicRecord" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CumulativeAttemptedCreditConversion" column="CumulativeAttemptedCreditConversion" type="decimal" />
    <property name="CumulativeAttemptedCredits" column="CumulativeAttemptedCredits" type="decimal" />
    <property name="CumulativeAttemptedCreditTypeDescriptorId" column="CumulativeAttemptedCreditTypeDescriptorId" type="int" />
    <property name="CumulativeEarnedCreditConversion" column="CumulativeEarnedCreditConversion" type="decimal" />
    <property name="CumulativeEarnedCredits" column="CumulativeEarnedCredits" type="decimal" />
    <property name="CumulativeEarnedCreditTypeDescriptorId" column="CumulativeEarnedCreditTypeDescriptorId" type="int" />
    <property name="CumulativeGradePointAverage" column="CumulativeGradePointAverage" type="decimal" />
    <property name="CumulativeGradePointsEarned" column="CumulativeGradePointsEarned" type="decimal" />
    <property name="GradeValueQualifier" column="GradeValueQualifier" type="string" length="80" />
    <property name="ProjectedGraduationDate" column="ProjectedGraduationDate" type="date" />
    <property name="SessionAttemptedCreditConversion" column="SessionAttemptedCreditConversion" type="decimal" />
    <property name="SessionAttemptedCredits" column="SessionAttemptedCredits" type="decimal" />
    <property name="SessionAttemptedCreditTypeDescriptorId" column="SessionAttemptedCreditTypeDescriptorId" type="int" />
    <property name="SessionEarnedCreditConversion" column="SessionEarnedCreditConversion" type="decimal" />
    <property name="SessionEarnedCredits" column="SessionEarnedCredits" type="decimal" />
    <property name="SessionEarnedCreditTypeDescriptorId" column="SessionEarnedCreditTypeDescriptorId" type="int" />
    <property name="SessionGradePointAverage" column="SessionGradePointAverage" type="decimal" />
    <property name="SessionGradePointsEarned" column="SessionGradePointsEarned" type="decimal" />

    <!-- One-to-one child mappings -->
    <one-to-one name="StudentAcademicRecordClassRanking" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordClassRankingQ" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CumulativeAttemptedCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CumulativeAttemptedCreditTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="CumulativeEarnedCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CumulativeEarnedCreditTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="SessionAttemptedCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SessionAttemptedCreditTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="SessionEarnedCreditTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SessionEarnedCreditTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>
    <many-to-one name="TermDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TermDescriptorAggregate.EdFi.TermDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="CourseTranscripts" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseTranscriptAggregate.EdFi.CourseTranscriptQ" />
    </set>

    <set name="StudentAcademicRecordAcademicHonors" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordAcademicHonorQ" />
    </set>

    <set name="StudentAcademicRecordDiplomas" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordDiplomaQ" />
    </set>

    <set name="StudentAcademicRecordGradePointAverages" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordGradePointAverageQ" />
    </set>

    <set name="StudentAcademicRecordRecognitions" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordRecognitionQ" />
    </set>

    <set name="StudentAcademicRecordReportCards" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReportCardQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordAcademicHonorQ" table="StudentAcademicRecordAcademicHonor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicHonorCategoryDescriptorId" column="AcademicHonorCategoryDescriptorId" type="int" />
      <key-property name="HonorDescription" column="HonorDescription" type="string" length="80" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="HonorAwardDate" column="HonorAwardDate" type="date" />
    <property name="HonorAwardExpiresDate" column="HonorAwardExpiresDate" type="date" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AcademicHonorCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AcademicHonorCategoryDescriptorAggregate.EdFi.AcademicHonorCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AcademicHonorCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="AchievementCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AchievementCategoryDescriptorAggregate.EdFi.AchievementCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AchievementCategoryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordClassRankingQ" table="StudentAcademicRecordClassRanking" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ClassRank" column="ClassRank" type="int" not-null="true" />
    <property name="ClassRankingDate" column="ClassRankingDate" type="date" />
    <property name="PercentageRanking" column="PercentageRanking" type="int" />
    <property name="TotalNumberInClass" column="TotalNumberInClass" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordDiplomaQ" table="StudentAcademicRecordDiploma" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiplomaAwardDate" column="DiplomaAwardDate" type="date" />
      <key-property name="DiplomaTypeDescriptorId" column="DiplomaTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="CTECompleter" column="CTECompleter" type="bool" />
    <property name="DiplomaAwardExpiresDate" column="DiplomaAwardExpiresDate" type="date" />
    <property name="DiplomaDescription" column="DiplomaDescription" type="string" length="80" />
    <property name="DiplomaLevelDescriptorId" column="DiplomaLevelDescriptorId" type="int" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AchievementCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AchievementCategoryDescriptorAggregate.EdFi.AchievementCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AchievementCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="DiplomaLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DiplomaLevelDescriptorAggregate.EdFi.DiplomaLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DiplomaLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="DiplomaTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DiplomaTypeDescriptorAggregate.EdFi.DiplomaTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DiplomaTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordGradePointAverageQ" table="StudentAcademicRecordGradePointAverage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradePointAverageTypeDescriptorId" column="GradePointAverageTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="GradePointAverageValue" column="GradePointAverageValue" type="decimal" not-null="true" />
    <property name="IsCumulative" column="IsCumulative" type="bool" />
    <property name="MaxGradePointAverageValue" column="MaxGradePointAverageValue" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GradePointAverageTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradePointAverageTypeDescriptorAggregate.EdFi.GradePointAverageTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradePointAverageTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordRecognitionQ" table="StudentAcademicRecordRecognition" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RecognitionTypeDescriptorId" column="RecognitionTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />
    <property name="RecognitionAwardDate" column="RecognitionAwardDate" type="date" />
    <property name="RecognitionAwardExpiresDate" column="RecognitionAwardExpiresDate" type="date" />
    <property name="RecognitionDescription" column="RecognitionDescription" type="string" length="80" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AchievementCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AchievementCategoryDescriptorAggregate.EdFi.AchievementCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AchievementCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="RecognitionTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.RecognitionTypeDescriptorAggregate.EdFi.RecognitionTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="RecognitionTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReportCardQ" table="StudentAcademicRecordReportCard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ReportCard" class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentQ" table="StudentAssessment" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StudentAssessmentIdentifier" column="StudentAssessmentIdentifier" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AdministrationDate" column="AdministrationDate" type="UtcDateTime" not-null="true" />
    <property name="AdministrationEndDate" column="AdministrationEndDate" type="UtcDateTime" />
    <property name="AdministrationEnvironmentDescriptorId" column="AdministrationEnvironmentDescriptorId" type="int" />
    <property name="AdministrationLanguageDescriptorId" column="AdministrationLanguageDescriptorId" type="int" />
    <property name="EventCircumstanceDescriptorId" column="EventCircumstanceDescriptorId" type="int" />
    <property name="EventDescription" column="EventDescription" type="string" length="1024" />
    <property name="PlatformTypeDescriptorId" column="PlatformTypeDescriptorId" type="int" />
    <property name="ReasonNotTestedDescriptorId" column="ReasonNotTestedDescriptorId" type="int" />
    <property name="RetestIndicatorDescriptorId" column="RetestIndicatorDescriptorId" type="int" />
    <property name="SchoolYear" column="SchoolYear" type="short" />
    <property name="SerialNumber" column="SerialNumber" type="string" length="60" />
    <property name="WhenAssessedGradeLevelDescriptorId" column="WhenAssessedGradeLevelDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AdministrationEnvironmentDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AdministrationEnvironmentDescriptorAggregate.EdFi.AdministrationEnvironmentDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AdministrationEnvironmentDescriptorId" />
    </many-to-one>
    <many-to-one name="AdministrationLanguageDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageDescriptorAggregate.EdFi.LanguageDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AdministrationLanguageDescriptorId" />
    </many-to-one>
    <many-to-one name="Assessment" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentAggregate.EdFi.AssessmentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
    </many-to-one>
    <many-to-one name="EventCircumstanceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EventCircumstanceDescriptorAggregate.EdFi.EventCircumstanceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EventCircumstanceDescriptorId" />
    </many-to-one>
    <many-to-one name="PlatformTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PlatformTypeDescriptorAggregate.EdFi.PlatformTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PlatformTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="ReasonNotTestedDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ReasonNotTestedDescriptorAggregate.EdFi.ReasonNotTestedDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ReasonNotTestedDescriptorId" />
    </many-to-one>
    <many-to-one name="RetestIndicatorDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.RetestIndicatorDescriptorAggregate.EdFi.RetestIndicatorDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="RetestIndicatorDescriptorId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>
    <many-to-one name="WhenAssessedGradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="WhenAssessedGradeLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentAssessmentAccommodations" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentAccommodationQ" />
    </set>

    <set name="StudentAssessmentItems" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentItemQ" />
    </set>

    <set name="StudentAssessmentPerformanceLevels" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentPerformanceLevelQ" />
    </set>

    <set name="StudentAssessmentScoreResults" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentScoreResultQ" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessments" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentQ" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessmentsHierarchy" cascade="none" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentQH" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentAccommodationQ" table="StudentAssessmentAccommodation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccommodationDescriptorId" column="AccommodationDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AccommodationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AccommodationDescriptorAggregate.EdFi.AccommodationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AccommodationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentItemQ" table="StudentAssessmentItem" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssessmentItemResultDescriptorId" column="AssessmentItemResultDescriptorId" type="int" not-null="true" />
    <property name="AssessmentResponse" column="AssessmentResponse" type="string" length="60" />
    <property name="DescriptiveFeedback" column="DescriptiveFeedback" type="string" length="1024" />
    <property name="RawScoreResult" column="RawScoreResult" type="decimal" />
    <property name="ResponseIndicatorDescriptorId" column="ResponseIndicatorDescriptorId" type="int" />
    <property name="TimeAssessed" column="TimeAssessed" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentItem" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemAggregate.EdFi.AssessmentItemQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
    </many-to-one>
    <many-to-one name="AssessmentItemResultDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentItemResultDescriptorAggregate.EdFi.AssessmentItemResultDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentItemResultDescriptorId" />
    </many-to-one>
    <many-to-one name="ResponseIndicatorDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResponseIndicatorDescriptorAggregate.EdFi.ResponseIndicatorDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResponseIndicatorDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentPerformanceLevelQ" table="StudentAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PerformanceLevelMet" column="PerformanceLevelMet" type="bool" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentReportingMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentReportingMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="PerformanceLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PerformanceLevelDescriptorAggregate.EdFi.PerformanceLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PerformanceLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentScoreResultQ" table="StudentAssessmentScoreResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Result" column="Result" type="string" length="35" not-null="true" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentReportingMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentReportingMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="ResultDatatypeTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResultDatatypeTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentQ" table="StudentAssessmentStudentObjectiveAssessment" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ObjectiveAssessment" class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentAssessmentStudentObjectiveAssessmentPerformanceLevels" cascade="none" lazy="true">
      <key>
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevelQ" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessmentScoreResults" cascade="none" lazy="true">
      <key>
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentScoreResultQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentQH" table="StudentAssessmentStudentObjectiveAssessmentH" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />
    <property name="ParentIdentificationCode" column="ParentIdentificationCode" type="string" length="60" />
    <property name="PercentOfAssessment" column="PercentOfAssessment" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ObjectiveAssessment" class="EdFi.Ods.Entities.NHibernate.QueryModels.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentAssessmentStudentObjectiveAssessmentPerformanceLevels" cascade="none" lazy="true">
      <key>
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevelQ" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessmentScoreResults" cascade="none" lazy="true">
      <key>
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentScoreResultQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevelQ" table="StudentAssessmentStudentObjectiveAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessmentStudentObjectiveAssessment">
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PerformanceLevelMet" column="PerformanceLevelMet" type="bool" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentReportingMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentReportingMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="PerformanceLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PerformanceLevelDescriptorAggregate.EdFi.PerformanceLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PerformanceLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentScoreResultQ" table="StudentAssessmentStudentObjectiveAssessmentScoreResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessmentStudentObjectiveAssessment">
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Result" column="Result" type="string" length="35" not-null="true" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AssessmentReportingMethodDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AssessmentReportingMethodDescriptorId" />
    </many-to-one>
    <many-to-one name="ResultDatatypeTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResultDatatypeTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationQ" table="StudentCohortAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="CohortIdentifier" column="CohortIdentifier" type="string" length="20" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Cohort" class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentCohortAssociationSections" cascade="none" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationSectionQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationSectionQ" table="StudentCohortAssociationSection" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-many-to-one name="StudentCohortAssociation">
        <column name="BeginDate" />
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Section" class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveQ" table="StudentCompetencyObjective" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int" />
      <key-property name="Objective" column="Objective" type="string" length="60" />
      <key-property name="ObjectiveEducationOrganizationId" column="ObjectiveEducationOrganizationId" type="int" />
      <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" not-null="true" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CompetencyLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CompetencyLevelDescriptorAggregate.EdFi.CompetencyLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CompetencyLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="GradingPeriod" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodAggregate.EdFi.GradingPeriodQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSequence" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="ObjectiveCompetencyObjective" class="EdFi.Ods.Entities.NHibernate.QueryModels.CompetencyObjectiveAggregate.EdFi.CompetencyObjectiveQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ObjectiveEducationOrganizationId" />
        <column name="Objective" />
        <column name="ObjectiveGradeLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="ReportCardStudentCompetencyObjectives" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardStudentCompetencyObjectiveQ" />
    </set>

    <set name="StudentCompetencyObjectiveGeneralStudentProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveGeneralStudentProgramAssociationQ" />
    </set>

    <set name="StudentCompetencyObjectiveStudentSectionAssociations" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveStudentSectionAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveGeneralStudentProgramAssociationQ" table="StudentCompetencyObjectiveGeneralStudentProgramAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentCompetencyObjective">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GeneralStudentProgramAssociation" class="EdFi.Ods.Entities.NHibernate.QueryModels.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveStudentSectionAssociationQ" table="StudentCompetencyObjectiveStudentSectionAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-many-to-one name="StudentCompetencyObjective">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="StudentSectionAssociation" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BeginDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgramQ" table="StudentCTEProgramAssociationCTEProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CareerPathwayDescriptorId" column="CareerPathwayDescriptorId" type="int" />
      <key-many-to-one name="StudentCTEProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CIPCode" column="CIPCode" type="string" length="120" />
    <property name="CTEProgramCompletionIndicator" column="CTEProgramCompletionIndicator" type="bool" />
    <property name="PrimaryCTEProgramIndicator" column="PrimaryCTEProgramIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CareerPathwayDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CareerPathwayDescriptorAggregate.EdFi.CareerPathwayDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CareerPathwayDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgramServiceQ" table="StudentCTEProgramAssociationCTEProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CTEProgramServiceDescriptorId" column="CTEProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentCTEProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CIPCode" column="CIPCode" type="string" length="120" />
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CTEProgramServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CTEProgramServiceDescriptorAggregate.EdFi.CTEProgramServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CTEProgramServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationServiceQ" table="StudentCTEProgramAssociationService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentCTEProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ServiceDescriptorAggregate.EdFi.ServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationQ" table="StudentDisciplineIncidentAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="20" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="StudentParticipationCodeDescriptorId" column="StudentParticipationCodeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DisciplineIncident" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineIncidentAggregate.EdFi.DisciplineIncidentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>
    <many-to-one name="StudentParticipationCodeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentParticipationCodeDescriptorAggregate.EdFi.StudentParticipationCodeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentParticipationCodeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="DisciplineActionStudentDisciplineIncidentAssociations" cascade="none" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.DisciplineActionAggregate.EdFi.DisciplineActionStudentDisciplineIncidentAssociationQ" />
    </set>

    <set name="StudentDisciplineIncidentAssociationBehaviors" cascade="none" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationBehaviorQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationBehaviorQ" table="StudentDisciplineIncidentAssociationBehavior" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int" />
      <key-many-to-one name="StudentDisciplineIncidentAssociation">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BehaviorDetailedDescription" column="BehaviorDetailedDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="BehaviorDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.BehaviorDescriptorAggregate.EdFi.BehaviorDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BehaviorDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationQ" table="StudentEducationOrganizationAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="LimitedEnglishProficiencyDescriptorId" column="LimitedEnglishProficiencyDescriptorId" type="int" />
    <property name="LoginId" column="LoginId" type="string" length="60" />
    <property name="OldEthnicityDescriptorId" column="OldEthnicityDescriptorId" type="int" />
    <property name="ProfileThumbnail" column="ProfileThumbnail" type="string" length="255" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="LimitedEnglishProficiencyDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LimitedEnglishProficiencyDescriptorAggregate.EdFi.LimitedEnglishProficiencyDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LimitedEnglishProficiencyDescriptorId" />
    </many-to-one>
    <many-to-one name="OldEthnicityDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.OldEthnicityDescriptorAggregate.EdFi.OldEthnicityDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="OldEthnicityDescriptorId" />
    </many-to-one>
    <many-to-one name="SexDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SexDescriptorAggregate.EdFi.SexDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SexDescriptorId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationAddresses" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationCohortYears" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationCohortYearQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationDisabilities" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationElectronicMails" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationElectronicMailQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationInternationalAddresses" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationInternationalAddressQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationLanguages" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguageQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationProgramParticipations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationProgramParticipationQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationRaces" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationRaceQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationStudentCharacteristics" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristicQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationStudentIdentificationCodes" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIdentificationCodeQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationStudentIndicators" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicatorQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationTelephones" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTelephoneQ" />
    </set>

    <set name="StudentEducationOrganizationAssociationTribalAffiliations" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTribalAffiliationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressQ" table="StudentEducationOrganizationAssociationAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AddressTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AddressTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="LocaleDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LocaleDescriptorAggregate.EdFi.LocaleDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocaleDescriptorId" />
    </many-to-one>
    <many-to-one name="StateAbbreviationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StateAbbreviationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationAddressPeriods" cascade="none" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressPeriodQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressPeriodQ" table="StudentEducationOrganizationAssociationAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentEducationOrganizationAssociationAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationCohortYearQ" table="StudentEducationOrganizationAssociationCohortYear" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CohortYearTypeDescriptorId" column="CohortYearTypeDescriptorId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CohortYearTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortYearTypeDescriptorAggregate.EdFi.CohortYearTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CohortYearTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityQ" table="StudentEducationOrganizationAssociationDisability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" />
    <property name="DisabilityDiagnosis" column="DisabilityDiagnosis" type="string" length="80" />
    <property name="OrderOfDisability" column="OrderOfDisability" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DisabilityDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisabilityDescriptorAggregate.EdFi.DisabilityDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DisabilityDescriptorId" />
    </many-to-one>
    <many-to-one name="DisabilityDeterminationSourceTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisabilityDeterminationSourceTypeDescriptorAggregate.EdFi.DisabilityDeterminationSourceTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DisabilityDeterminationSourceTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationDisabilityDesignations" cascade="none" lazy="true">
      <key>
        <column name="DisabilityDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityDesignationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityDesignationQ" table="StudentEducationOrganizationAssociationDisabilityDesignation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociationDisability">
        <column name="DisabilityDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DisabilityDesignationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisabilityDesignationDescriptorAggregate.EdFi.DisabilityDesignationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DisabilityDesignationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationElectronicMailQ" table="StudentEducationOrganizationAssociationElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ElectronicMailTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ElectronicMailTypeDescriptorAggregate.EdFi.ElectronicMailTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ElectronicMailTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationInternationalAddressQ" table="StudentEducationOrganizationAssociationInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AddressTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AddressTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="CountryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CountryDescriptorAggregate.EdFi.CountryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CountryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguageQ" table="StudentEducationOrganizationAssociationLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LanguageDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageDescriptorAggregate.EdFi.LanguageDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LanguageDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationLanguageUses" cascade="none" lazy="true">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguageUseQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguageUseQ" table="StudentEducationOrganizationAssociationLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociationLanguage">
        <column name="LanguageDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LanguageUseDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageUseDescriptorAggregate.EdFi.LanguageUseDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LanguageUseDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationProgramParticipationQ" table="StudentEducationOrganizationAssociationProgramParticipation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ProgramTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramTypeDescriptorAggregate.EdFi.ProgramTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristics" cascade="none" lazy="true">
      <key>
        <column name="ProgramTypeDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristicQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristicQ" table="StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramCharacteristicDescriptorId" column="ProgramCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociationProgramParticipation">
        <column name="ProgramTypeDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ProgramCharacteristicDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramCharacteristicDescriptorAggregate.EdFi.ProgramCharacteristicDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramCharacteristicDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationRaceQ" table="StudentEducationOrganizationAssociationRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="RaceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.RaceDescriptorAggregate.EdFi.RaceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="RaceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristicQ" table="StudentEducationOrganizationAssociationStudentCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StudentCharacteristicDescriptorId" column="StudentCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="StudentCharacteristicDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCharacteristicDescriptorAggregate.EdFi.StudentCharacteristicDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentCharacteristicDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationStudentCharacteristicPeriods" cascade="none" lazy="true">
      <key>
        <column name="StudentCharacteristicDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristicPeriodQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristicPeriodQ" table="StudentEducationOrganizationAssociationStudentCharacteristicPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentEducationOrganizationAssociationStudentCharacteristic">
        <column name="StudentCharacteristicDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIdentificationCodeQ" table="StudentEducationOrganizationAssociationStudentIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
      <key-property name="StudentIdentificationSystemDescriptorId" column="StudentIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="StudentIdentificationSystemDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentIdentificationSystemDescriptorAggregate.EdFi.StudentIdentificationSystemDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentIdentificationSystemDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicatorQ" table="StudentEducationOrganizationAssociationStudentIndicator" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IndicatorName" column="IndicatorName" type="string" length="200" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="Indicator" column="Indicator" type="string" length="35" not-null="true" />
    <property name="IndicatorGroup" column="IndicatorGroup" type="string" length="200" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationStudentIndicatorPeriods" cascade="none" lazy="true">
      <key>
        <column name="IndicatorName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicatorPeriodQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicatorPeriodQ" table="StudentEducationOrganizationAssociationStudentIndicatorPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentEducationOrganizationAssociationStudentIndicator">
        <column name="IndicatorName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTelephoneQ" table="StudentEducationOrganizationAssociationTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="TelephoneNumberTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TelephoneNumberTypeDescriptorAggregate.EdFi.TelephoneNumberTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TelephoneNumberTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTribalAffiliationQ" table="StudentEducationOrganizationAssociationTribalAffiliation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="TribalAffiliationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TribalAffiliationDescriptorAggregate.EdFi.TribalAffiliationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TribalAffiliationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentEducationOrganizationResponsibilityAssociationAggregate.EdFi.StudentEducationOrganizationResponsibilityAssociationQ" table="StudentEducationOrganizationResponsibilityAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ResponsibilityDescriptorId" column="ResponsibilityDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ResponsibilityDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResponsibilityDescriptorAggregate.EdFi.ResponsibilityDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResponsibilityDescriptorId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentGradebookEntryAggregate.EdFi.StudentGradebookEntryQ" table="StudentGradebookEntry" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="DateAssigned" column="DateAssigned" type="date" />
      <key-property name="GradebookEntryTitle" column="GradebookEntryTitle" type="string" length="60" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" />
    <property name="DateFulfilled" column="DateFulfilled" type="date" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="LetterGradeEarned" column="LetterGradeEarned" type="string" length="20" />
    <property name="NumericGradeEarned" column="NumericGradeEarned" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CompetencyLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CompetencyLevelDescriptorAggregate.EdFi.CompetencyLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CompetencyLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="GradebookEntry" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradebookEntryAggregate.EdFi.GradebookEntryQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DateAssigned" />
        <column name="GradebookEntryTitle" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StudentSectionAssociation" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BeginDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociationHomelessProgramServiceQ" table="StudentHomelessProgramAssociationHomelessProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="HomelessProgramServiceDescriptorId" column="HomelessProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentHomelessProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="HomelessProgramServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.HomelessProgramServiceDescriptorAggregate.EdFi.HomelessProgramServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="HomelessProgramServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationQ" table="StudentInterventionAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CohortEducationOrganizationId" column="CohortEducationOrganizationId" type="int" />
    <property name="CohortIdentifier" column="CohortIdentifier" type="string" length="20" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="Dosage" column="Dosage" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Cohort" class="EdFi.Ods.Entities.NHibernate.QueryModels.CohortAggregate.EdFi.CohortQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CohortIdentifier" />
        <column name="CohortEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="Intervention" class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentInterventionAssociationInterventionEffectivenesses" cascade="none" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationInterventionEffectivenessQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationInterventionEffectivenessQ" table="StudentInterventionAssociationInterventionEffectiveness" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="StudentInterventionAssociation">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ImprovementIndex" column="ImprovementIndex" type="int" />
    <property name="InterventionEffectivenessRatingDescriptorId" column="InterventionEffectivenessRatingDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DiagnosisDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DiagnosisDescriptorAggregate.EdFi.DiagnosisDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DiagnosisDescriptorId" />
    </many-to-one>
    <many-to-one name="GradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradeLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="InterventionEffectivenessRatingDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionEffectivenessRatingDescriptorAggregate.EdFi.InterventionEffectivenessRatingDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="InterventionEffectivenessRatingDescriptorId" />
    </many-to-one>
    <many-to-one name="PopulationServedDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.PopulationServedDescriptorAggregate.EdFi.PopulationServedDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="PopulationServedDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentInterventionAttendanceEventAggregate.EdFi.StudentInterventionAttendanceEventQ" table="StudentInterventionAttendanceEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="InterventionDuration" column="InterventionDuration" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AttendanceEventCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AttendanceEventCategoryDescriptorAggregate.EdFi.AttendanceEventCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AttendanceEventCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationalEnvironmentDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationalEnvironmentDescriptorAggregate.EdFi.EducationalEnvironmentDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationalEnvironmentDescriptorId" />
    </many-to-one>
    <many-to-one name="Intervention" class="EdFi.Ods.Entities.NHibernate.QueryModels.InterventionAggregate.EdFi.InterventionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessmentQ" table="StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="StudentLanguageInstructionProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MonitoredDescriptorId" column="MonitoredDescriptorId" type="int" />
    <property name="ParticipationDescriptorId" column="ParticipationDescriptorId" type="int" />
    <property name="ProficiencyDescriptorId" column="ProficiencyDescriptorId" type="int" />
    <property name="ProgressDescriptorId" column="ProgressDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="MonitoredDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.MonitoredDescriptorAggregate.EdFi.MonitoredDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MonitoredDescriptorId" />
    </many-to-one>
    <many-to-one name="ParticipationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ParticipationDescriptorAggregate.EdFi.ParticipationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ParticipationDescriptorId" />
    </many-to-one>
    <many-to-one name="ProficiencyDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProficiencyDescriptorAggregate.EdFi.ProficiencyDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProficiencyDescriptorId" />
    </many-to-one>
    <many-to-one name="ProgressDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgressDescriptorAggregate.EdFi.ProgressDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgressDescriptorId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramServiceQ" table="StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageInstructionProgramServiceDescriptorId" column="LanguageInstructionProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentLanguageInstructionProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="LanguageInstructionProgramServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.LanguageInstructionProgramServiceDescriptorAggregate.EdFi.LanguageInstructionProgramServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LanguageInstructionProgramServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveQ" table="StudentLearningObjective" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int" />
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" not-null="true" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="CompetencyLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.CompetencyLevelDescriptorAggregate.EdFi.CompetencyLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CompetencyLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="GradingPeriod" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradingPeriodAggregate.EdFi.GradingPeriodQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSequence" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="LearningObjective" class="EdFi.Ods.Entities.NHibernate.QueryModels.LearningObjectiveAggregate.EdFi.LearningObjectiveQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="ReportCardStudentLearningObjectives" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.ReportCardAggregate.EdFi.ReportCardStudentLearningObjectiveQ" />
    </set>

    <set name="StudentLearningObjectiveGeneralStudentProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveGeneralStudentProgramAssociationQ" />
    </set>

    <set name="StudentLearningObjectiveStudentSectionAssociations" cascade="none" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveStudentSectionAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveGeneralStudentProgramAssociationQ" table="StudentLearningObjectiveGeneralStudentProgramAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentLearningObjective">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="GeneralStudentProgramAssociation" class="EdFi.Ods.Entities.NHibernate.QueryModels.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveStudentSectionAssociationQ" table="StudentLearningObjectiveStudentSectionAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-many-to-one name="StudentLearningObjective">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="StudentSectionAssociation" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="BeginDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociationMigrantEducationProgramServiceQ" table="StudentMigrantEducationProgramAssociationMigrantEducationProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MigrantEducationProgramServiceDescriptorId" column="MigrantEducationProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentMigrantEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="MigrantEducationProgramServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.MigrantEducationProgramServiceDescriptorAggregate.EdFi.MigrantEducationProgramServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="MigrantEducationProgramServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramServiceQ" table="StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="NeglectedOrDelinquentProgramServiceDescriptorId" column="NeglectedOrDelinquentProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentNeglectedOrDelinquentProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="NeglectedOrDelinquentProgramServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.NeglectedOrDelinquentProgramServiceDescriptorAggregate.EdFi.NeglectedOrDelinquentProgramServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="NeglectedOrDelinquentProgramServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentParentAssociationAggregate.EdFi.StudentParentAssociationQ" table="StudentParentAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ParentUSI" column="ParentUSI" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="ContactPriority" column="ContactPriority" type="int" />
    <property name="ContactRestrictions" column="ContactRestrictions" type="string" length="250" />
    <property name="EmergencyContactStatus" column="EmergencyContactStatus" type="bool" />
    <property name="LivesWith" column="LivesWith" type="bool" />
    <property name="PrimaryContactStatus" column="PrimaryContactStatus" type="bool" />
    <property name="RelationDescriptorId" column="RelationDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Parent" class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ParentUSI" />
    </many-to-one>
    <many-to-one name="RelationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.RelationDescriptorAggregate.EdFi.RelationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="RelationDescriptorId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentProgramAssociationAggregate.EdFi.StudentProgramAssociationServiceQ" table="StudentProgramAssociationService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ServiceDescriptorAggregate.EdFi.ServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentProgramAttendanceEventAggregate.EdFi.StudentProgramAttendanceEventQ" table="StudentProgramAttendanceEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="ProgramAttendanceDuration" column="ProgramAttendanceDuration" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AttendanceEventCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AttendanceEventCategoryDescriptorAggregate.EdFi.AttendanceEventCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AttendanceEventCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationalEnvironmentDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationalEnvironmentDescriptorAggregate.EdFi.EducationalEnvironmentDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationalEnvironmentDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="Program" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationQ" table="StudentSchoolAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EntryDate" column="EntryDate" type="date" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="CalendarCode" column="CalendarCode" type="string" length="60" />
    <property name="ClassOfSchoolYear" column="ClassOfSchoolYear" type="short" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
    <property name="EmployedWhileEnrolled" column="EmployedWhileEnrolled" type="bool" />
    <property name="EntryGradeLevelDescriptorId" column="EntryGradeLevelDescriptorId" type="int" not-null="true" />
    <property name="EntryGradeLevelReasonDescriptorId" column="EntryGradeLevelReasonDescriptorId" type="int" />
    <property name="EntryTypeDescriptorId" column="EntryTypeDescriptorId" type="int" />
    <property name="ExitWithdrawDate" column="ExitWithdrawDate" type="date" />
    <property name="ExitWithdrawTypeDescriptorId" column="ExitWithdrawTypeDescriptorId" type="int" />
    <property name="FullTimeEquivalency" column="FullTimeEquivalency" type="decimal" />
    <property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int" />
    <property name="GraduationSchoolYear" column="GraduationSchoolYear" type="short" />
    <property name="PrimarySchool" column="PrimarySchool" type="bool" />
    <property name="RepeatGradeIndicator" column="RepeatGradeIndicator" type="bool" />
    <property name="ResidencyStatusDescriptorId" column="ResidencyStatusDescriptorId" type="int" />
    <property name="SchoolChoiceTransfer" column="SchoolChoiceTransfer" type="bool" />
    <property name="SchoolYear" column="SchoolYear" type="short" />
    <property name="TermCompletionIndicator" column="TermCompletionIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Calendar" class="EdFi.Ods.Entities.NHibernate.QueryModels.CalendarAggregate.EdFi.CalendarQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="ClassOfSchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ClassOfSchoolYear" />
    </many-to-one>
    <many-to-one name="EntryGradeLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EntryGradeLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="EntryGradeLevelReasonDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EntryGradeLevelReasonDescriptorAggregate.EdFi.EntryGradeLevelReasonDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EntryGradeLevelReasonDescriptorId" />
    </many-to-one>
    <many-to-one name="EntryTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EntryTypeDescriptorAggregate.EdFi.EntryTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EntryTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="ExitWithdrawTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ExitWithdrawTypeDescriptorAggregate.EdFi.ExitWithdrawTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ExitWithdrawTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="GraduationPlan" class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
    </many-to-one>
    <many-to-one name="ResidencyStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ResidencyStatusDescriptorAggregate.EdFi.ResidencyStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ResidencyStatusDescriptorId" />
    </many-to-one>
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentSchoolAssociationAlternativeGraduationPlans" cascade="none" lazy="true">
      <key>
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationAlternativeGraduationPlanQ" />
    </set>

    <set name="StudentSchoolAssociationEducationPlans" cascade="none" lazy="true">
      <key>
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationEducationPlanQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationAlternativeGraduationPlanQ" table="StudentSchoolAssociationAlternativeGraduationPlan" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AlternativeEducationOrganizationId" column="AlternativeEducationOrganizationId" type="int" />
      <key-property name="AlternativeGraduationPlanTypeDescriptorId" column="AlternativeGraduationPlanTypeDescriptorId" type="int" />
      <key-property name="AlternativeGraduationSchoolYear" column="AlternativeGraduationSchoolYear" type="short" />
      <key-many-to-one name="StudentSchoolAssociation">
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AlternativeGraduationPlan" class="EdFi.Ods.Entities.NHibernate.QueryModels.GraduationPlanAggregate.EdFi.GraduationPlanQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AlternativeEducationOrganizationId" />
        <column name="AlternativeGraduationPlanTypeDescriptorId" />
        <column name="AlternativeGraduationSchoolYear" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationEducationPlanQ" table="StudentSchoolAssociationEducationPlan" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationPlanDescriptorId" column="EducationPlanDescriptorId" type="int" />
      <key-many-to-one name="StudentSchoolAssociation">
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationPlanDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationPlanDescriptorAggregate.EdFi.EducationPlanDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationPlanDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolAttendanceEventAggregate.EdFi.StudentSchoolAttendanceEventQ" table="StudentSchoolAttendanceEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="ArrivalTime" column="ArrivalTime" type="TimeAsTimeSpan" />
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="DepartureTime" column="DepartureTime" type="TimeAsTimeSpan" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="SchoolAttendanceDuration" column="SchoolAttendanceDuration" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AttendanceEventCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AttendanceEventCategoryDescriptorAggregate.EdFi.AttendanceEventCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AttendanceEventCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationalEnvironmentDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationalEnvironmentDescriptorAggregate.EdFi.EducationalEnvironmentDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationalEnvironmentDescriptorId" />
    </many-to-one>
    <many-to-one name="School" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolAggregate.EdFi.SchoolQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="Session" class="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSchoolFoodServiceProgramAssociationAggregate.EdFi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramServiceQ" table="StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolFoodServiceProgramServiceDescriptorId" column="SchoolFoodServiceProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentSchoolFoodServiceProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SchoolFoodServiceProgramServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolFoodServiceProgramServiceDescriptorAggregate.EdFi.SchoolFoodServiceProgramServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolFoodServiceProgramServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationQ" table="StudentSectionAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="AttemptStatusDescriptorId" column="AttemptStatusDescriptorId" type="int" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="HomeroomIndicator" column="HomeroomIndicator" type="bool" />
    <property name="RepeatIdentifierDescriptorId" column="RepeatIdentifierDescriptorId" type="int" />
    <property name="TeacherStudentDataLinkExclusion" column="TeacherStudentDataLinkExclusion" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AttemptStatusDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AttemptStatusDescriptorAggregate.EdFi.AttemptStatusDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AttemptStatusDescriptorId" />
    </many-to-one>
    <many-to-one name="RepeatIdentifierDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.RepeatIdentifierDescriptorAggregate.EdFi.RepeatIdentifierDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="RepeatIdentifierDescriptorId" />
    </many-to-one>
    <many-to-one name="Section" class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
    <set name="Grades" cascade="none" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.GradeAggregate.EdFi.GradeQ" />
    </set>

    <set name="StudentCompetencyObjectiveStudentSectionAssociations" cascade="none" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveStudentSectionAssociationQ" />
    </set>

    <set name="StudentGradebookEntries" cascade="none" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentGradebookEntryAggregate.EdFi.StudentGradebookEntryQ" />
    </set>

    <set name="StudentLearningObjectiveStudentSectionAssociations" cascade="none" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveStudentSectionAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEventQ" table="StudentSectionAttendanceEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="ArrivalTime" column="ArrivalTime" type="TimeAsTimeSpan" />
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="DepartureTime" column="DepartureTime" type="TimeAsTimeSpan" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="SectionAttendanceDuration" column="SectionAttendanceDuration" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="AttendanceEventCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.AttendanceEventCategoryDescriptorAggregate.EdFi.AttendanceEventCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="AttendanceEventCategoryDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationalEnvironmentDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationalEnvironmentDescriptorAggregate.EdFi.EducationalEnvironmentDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationalEnvironmentDescriptorId" />
    </many-to-one>
    <many-to-one name="Section" class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityQ" table="StudentSpecialEducationProgramAssociationDisability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" />
    <property name="DisabilityDiagnosis" column="DisabilityDiagnosis" type="string" length="80" />
    <property name="OrderOfDisability" column="OrderOfDisability" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DisabilityDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisabilityDescriptorAggregate.EdFi.DisabilityDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DisabilityDescriptorId" />
    </many-to-one>
    <many-to-one name="DisabilityDeterminationSourceTypeDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisabilityDeterminationSourceTypeDescriptorAggregate.EdFi.DisabilityDeterminationSourceTypeDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DisabilityDeterminationSourceTypeDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentSpecialEducationProgramAssociationDisabilityDesignations" cascade="none" lazy="true">
      <key>
        <column name="DisabilityDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityDesignationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityDesignationQ" table="StudentSpecialEducationProgramAssociationDisabilityDesignation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociationDisability">
        <column name="DisabilityDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="DisabilityDesignationDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.DisabilityDesignationDescriptorAggregate.EdFi.DisabilityDesignationDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="DisabilityDesignationDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationServiceProviderQ" table="StudentSpecialEducationProgramAssociationServiceProvider" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryProvider" column="PrimaryProvider" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceQ" table="StudentSpecialEducationProgramAssociationSpecialEducationProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SpecialEducationProgramServiceDescriptorId" column="SpecialEducationProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SpecialEducationProgramServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SpecialEducationProgramServiceDescriptorAggregate.EdFi.SpecialEducationProgramServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SpecialEducationProgramServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProviders" cascade="none" lazy="true">
      <key>
        <column name="SpecialEducationProgramServiceDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProviderQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProviderQ" table="StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociationSpecialEducationProgramService">
        <column name="SpecialEducationProgramServiceDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryProvider" column="PrimaryProvider" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationServiceQ" table="StudentTitleIPartAProgramAssociationService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentTitleIPartAProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="ServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.ServiceDescriptorAggregate.EdFi.ServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationTitleIPartAProgramServiceQ" table="StudentTitleIPartAProgramAssociationTitleIPartAProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TitleIPartAProgramServiceDescriptorId" column="TitleIPartAProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentTitleIPartAProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="TitleIPartAProgramServiceDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.TitleIPartAProgramServiceDescriptorAggregate.EdFi.TitleIPartAProgramServiceDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="TitleIPartAProgramServiceDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" table="Survey" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
    <property name="NumberAdministered" column="NumberAdministered" type="int" />
    <property name="SchoolId" column="SchoolId" type="int" />
    <property name="SchoolYear" column="SchoolYear" type="short" not-null="true" />
    <property name="SessionName" column="SessionName" type="string" length="60" />
    <property name="SurveyCategoryDescriptorId" column="SurveyCategoryDescriptorId" type="int" />
    <property name="SurveyTitle" column="SurveyTitle" type="string" length="255" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearType" class="EdFi.Ods.Entities.NHibernate.QueryModels.SchoolYearTypeAggregate.EdFi.SchoolYearTypeQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="Session" class="EdFi.Ods.Entities.NHibernate.QueryModels.SessionAggregate.EdFi.SessionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
    </many-to-one>
    <many-to-one name="SurveyCategoryDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyCategoryDescriptorAggregate.EdFi.SurveyCategoryDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SurveyCategoryDescriptorId" />
    </many-to-one>

    <!-- Collections -->
    <set name="SurveyCourseAssociations" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyCourseAssociationAggregate.EdFi.SurveyCourseAssociationQ" />
    </set>

    <set name="SurveyProgramAssociations" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyProgramAssociationAggregate.EdFi.SurveyProgramAssociationQ" />
    </set>

    <set name="SurveyQuestions" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionAggregate.EdFi.SurveyQuestionQ" />
    </set>

    <set name="SurveyResponses" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseQ" />
    </set>

    <set name="SurveySectionAssociations" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionAssociationAggregate.EdFi.SurveySectionAssociationQ" />
    </set>

    <set name="SurveySections" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionAggregate.EdFi.SurveySectionQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyCourseAssociationAggregate.EdFi.SurveyCourseAssociationQ" table="SurveyCourseAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseCode" column="CourseCode" type="string" length="60" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Course" class="EdFi.Ods.Entities.NHibernate.QueryModels.CourseAggregate.EdFi.CourseQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="Survey" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyProgramAssociationAggregate.EdFi.SurveyProgramAssociationQ" table="SurveyProgramAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Program" class="EdFi.Ods.Entities.NHibernate.QueryModels.ProgramAggregate.EdFi.ProgramQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="Survey" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionAggregate.EdFi.SurveyQuestionQ" table="SurveyQuestion" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="QuestionCode" column="QuestionCode" type="string" length="60" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="QuestionFormDescriptorId" column="QuestionFormDescriptorId" type="int" not-null="true" />
    <property name="QuestionText" column="QuestionText" type="string" length="1024" not-null="true" />
    <property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="QuestionFormDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.QuestionFormDescriptorAggregate.EdFi.QuestionFormDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="QuestionFormDescriptorId" />
    </many-to-one>
    <many-to-one name="Survey" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
    </many-to-one>
    <many-to-one name="SurveySection" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionAggregate.EdFi.SurveySectionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Collections -->
    <set name="SurveyQuestionMatrices" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionAggregate.EdFi.SurveyQuestionMatrixQ" />
    </set>

    <set name="SurveyQuestionResponseChoices" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionAggregate.EdFi.SurveyQuestionResponseChoiceQ" />
    </set>

    <set name="SurveyQuestionResponses" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionAggregate.EdFi.SurveyQuestionMatrixQ" table="SurveyQuestionMatrix" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MatrixElement" column="MatrixElement" type="string" length="255" />
      <key-many-to-one name="SurveyQuestion">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxRawScore" column="MaxRawScore" type="int" />
    <property name="MinRawScore" column="MinRawScore" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionAggregate.EdFi.SurveyQuestionResponseChoiceQ" table="SurveyQuestionResponseChoice" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SortOrder" column="SortOrder" type="int" />
      <key-many-to-one name="SurveyQuestion">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="NumericValue" column="NumericValue" type="int" />
    <property name="TextValue" column="TextValue" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseQ" table="SurveyQuestionResponse" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="QuestionCode" column="QuestionCode" type="string" length="60" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="Comment" column="Comment" type="string" length="1024" />
    <property name="NoResponse" column="NoResponse" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SurveyQuestion" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionAggregate.EdFi.SurveyQuestionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
    </many-to-one>
    <many-to-one name="SurveyResponse" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
    </many-to-one>

    <!-- Collections -->
    <set name="SurveyQuestionResponseSurveyQuestionMatrixElementResponses" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseSurveyQuestionMatrixElementResponseQ" />
    </set>

    <set name="SurveyQuestionResponseValues" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseValueQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseSurveyQuestionMatrixElementResponseQ" table="SurveyQuestionResponseSurveyQuestionMatrixElementResponse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MatrixElement" column="MatrixElement" type="string" length="255" />
      <key-many-to-one name="SurveyQuestionResponse">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxNumericResponse" column="MaxNumericResponse" type="int" />
    <property name="MinNumericResponse" column="MinNumericResponse" type="int" />
    <property name="NoResponse" column="NoResponse" type="bool" />
    <property name="NumericResponse" column="NumericResponse" type="int" />
    <property name="TextResponse" column="TextResponse" type="string" length="2048" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseValueQ" table="SurveyQuestionResponseValue" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SurveyQuestionResponseValueIdentifier" column="SurveyQuestionResponseValueIdentifier" type="int" />
      <key-many-to-one name="SurveyQuestionResponse">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="NumericResponse" column="NumericResponse" type="int" />
    <property name="TextResponse" column="TextResponse" type="string" length="2048" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseQ" table="SurveyResponse" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
    <property name="FullName" column="FullName" type="string" length="80" />
    <property name="Location" column="Location" type="string" length="75" />
    <property name="ParentUSI" column="ParentUSI" type="int" />
    <property name="ResponseDate" column="ResponseDate" type="date" not-null="true" />
    <property name="ResponseTime" column="ResponseTime" type="int" />
    <property name="StaffUSI" column="StaffUSI" type="int" />
    <property name="StudentUSI" column="StudentUSI" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Parent" class="EdFi.Ods.Entities.NHibernate.QueryModels.ParentAggregate.EdFi.ParentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="ParentUSI" />
    </many-to-one>
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="Student" class="EdFi.Ods.Entities.NHibernate.QueryModels.StudentAggregate.EdFi.StudentQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StudentUSI" />
    </many-to-one>
    <many-to-one name="Survey" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Collections -->
    <set name="SurveyQuestionResponses" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseQ" />
    </set>

    <set name="SurveyResponseEducationOrganizationTargetAssociations" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveyResponseEducationOrganizationTargetAssociationQ" />
    </set>

    <set name="SurveyResponseStaffTargetAssociations" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseStaffTargetAssociationAggregate.EdFi.SurveyResponseStaffTargetAssociationQ" />
    </set>

    <set name="SurveyResponseSurveyLevels" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseSurveyLevelQ" />
    </set>

    <set name="SurveySectionResponses" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseAggregate.EdFi.SurveySectionResponseQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseSurveyLevelQ" table="SurveyResponseSurveyLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SurveyLevelDescriptorId" column="SurveyLevelDescriptorId" type="int" />
      <key-many-to-one name="SurveyResponse">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SurveyLevelDescriptor" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyLevelDescriptorAggregate.EdFi.SurveyLevelDescriptorQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="SurveyLevelDescriptorId" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveyResponseEducationOrganizationTargetAssociationQ" table="SurveyResponseEducationOrganizationTargetAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SurveyResponse" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseStaffTargetAssociationAggregate.EdFi.SurveyResponseStaffTargetAssociationQ" table="SurveyResponseStaffTargetAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="SurveyResponse" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionAggregate.EdFi.SurveySectionQ" table="SurveySection" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Survey" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Collections -->
    <set name="SurveyQuestions" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveySectionTitle" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyQuestionAggregate.EdFi.SurveyQuestionQ" />
    </set>

    <set name="SurveySectionResponses" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveySectionTitle" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseAggregate.EdFi.SurveySectionResponseQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionAssociationAggregate.EdFi.SurveySectionAssociationQ" table="SurveySectionAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Section" class="EdFi.Ods.Entities.NHibernate.QueryModels.SectionAggregate.EdFi.SectionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
    </many-to-one>
    <many-to-one name="Survey" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyAggregate.EdFi.SurveyQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseAggregate.EdFi.SurveySectionResponseQ" table="SurveySectionResponse" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    <property name="SectionRating" column="SectionRating" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="SurveyResponse" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveyResponseAggregate.EdFi.SurveyResponseQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
    </many-to-one>
    <many-to-one name="SurveySection" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionAggregate.EdFi.SurveySectionQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Collections -->
    <set name="SurveySectionResponseEducationOrganizationTargetAssociations" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
        <column name="SurveySectionTitle" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveySectionResponseEducationOrganizationTargetAssociationQ" />
    </set>

    <set name="SurveySectionResponseStaffTargetAssociations" cascade="none" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
        <column name="SurveySectionTitle" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseStaffTargetAssociationAggregate.EdFi.SurveySectionResponseStaffTargetAssociationQ" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveySectionResponseEducationOrganizationTargetAssociationQ" table="SurveySectionResponseEducationOrganizationTargetAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="EducationOrganization" class="EdFi.Ods.Entities.NHibernate.QueryModels.EducationOrganizationAggregate.EdFi.EducationOrganizationQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SurveySectionResponse" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseAggregate.EdFi.SurveySectionResponseQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
        <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseStaffTargetAssociationAggregate.EdFi.SurveySectionResponseStaffTargetAssociationQ" table="SurveySectionResponseStaffTargetAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <!-- Readonly property to surface the discriminator value -->
    <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />

    <!-- Aggregate references -->

    <!-- Back references -->
    <many-to-one name="Staff" class="EdFi.Ods.Entities.NHibernate.QueryModels.StaffAggregate.EdFi.StaffQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="SurveySectionResponse" class="EdFi.Ods.Entities.NHibernate.QueryModels.SurveySectionResponseAggregate.EdFi.SurveySectionResponseQ" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
        <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Collections -->
</class>


</hibernate-mapping>

