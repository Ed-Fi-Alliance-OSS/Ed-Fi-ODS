<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" assembly="EdFi.Ods.Standard" namespace="EdFi.Ods.Entities.NHibernate" default-access="property" auto-import="false">

    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AcademicWeekAggregate.EdFi.AcademicWeekReferenceData" table="AcademicWeek" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="WeekIdentifier" column="WeekIdentifier" type="string"  length="80"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AcademicWeekAggregate.EdFi.AcademicWeek" table="AcademicWeek" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="WeekIdentifier" column="WeekIdentifier" type="string" length="80" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" not-null="true" />
    <property name="TotalInstructionalDays" column="TotalInstructionalDays" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AccountAggregate.EdFi.AccountReferenceData" table="Account" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AccountAggregate.EdFi.Account" table="Account" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AccountName" column="AccountName" type="string" length="100" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AccountAccountCodes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AccountAggregate.EdFi.AccountAccountCode" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AccountAggregate.EdFi.AccountAccountCode" table="AccountAccountCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountClassificationDescriptorId" column="AccountClassificationDescriptorId" type="int" />
      <key-property name="AccountCodeNumber" column="AccountCodeNumber" type="string" length="50" />
      <key-many-to-one name="Account">
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AccountCodeReferenceData" class="EdFi.Ods.Entities.NHibernate.AccountCodeAggregate.EdFi.AccountCodeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AccountClassificationDescriptorId" />
      <column name="AccountCodeNumber" />
      <column name="EducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AccountabilityRatingAggregate.EdFi.AccountabilityRatingReferenceData" table="AccountabilityRating" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="RatingTitle" column="RatingTitle" type="string"  length="60"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AccountabilityRatingAggregate.EdFi.AccountabilityRating" table="AccountabilityRating" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="RatingTitle" column="RatingTitle" type="string" length="60" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="Rating" column="Rating" type="string" length="35" not-null="true" />
    <property name="RatingDate" column="RatingDate" type="date" />
    <property name="RatingOrganization" column="RatingOrganization" type="string" length="35" />
    <property name="RatingProgram" column="RatingProgram" type="string" length="30" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AccountCodeAggregate.EdFi.AccountCodeReferenceData" table="AccountCode" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountClassificationDescriptorId" column="AccountClassificationDescriptorId" type="int"  />
            <key-property name="AccountCodeNumber" column="AccountCodeNumber" type="string"  length="50"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AccountCodeAggregate.EdFi.AccountCode" table="AccountCode" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountClassificationDescriptorId" column="AccountClassificationDescriptorId" type="int" />
      <key-property name="AccountCodeNumber" column="AccountCodeNumber" type="string" length="50" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AccountCodeDescription" column="AccountCodeDescription" type="string" length="1024" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ActualAggregate.EdFi.ActualReferenceData" table="Actual" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="AsOfDate" column="AsOfDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ActualAggregate.EdFi.Actual" table="Actual" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AmountToDate" column="AmountToDate" type="decimal" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="AccountReferenceData" class="EdFi.Ods.Entities.NHibernate.AccountAggregate.EdFi.AccountReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AccountIdentifier" />
      <column name="EducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" table="Assessment" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="60"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.Assessment" table="Assessment" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AdaptiveAssessment" column="AdaptiveAssessment" type="bool" />
    <property name="AssessmentCategoryDescriptorId" column="AssessmentCategoryDescriptorId" type="int" />
    <property name="AssessmentFamily" column="AssessmentFamily" type="string" length="60" />
    <property name="AssessmentForm" column="AssessmentForm" type="string" length="60" />
    <property name="AssessmentTitle" column="AssessmentTitle" type="string" length="100" not-null="true" />
    <property name="AssessmentVersion" column="AssessmentVersion" type="int" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />
    <property name="RevisionDate" column="RevisionDate" type="date" />

    <!-- One-to-one child mappings -->
    <set name="AssessmentContentStandard" access="EdFi.Ods.Api.NHibernate.Architecture.EmbeddedObjectPropertyAccessor, EdFi.Ods.Api" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentContentStandard" />
    </set>

    <!-- One-to-one child mappings -->
    <set name="AssessmentPeriod" access="EdFi.Ods.Api.NHibernate.Architecture.EmbeddedObjectPropertyAccessor, EdFi.Ods.Api" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPeriod" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AssessmentAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentAcademicSubject" />
    </set>

    <set name="AssessmentAssessedGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentAssessedGradeLevel" />
    </set>

    <set name="AssessmentIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentIdentificationCode" />
    </set>

    <set name="AssessmentLanguages" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentLanguage" />
    </set>

    <set name="AssessmentPerformanceLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPerformanceLevel" />
    </set>

    <set name="AssessmentPlatformTypes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPlatformType" />
    </set>

    <set name="AssessmentPrograms" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentProgram" />
    </set>

    <set name="AssessmentScores" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentScore" />
    </set>

    <set name="AssessmentSections" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentSection" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentAcademicSubject" table="AssessmentAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentAssessedGradeLevel" table="AssessmentAssessedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentContentStandard" table="AssessmentContentStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="MandatingEducationOrganizationId" column="MandatingEducationOrganizationId" type="int" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Title" column="Title" type="string" length="75" not-null="true" />
    <property name="URI" column="URI" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="50" />

    <!-- Aggregate references -->
    <many-to-one name="MandatingEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="MandatingEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AssessmentContentStandardAuthors" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentContentStandardAuthor" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentContentStandardAuthor" table="AssessmentContentStandardAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="100" />
      <key-many-to-one name="AssessmentContentStandard">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentIdentificationCode" table="AssessmentIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentificationSystemDescriptorId" column="AssessmentIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentLanguage" table="AssessmentLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPerformanceLevel" table="AssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPeriod" table="AssessmentPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssessmentPeriodDescriptorId" column="AssessmentPeriodDescriptorId" type="int" not-null="true" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPlatformType" table="AssessmentPlatformType" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PlatformTypeDescriptorId" column="PlatformTypeDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentProgram" table="AssessmentProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentScore" table="AssessmentScore" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentSection" table="AssessmentSection" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemReferenceData" table="AssessmentItem" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="60"  />
            <key-property name="IdentificationCode" column="IdentificationCode" type="string"  length="60"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItem" table="AssessmentItem" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AssessmentItemCategoryDescriptorId" column="AssessmentItemCategoryDescriptorId" type="int" />
    <property name="AssessmentItemURI" column="AssessmentItemURI" type="string" length="255" />
    <property name="CorrectResponse" column="CorrectResponse" type="string" length="20" />
    <property name="ExpectedTimeAssessed" column="ExpectedTimeAssessed" type="string" length="30" />
    <property name="ItemText" column="ItemText" type="string" length="1024" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AssessmentItemLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemLearningStandard" />
    </set>

    <set name="AssessmentItemPossibleResponses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemPossibleResponse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemLearningStandard" table="AssessmentItemLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="AssessmentItem">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemPossibleResponse" table="AssessmentItemPossibleResponse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ResponseValue" column="ResponseValue" type="string" length="60" />
      <key-many-to-one name="AssessmentItem">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CorrectResponse" column="CorrectResponse" type="bool" />
    <property name="ResponseDescription" column="ResponseDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleReferenceData" table="BellSchedule" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BellScheduleName" column="BellScheduleName" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellSchedule" table="BellSchedule" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BellScheduleName" column="BellScheduleName" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AlternateDayName" column="AlternateDayName" type="string" length="20" />
    <property name="EndTime" column="EndTime" type="TimeAsTimeSpan" />
    <property name="StartTime" column="StartTime" type="TimeAsTimeSpan" />
    <property name="TotalInstructionalTime" column="TotalInstructionalTime" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="BellScheduleClassPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleClassPeriod" />
    </set>

    <set name="BellScheduleDates" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleDate" />
    </set>

    <set name="BellScheduleGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleClassPeriod" table="BellScheduleClassPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassPeriodName" column="ClassPeriodName" type="string" length="60" />
      <key-many-to-one name="BellSchedule">
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ClassPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ClassPeriodName" />
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleDate" table="BellScheduleDate" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Date" column="Date" type="date" />
      <key-many-to-one name="BellSchedule">
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleGradeLevel" table="BellScheduleGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="BellSchedule">
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.BudgetAggregate.EdFi.BudgetReferenceData" table="Budget" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="AsOfDate" column="AsOfDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BudgetAggregate.EdFi.Budget" table="Budget" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="Amount" column="Amount" type="decimal" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="AccountReferenceData" class="EdFi.Ods.Entities.NHibernate.AccountAggregate.EdFi.AccountReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AccountIdentifier" />
      <column name="EducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarReferenceData" table="Calendar" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CalendarCode" column="CalendarCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.Calendar" table="Calendar" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarCode" column="CalendarCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CalendarTypeDescriptorId" column="CalendarTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CalendarGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarGradeLevel" table="CalendarGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Calendar">
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CalendarDateAggregate.EdFi.CalendarDateReferenceData" table="CalendarDate" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CalendarCode" column="CalendarCode" type="string"  length="60"  />
            <key-property name="Date" column="Date" type="date"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CalendarDateAggregate.EdFi.CalendarDate" table="CalendarDate" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarCode" column="CalendarCode" type="string" length="60" />
      <key-property name="Date" column="Date" type="date" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="CalendarReferenceData" class="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CalendarCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CalendarDateCalendarEvents" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CalendarCode" />
        <column name="Date" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CalendarDateAggregate.EdFi.CalendarDateCalendarEvent" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CalendarDateAggregate.EdFi.CalendarDateCalendarEvent" table="CalendarDateCalendarEvent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarEventDescriptorId" column="CalendarEventDescriptorId" type="int" />
      <key-many-to-one name="CalendarDate">
        <column name="CalendarCode" />
        <column name="Date" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodReferenceData" table="ClassPeriod" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ClassPeriodName" column="ClassPeriodName" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriod" table="ClassPeriod" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassPeriodName" column="ClassPeriodName" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="OfficialAttendancePeriod" column="OfficialAttendancePeriod" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ClassPeriodMeetingTimes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ClassPeriodName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodMeetingTime" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodMeetingTime" table="ClassPeriodMeetingTime" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EndTime" column="EndTime" type="TimeAsTimeSpan" />
      <key-property name="StartTime" column="StartTime" type="TimeAsTimeSpan" />
      <key-many-to-one name="ClassPeriod">
        <column name="ClassPeriodName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortReferenceData" table="Cohort" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CohortIdentifier" column="CohortIdentifier" type="string"  length="20"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.Cohort" table="Cohort" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CohortIdentifier" column="CohortIdentifier" type="string" length="20" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="CohortDescription" column="CohortDescription" type="string" length="1024" />
    <property name="CohortScopeDescriptorId" column="CohortScopeDescriptorId" type="int" />
    <property name="CohortTypeDescriptorId" column="CohortTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CohortPrograms" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortProgram" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortProgram" table="CohortProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="Cohort">
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CommunityProviderLicenseAggregate.EdFi.CommunityProviderLicenseReferenceData" table="CommunityProviderLicense" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CommunityProviderId" column="CommunityProviderId" type="int"  />
            <key-property name="LicenseIdentifier" column="LicenseIdentifier" type="string"  length="20"  />
            <key-property name="LicensingOrganization" column="LicensingOrganization" type="string"  length="75"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CommunityProviderLicenseAggregate.EdFi.CommunityProviderLicense" table="CommunityProviderLicense" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CommunityProviderId" column="CommunityProviderId" type="int" />
      <key-property name="LicenseIdentifier" column="LicenseIdentifier" type="string" length="20" />
      <key-property name="LicensingOrganization" column="LicensingOrganization" type="string" length="75" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AuthorizedFacilityCapacity" column="AuthorizedFacilityCapacity" type="int" />
    <property name="LicenseEffectiveDate" column="LicenseEffectiveDate" type="date" not-null="true" />
    <property name="LicenseExpirationDate" column="LicenseExpirationDate" type="date" />
    <property name="LicenseIssueDate" column="LicenseIssueDate" type="date" />
    <property name="LicenseStatusDescriptorId" column="LicenseStatusDescriptorId" type="int" />
    <property name="LicenseTypeDescriptorId" column="LicenseTypeDescriptorId" type="int" not-null="true" />
    <property name="OldestAgeAuthorizedToServe" column="OldestAgeAuthorizedToServe" type="int" />
    <property name="YoungestAgeAuthorizedToServe" column="YoungestAgeAuthorizedToServe" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CommunityProviderReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CommunityProviderId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CompetencyObjectiveAggregate.EdFi.CompetencyObjectiveReferenceData" table="CompetencyObjective" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="Objective" column="Objective" type="string"  length="60"  />
            <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CompetencyObjectiveAggregate.EdFi.CompetencyObjective" table="CompetencyObjective" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="Objective" column="Objective" type="string" length="60" />
      <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CompetencyObjectiveId" column="CompetencyObjectiveId" type="string" length="60" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="SuccessCriteria" column="SuccessCriteria" type="string" length="150" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ContractedStaffAggregate.EdFi.ContractedStaffReferenceData" table="ContractedStaff" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="AsOfDate" column="AsOfDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContractedStaffAggregate.EdFi.ContractedStaff" table="ContractedStaff" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AmountToDate" column="AmountToDate" type="decimal" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="AccountReferenceData" class="EdFi.Ods.Entities.NHibernate.AccountAggregate.EdFi.AccountReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AccountIdentifier" />
      <column name="EducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseReferenceData" table="Course" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CourseCode" column="CourseCode" type="string"  length="60"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.Course" table="Course" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseCode" column="CourseCode" type="string" length="60" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="CareerPathwayDescriptorId" column="CareerPathwayDescriptorId" type="int" />
    <property name="CourseDefinedByDescriptorId" column="CourseDefinedByDescriptorId" type="int" />
    <property name="CourseDescription" column="CourseDescription" type="string" length="1024" />
    <property name="CourseGPAApplicabilityDescriptorId" column="CourseGPAApplicabilityDescriptorId" type="int" />
    <property name="CourseTitle" column="CourseTitle" type="string" length="60" not-null="true" />
    <property name="DateCourseAdopted" column="DateCourseAdopted" type="date" />
    <property name="HighSchoolCourseRequirement" column="HighSchoolCourseRequirement" type="bool" />
    <property name="MaxCompletionsForCredit" column="MaxCompletionsForCredit" type="int" />
    <property name="MaximumAvailableCreditConversion" column="MaximumAvailableCreditConversion" type="decimal" />
    <property name="MaximumAvailableCredits" column="MaximumAvailableCredits" type="decimal" />
    <property name="MaximumAvailableCreditTypeDescriptorId" column="MaximumAvailableCreditTypeDescriptorId" type="int" />
    <property name="MinimumAvailableCreditConversion" column="MinimumAvailableCreditConversion" type="decimal" />
    <property name="MinimumAvailableCredits" column="MinimumAvailableCredits" type="decimal" />
    <property name="MinimumAvailableCreditTypeDescriptorId" column="MinimumAvailableCreditTypeDescriptorId" type="int" />
    <property name="NumberOfParts" column="NumberOfParts" type="int" not-null="true" />
    <property name="TimeRequiredForCompletion" column="TimeRequiredForCompletion" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CourseCompetencyLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseCompetencyLevel" />
    </set>

    <set name="CourseIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseIdentificationCode" />
    </set>

    <set name="CourseLearningObjectives" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseLearningObjective" />
    </set>

    <set name="CourseLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseLearningStandard" />
    </set>

    <set name="CourseLevelCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseLevelCharacteristic" />
    </set>

    <set name="CourseOfferedGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseOfferedGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseCompetencyLevel" table="CourseCompetencyLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseIdentificationCode" table="CourseIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseIdentificationSystemDescriptorId" column="CourseIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="CourseCatalogURL" column="CourseCatalogURL" type="string" length="255" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseLearningObjective" table="CourseLearningObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningObjectiveId" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseLearningStandard" table="CourseLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseLevelCharacteristic" table="CourseLevelCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseOfferedGradeLevel" table="CourseOfferedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingReferenceData" table="CourseOffering" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOffering" table="CourseOffering" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CourseCode" column="CourseCode" type="string" length="60" not-null="true" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" />
    <property name="InstructionalTimePlanned" column="InstructionalTimePlanned" type="int" />
    <property name="LocalCourseTitle" column="LocalCourseTitle" type="string" length="60" />

    <!-- Aggregate references -->
    <many-to-one name="CourseReferenceData" class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CourseCode" />
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SessionReferenceData" class="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CourseOfferingCourseLevelCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingCourseLevelCharacteristic" />
    </set>

    <set name="CourseOfferingCurriculumUseds" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingCurriculumUsed" />
    </set>

    <set name="CourseOfferingOfferedGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingOfferedGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingCourseLevelCharacteristic" table="CourseOfferingCourseLevelCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="CourseOffering">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingCurriculumUsed" table="CourseOfferingCurriculumUsed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CurriculumUsedDescriptorId" column="CurriculumUsedDescriptorId" type="int" />
      <key-many-to-one name="CourseOffering">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingOfferedGradeLevel" table="CourseOfferingOfferedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="CourseOffering">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptReferenceData" table="CourseTranscript" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CourseAttemptResultDescriptorId" column="CourseAttemptResultDescriptorId" type="int"  />
            <key-property name="CourseCode" column="CourseCode" type="string"  length="60"  />
            <key-property name="CourseEducationOrganizationId" column="CourseEducationOrganizationId" type="int"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscript" table="CourseTranscript" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseAttemptResultDescriptorId" column="CourseAttemptResultDescriptorId" type="int" />
      <key-property name="CourseCode" column="CourseCode" type="string" length="60" />
      <key-property name="CourseEducationOrganizationId" column="CourseEducationOrganizationId" type="int" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AlternativeCourseCode" column="AlternativeCourseCode" type="string" length="60" />
    <property name="AlternativeCourseTitle" column="AlternativeCourseTitle" type="string" length="60" />
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="AttemptedCreditConversion" column="AttemptedCreditConversion" type="decimal" />
    <property name="AttemptedCredits" column="AttemptedCredits" type="decimal" />
    <property name="AttemptedCreditTypeDescriptorId" column="AttemptedCreditTypeDescriptorId" type="int" />
    <property name="CourseCatalogURL" column="CourseCatalogURL" type="string" length="255" />
    <property name="CourseRepeatCodeDescriptorId" column="CourseRepeatCodeDescriptorId" type="int" />
    <property name="CourseTitle" column="CourseTitle" type="string" length="60" />
    <property name="EarnedCreditConversion" column="EarnedCreditConversion" type="decimal" />
    <property name="EarnedCredits" column="EarnedCredits" type="decimal" not-null="true" />
    <property name="EarnedCreditTypeDescriptorId" column="EarnedCreditTypeDescriptorId" type="int" />
    <property name="ExternalEducationOrganizationId" column="ExternalEducationOrganizationId" type="int" />
    <property name="FinalLetterGradeEarned" column="FinalLetterGradeEarned" type="string" length="20" />
    <property name="FinalNumericGradeEarned" column="FinalNumericGradeEarned" type="decimal" />
    <property name="MethodCreditEarnedDescriptorId" column="MethodCreditEarnedDescriptorId" type="int" />
    <property name="WhenTakenGradeLevelDescriptorId" column="WhenTakenGradeLevelDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CourseReferenceData" class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CourseCode" />
      <column name="CourseEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ExternalEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ExternalEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentAcademicRecordReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="SchoolYear" />
      <column name="StudentUSI" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CourseTranscriptAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptAcademicSubject" />
    </set>

    <set name="CourseTranscriptAlternativeCourseIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptAlternativeCourseIdentificationCode" />
    </set>

    <set name="CourseTranscriptCreditCategories" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptCreditCategory" />
    </set>

    <set name="CourseTranscriptEarnedAdditionalCredits" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptEarnedAdditionalCredits" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptAcademicSubject" table="CourseTranscriptAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptAlternativeCourseIdentificationCode" table="CourseTranscriptAlternativeCourseIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseIdentificationSystemDescriptorId" column="CourseIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="CourseCatalogURL" column="CourseCatalogURL" type="string" length="255" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptCreditCategory" table="CourseTranscriptCreditCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CreditCategoryDescriptorId" column="CreditCategoryDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptEarnedAdditionalCredits" table="CourseTranscriptEarnedAdditionalCredits" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AdditionalCreditTypeDescriptorId" column="AdditionalCreditTypeDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Credits" column="Credits" type="decimal" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialReferenceData" table="Credential" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CredentialIdentifier" column="CredentialIdentifier" type="string"  length="60"  />
            <key-property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.Credential" table="Credential" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="60" />
      <key-property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CredentialFieldDescriptorId" column="CredentialFieldDescriptorId" type="int" not-null="true" />
    <property name="CredentialTypeDescriptorId" column="CredentialTypeDescriptorId" type="int" not-null="true" />
    <property name="EffectiveDate" column="EffectiveDate" type="date" />
    <property name="ExpirationDate" column="ExpirationDate" type="date" />
    <property name="IssuanceDate" column="IssuanceDate" type="date" not-null="true" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="TeachingCredentialBasisDescriptorId" column="TeachingCredentialBasisDescriptorId" type="int" />
    <property name="TeachingCredentialDescriptorId" column="TeachingCredentialDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="CredentialAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialAcademicSubject" />
    </set>

    <set name="CredentialEndorsements" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialEndorsement" />
    </set>

    <set name="CredentialGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialAcademicSubject" table="CredentialAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="Credential">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialEndorsement" table="CredentialEndorsement" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialEndorsementX" column="CredentialEndorsement" type="string" length="255" />
      <key-many-to-one name="Credential">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialGradeLevel" table="CredentialGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Credential">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DescriptorAggregate.EdFi.Descriptor" table="Descriptor" lazy="false" abstract="true">
    <id name="DescriptorId" column="DescriptorId" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CodeValue" column="CodeValue" type="string" length="50" not-null="true" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="EffectiveBeginDate" column="EffectiveBeginDate" type="date" />
    <property name="EffectiveEndDate" column="EffectiveEndDate" type="date" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="PriorDescriptorId" column="PriorDescriptorId" type="int" />
    <property name="ShortDescription" column="ShortDescription" type="string" length="75" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <!-- Derived classes -->
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AbsenceEventCategoryDescriptorAggregate.EdFi.AbsenceEventCategoryDescriptor" table="AbsenceEventCategoryDescriptor" lazy="false">
          <key>
            <column name="AbsenceEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AbsenceEventCategoryDescriptorId" column="AbsenceEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AcademicHonorCategoryDescriptorAggregate.EdFi.AcademicHonorCategoryDescriptor" table="AcademicHonorCategoryDescriptor" lazy="false">
          <key>
            <column name="AcademicHonorCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AcademicHonorCategoryDescriptorId" column="AcademicHonorCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptor" table="AcademicSubjectDescriptor" lazy="false">
          <key>
            <column name="AcademicSubjectDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AccommodationDescriptorAggregate.EdFi.AccommodationDescriptor" table="AccommodationDescriptor" lazy="false">
          <key>
            <column name="AccommodationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AccommodationDescriptorId" column="AccommodationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AccountClassificationDescriptorAggregate.EdFi.AccountClassificationDescriptor" table="AccountClassificationDescriptor" lazy="false">
          <key>
            <column name="AccountClassificationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AccountClassificationDescriptorId" column="AccountClassificationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AchievementCategoryDescriptorAggregate.EdFi.AchievementCategoryDescriptor" table="AchievementCategoryDescriptor" lazy="false">
          <key>
            <column name="AchievementCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AdditionalCreditTypeDescriptorAggregate.EdFi.AdditionalCreditTypeDescriptor" table="AdditionalCreditTypeDescriptor" lazy="false">
          <key>
            <column name="AdditionalCreditTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AdditionalCreditTypeDescriptorId" column="AdditionalCreditTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptor" table="AddressTypeDescriptor" lazy="false">
          <key>
            <column name="AddressTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AdministrationEnvironmentDescriptorAggregate.EdFi.AdministrationEnvironmentDescriptor" table="AdministrationEnvironmentDescriptor" lazy="false">
          <key>
            <column name="AdministrationEnvironmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AdministrationEnvironmentDescriptorId" column="AdministrationEnvironmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AdministrativeFundingControlDescriptorAggregate.EdFi.AdministrativeFundingControlDescriptor" table="AdministrativeFundingControlDescriptor" lazy="false">
          <key>
            <column name="AdministrativeFundingControlDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AdministrativeFundingControlDescriptorId" column="AdministrativeFundingControlDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AssessmentCategoryDescriptorAggregate.EdFi.AssessmentCategoryDescriptor" table="AssessmentCategoryDescriptor" lazy="false">
          <key>
            <column name="AssessmentCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentCategoryDescriptorId" column="AssessmentCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AssessmentIdentificationSystemDescriptorAggregate.EdFi.AssessmentIdentificationSystemDescriptor" table="AssessmentIdentificationSystemDescriptor" lazy="false">
          <key>
            <column name="AssessmentIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentIdentificationSystemDescriptorId" column="AssessmentIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AssessmentItemCategoryDescriptorAggregate.EdFi.AssessmentItemCategoryDescriptor" table="AssessmentItemCategoryDescriptor" lazy="false">
          <key>
            <column name="AssessmentItemCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentItemCategoryDescriptorId" column="AssessmentItemCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AssessmentItemResultDescriptorAggregate.EdFi.AssessmentItemResultDescriptor" table="AssessmentItemResultDescriptor" lazy="false">
          <key>
            <column name="AssessmentItemResultDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentItemResultDescriptorId" column="AssessmentItemResultDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AssessmentPeriodDescriptorAggregate.EdFi.AssessmentPeriodDescriptor" table="AssessmentPeriodDescriptor" lazy="false">
          <key>
            <column name="AssessmentPeriodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentPeriodDescriptorId" column="AssessmentPeriodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptor" table="AssessmentReportingMethodDescriptor" lazy="false">
          <key>
            <column name="AssessmentReportingMethodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AttemptStatusDescriptorAggregate.EdFi.AttemptStatusDescriptor" table="AttemptStatusDescriptor" lazy="false">
          <key>
            <column name="AttemptStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AttemptStatusDescriptorId" column="AttemptStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.AttendanceEventCategoryDescriptorAggregate.EdFi.AttendanceEventCategoryDescriptor" table="AttendanceEventCategoryDescriptor" lazy="false">
          <key>
            <column name="AttendanceEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.BehaviorDescriptorAggregate.EdFi.BehaviorDescriptor" table="BehaviorDescriptor" lazy="false">
          <key>
            <column name="BehaviorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CalendarEventDescriptorAggregate.EdFi.CalendarEventDescriptor" table="CalendarEventDescriptor" lazy="false">
          <key>
            <column name="CalendarEventDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CalendarEventDescriptorId" column="CalendarEventDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CalendarTypeDescriptorAggregate.EdFi.CalendarTypeDescriptor" table="CalendarTypeDescriptor" lazy="false">
          <key>
            <column name="CalendarTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CalendarTypeDescriptorId" column="CalendarTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CareerPathwayDescriptorAggregate.EdFi.CareerPathwayDescriptor" table="CareerPathwayDescriptor" lazy="false">
          <key>
            <column name="CareerPathwayDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CareerPathwayDescriptorId" column="CareerPathwayDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CharterApprovalAgencyTypeDescriptorAggregate.EdFi.CharterApprovalAgencyTypeDescriptor" table="CharterApprovalAgencyTypeDescriptor" lazy="false">
          <key>
            <column name="CharterApprovalAgencyTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CharterApprovalAgencyTypeDescriptorId" column="CharterApprovalAgencyTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CharterStatusDescriptorAggregate.EdFi.CharterStatusDescriptor" table="CharterStatusDescriptor" lazy="false">
          <key>
            <column name="CharterStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CharterStatusDescriptorId" column="CharterStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CitizenshipStatusDescriptorAggregate.EdFi.CitizenshipStatusDescriptor" table="CitizenshipStatusDescriptor" lazy="false">
          <key>
            <column name="CitizenshipStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ClassroomPositionDescriptorAggregate.EdFi.ClassroomPositionDescriptor" table="ClassroomPositionDescriptor" lazy="false">
          <key>
            <column name="ClassroomPositionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ClassroomPositionDescriptorId" column="ClassroomPositionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CohortScopeDescriptorAggregate.EdFi.CohortScopeDescriptor" table="CohortScopeDescriptor" lazy="false">
          <key>
            <column name="CohortScopeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CohortScopeDescriptorId" column="CohortScopeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CohortTypeDescriptorAggregate.EdFi.CohortTypeDescriptor" table="CohortTypeDescriptor" lazy="false">
          <key>
            <column name="CohortTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CohortTypeDescriptorId" column="CohortTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CohortYearTypeDescriptorAggregate.EdFi.CohortYearTypeDescriptor" table="CohortYearTypeDescriptor" lazy="false">
          <key>
            <column name="CohortYearTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CohortYearTypeDescriptorId" column="CohortYearTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CompetencyLevelDescriptorAggregate.EdFi.CompetencyLevelDescriptor" table="CompetencyLevelDescriptor" lazy="false">
          <key>
            <column name="CompetencyLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ContactTypeDescriptorAggregate.EdFi.ContactTypeDescriptor" table="ContactTypeDescriptor" lazy="false">
          <key>
            <column name="ContactTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ContactTypeDescriptorId" column="ContactTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ContentClassDescriptorAggregate.EdFi.ContentClassDescriptor" table="ContentClassDescriptor" lazy="false">
          <key>
            <column name="ContentClassDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ContentClassDescriptorId" column="ContentClassDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ContinuationOfServicesReasonDescriptorAggregate.EdFi.ContinuationOfServicesReasonDescriptor" table="ContinuationOfServicesReasonDescriptor" lazy="false">
          <key>
            <column name="ContinuationOfServicesReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ContinuationOfServicesReasonDescriptorId" column="ContinuationOfServicesReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CostRateDescriptorAggregate.EdFi.CostRateDescriptor" table="CostRateDescriptor" lazy="false">
          <key>
            <column name="CostRateDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CostRateDescriptorId" column="CostRateDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CountryDescriptorAggregate.EdFi.CountryDescriptor" table="CountryDescriptor" lazy="false">
          <key>
            <column name="CountryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CourseAttemptResultDescriptorAggregate.EdFi.CourseAttemptResultDescriptor" table="CourseAttemptResultDescriptor" lazy="false">
          <key>
            <column name="CourseAttemptResultDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseAttemptResultDescriptorId" column="CourseAttemptResultDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CourseDefinedByDescriptorAggregate.EdFi.CourseDefinedByDescriptor" table="CourseDefinedByDescriptor" lazy="false">
          <key>
            <column name="CourseDefinedByDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseDefinedByDescriptorId" column="CourseDefinedByDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CourseGPAApplicabilityDescriptorAggregate.EdFi.CourseGPAApplicabilityDescriptor" table="CourseGPAApplicabilityDescriptor" lazy="false">
          <key>
            <column name="CourseGPAApplicabilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseGPAApplicabilityDescriptorId" column="CourseGPAApplicabilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CourseIdentificationSystemDescriptorAggregate.EdFi.CourseIdentificationSystemDescriptor" table="CourseIdentificationSystemDescriptor" lazy="false">
          <key>
            <column name="CourseIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseIdentificationSystemDescriptorId" column="CourseIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CourseLevelCharacteristicDescriptorAggregate.EdFi.CourseLevelCharacteristicDescriptor" table="CourseLevelCharacteristicDescriptor" lazy="false">
          <key>
            <column name="CourseLevelCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CourseRepeatCodeDescriptorAggregate.EdFi.CourseRepeatCodeDescriptor" table="CourseRepeatCodeDescriptor" lazy="false">
          <key>
            <column name="CourseRepeatCodeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseRepeatCodeDescriptorId" column="CourseRepeatCodeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CredentialFieldDescriptorAggregate.EdFi.CredentialFieldDescriptor" table="CredentialFieldDescriptor" lazy="false">
          <key>
            <column name="CredentialFieldDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CredentialFieldDescriptorId" column="CredentialFieldDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CredentialTypeDescriptorAggregate.EdFi.CredentialTypeDescriptor" table="CredentialTypeDescriptor" lazy="false">
          <key>
            <column name="CredentialTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CredentialTypeDescriptorId" column="CredentialTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CreditCategoryDescriptorAggregate.EdFi.CreditCategoryDescriptor" table="CreditCategoryDescriptor" lazy="false">
          <key>
            <column name="CreditCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CreditCategoryDescriptorId" column="CreditCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptor" table="CreditTypeDescriptor" lazy="false">
          <key>
            <column name="CreditTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CTEProgramServiceDescriptorAggregate.EdFi.CTEProgramServiceDescriptor" table="CTEProgramServiceDescriptor" lazy="false">
          <key>
            <column name="CTEProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CTEProgramServiceDescriptorId" column="CTEProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.CurriculumUsedDescriptorAggregate.EdFi.CurriculumUsedDescriptor" table="CurriculumUsedDescriptor" lazy="false">
          <key>
            <column name="CurriculumUsedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CurriculumUsedDescriptorId" column="CurriculumUsedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.DeliveryMethodDescriptorAggregate.EdFi.DeliveryMethodDescriptor" table="DeliveryMethodDescriptor" lazy="false">
          <key>
            <column name="DeliveryMethodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.DiagnosisDescriptorAggregate.EdFi.DiagnosisDescriptor" table="DiagnosisDescriptor" lazy="false">
          <key>
            <column name="DiagnosisDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.DiplomaLevelDescriptorAggregate.EdFi.DiplomaLevelDescriptor" table="DiplomaLevelDescriptor" lazy="false">
          <key>
            <column name="DiplomaLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DiplomaLevelDescriptorId" column="DiplomaLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.DiplomaTypeDescriptorAggregate.EdFi.DiplomaTypeDescriptor" table="DiplomaTypeDescriptor" lazy="false">
          <key>
            <column name="DiplomaTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DiplomaTypeDescriptorId" column="DiplomaTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.DisabilityDescriptorAggregate.EdFi.DisabilityDescriptor" table="DisabilityDescriptor" lazy="false">
          <key>
            <column name="DisabilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.DisabilityDesignationDescriptorAggregate.EdFi.DisabilityDesignationDescriptor" table="DisabilityDesignationDescriptor" lazy="false">
          <key>
            <column name="DisabilityDesignationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.DisabilityDeterminationSourceTypeDescriptorAggregate.EdFi.DisabilityDeterminationSourceTypeDescriptor" table="DisabilityDeterminationSourceTypeDescriptor" lazy="false">
          <key>
            <column name="DisabilityDeterminationSourceTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.DisciplineActionLengthDifferenceReasonDescriptorAggregate.EdFi.DisciplineActionLengthDifferenceReasonDescriptor" table="DisciplineActionLengthDifferenceReasonDescriptor" lazy="false">
          <key>
            <column name="DisciplineActionLengthDifferenceReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisciplineActionLengthDifferenceReasonDescriptorId" column="DisciplineActionLengthDifferenceReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.DisciplineDescriptorAggregate.EdFi.DisciplineDescriptor" table="DisciplineDescriptor" lazy="false">
          <key>
            <column name="DisciplineDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisciplineDescriptorId" column="DisciplineDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentParticipationCodeDescriptorAggregate.EdFi.DisciplineIncidentParticipationCodeDescriptor" table="DisciplineIncidentParticipationCodeDescriptor" lazy="false">
          <key>
            <column name="DisciplineIncidentParticipationCodeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.EducationalEnvironmentDescriptorAggregate.EdFi.EducationalEnvironmentDescriptor" table="EducationalEnvironmentDescriptor" lazy="false">
          <key>
            <column name="EducationalEnvironmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.EducationOrganizationCategoryDescriptorAggregate.EdFi.EducationOrganizationCategoryDescriptor" table="EducationOrganizationCategoryDescriptor" lazy="false">
          <key>
            <column name="EducationOrganizationCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationOrganizationCategoryDescriptorId" column="EducationOrganizationCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.EducationOrganizationIdentificationSystemDescriptorAggregate.EdFi.EducationOrganizationIdentificationSystemDescriptor" table="EducationOrganizationIdentificationSystemDescriptor" lazy="false">
          <key>
            <column name="EducationOrganizationIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationOrganizationIdentificationSystemDescriptorId" column="EducationOrganizationIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.EducationPlanDescriptorAggregate.EdFi.EducationPlanDescriptor" table="EducationPlanDescriptor" lazy="false">
          <key>
            <column name="EducationPlanDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationPlanDescriptorId" column="EducationPlanDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ElectronicMailTypeDescriptorAggregate.EdFi.ElectronicMailTypeDescriptor" table="ElectronicMailTypeDescriptor" lazy="false">
          <key>
            <column name="ElectronicMailTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.EmploymentStatusDescriptorAggregate.EdFi.EmploymentStatusDescriptor" table="EmploymentStatusDescriptor" lazy="false">
          <key>
            <column name="EmploymentStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.EntryGradeLevelReasonDescriptorAggregate.EdFi.EntryGradeLevelReasonDescriptor" table="EntryGradeLevelReasonDescriptor" lazy="false">
          <key>
            <column name="EntryGradeLevelReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EntryGradeLevelReasonDescriptorId" column="EntryGradeLevelReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.EntryTypeDescriptorAggregate.EdFi.EntryTypeDescriptor" table="EntryTypeDescriptor" lazy="false">
          <key>
            <column name="EntryTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EntryTypeDescriptorId" column="EntryTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.EventCircumstanceDescriptorAggregate.EdFi.EventCircumstanceDescriptor" table="EventCircumstanceDescriptor" lazy="false">
          <key>
            <column name="EventCircumstanceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EventCircumstanceDescriptorId" column="EventCircumstanceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ExitWithdrawTypeDescriptorAggregate.EdFi.ExitWithdrawTypeDescriptor" table="ExitWithdrawTypeDescriptor" lazy="false">
          <key>
            <column name="ExitWithdrawTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ExitWithdrawTypeDescriptorId" column="ExitWithdrawTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.GradebookEntryTypeDescriptorAggregate.EdFi.GradebookEntryTypeDescriptor" table="GradebookEntryTypeDescriptor" lazy="false">
          <key>
            <column name="GradebookEntryTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradebookEntryTypeDescriptorId" column="GradebookEntryTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptor" table="GradeLevelDescriptor" lazy="false">
          <key>
            <column name="GradeLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.GradePointAverageTypeDescriptorAggregate.EdFi.GradePointAverageTypeDescriptor" table="GradePointAverageTypeDescriptor" lazy="false">
          <key>
            <column name="GradePointAverageTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradePointAverageTypeDescriptorId" column="GradePointAverageTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.GradeTypeDescriptorAggregate.EdFi.GradeTypeDescriptor" table="GradeTypeDescriptor" lazy="false">
          <key>
            <column name="GradeTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.GradingPeriodDescriptorAggregate.EdFi.GradingPeriodDescriptor" table="GradingPeriodDescriptor" lazy="false">
          <key>
            <column name="GradingPeriodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.GraduationPlanTypeDescriptorAggregate.EdFi.GraduationPlanTypeDescriptor" table="GraduationPlanTypeDescriptor" lazy="false">
          <key>
            <column name="GraduationPlanTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.GunFreeSchoolsActReportingStatusDescriptorAggregate.EdFi.GunFreeSchoolsActReportingStatusDescriptor" table="GunFreeSchoolsActReportingStatusDescriptor" lazy="false">
          <key>
            <column name="GunFreeSchoolsActReportingStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GunFreeSchoolsActReportingStatusDescriptorId" column="GunFreeSchoolsActReportingStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.HomelessPrimaryNighttimeResidenceDescriptorAggregate.EdFi.HomelessPrimaryNighttimeResidenceDescriptor" table="HomelessPrimaryNighttimeResidenceDescriptor" lazy="false">
          <key>
            <column name="HomelessPrimaryNighttimeResidenceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="HomelessPrimaryNighttimeResidenceDescriptorId" column="HomelessPrimaryNighttimeResidenceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.HomelessProgramServiceDescriptorAggregate.EdFi.HomelessProgramServiceDescriptor" table="HomelessProgramServiceDescriptor" lazy="false">
          <key>
            <column name="HomelessProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="HomelessProgramServiceDescriptorId" column="HomelessProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.IdentificationDocumentUseDescriptorAggregate.EdFi.IdentificationDocumentUseDescriptor" table="IdentificationDocumentUseDescriptor" lazy="false">
          <key>
            <column name="IdentificationDocumentUseDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.IncidentLocationDescriptorAggregate.EdFi.IncidentLocationDescriptor" table="IncidentLocationDescriptor" lazy="false">
          <key>
            <column name="IncidentLocationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IncidentLocationDescriptorId" column="IncidentLocationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.IndicatorDescriptorAggregate.EdFi.IndicatorDescriptor" table="IndicatorDescriptor" lazy="false">
          <key>
            <column name="IndicatorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IndicatorDescriptorId" column="IndicatorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.IndicatorGroupDescriptorAggregate.EdFi.IndicatorGroupDescriptor" table="IndicatorGroupDescriptor" lazy="false">
          <key>
            <column name="IndicatorGroupDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IndicatorGroupDescriptorId" column="IndicatorGroupDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.IndicatorLevelDescriptorAggregate.EdFi.IndicatorLevelDescriptor" table="IndicatorLevelDescriptor" lazy="false">
          <key>
            <column name="IndicatorLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IndicatorLevelDescriptorId" column="IndicatorLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.InstitutionTelephoneNumberTypeDescriptorAggregate.EdFi.InstitutionTelephoneNumberTypeDescriptor" table="InstitutionTelephoneNumberTypeDescriptor" lazy="false">
          <key>
            <column name="InstitutionTelephoneNumberTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InstitutionTelephoneNumberTypeDescriptorId" column="InstitutionTelephoneNumberTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.InteractivityStyleDescriptorAggregate.EdFi.InteractivityStyleDescriptor" table="InteractivityStyleDescriptor" lazy="false">
          <key>
            <column name="InteractivityStyleDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InteractivityStyleDescriptorId" column="InteractivityStyleDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.InternetAccessDescriptorAggregate.EdFi.InternetAccessDescriptor" table="InternetAccessDescriptor" lazy="false">
          <key>
            <column name="InternetAccessDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InternetAccessDescriptorId" column="InternetAccessDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.InterventionClassDescriptorAggregate.EdFi.InterventionClassDescriptor" table="InterventionClassDescriptor" lazy="false">
          <key>
            <column name="InterventionClassDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.InterventionEffectivenessRatingDescriptorAggregate.EdFi.InterventionEffectivenessRatingDescriptor" table="InterventionEffectivenessRatingDescriptor" lazy="false">
          <key>
            <column name="InterventionEffectivenessRatingDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InterventionEffectivenessRatingDescriptorId" column="InterventionEffectivenessRatingDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LanguageDescriptorAggregate.EdFi.LanguageDescriptor" table="LanguageDescriptor" lazy="false">
          <key>
            <column name="LanguageDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LanguageInstructionProgramServiceDescriptorAggregate.EdFi.LanguageInstructionProgramServiceDescriptor" table="LanguageInstructionProgramServiceDescriptor" lazy="false">
          <key>
            <column name="LanguageInstructionProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LanguageInstructionProgramServiceDescriptorId" column="LanguageInstructionProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LanguageUseDescriptorAggregate.EdFi.LanguageUseDescriptor" table="LanguageUseDescriptor" lazy="false">
          <key>
            <column name="LanguageUseDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LearningStandardCategoryDescriptorAggregate.EdFi.LearningStandardCategoryDescriptor" table="LearningStandardCategoryDescriptor" lazy="false">
          <key>
            <column name="LearningStandardCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LearningStandardCategoryDescriptorId" column="LearningStandardCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LearningStandardEquivalenceStrengthDescriptorAggregate.EdFi.LearningStandardEquivalenceStrengthDescriptor" table="LearningStandardEquivalenceStrengthDescriptor" lazy="false">
          <key>
            <column name="LearningStandardEquivalenceStrengthDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LearningStandardEquivalenceStrengthDescriptorId" column="LearningStandardEquivalenceStrengthDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LearningStandardScopeDescriptorAggregate.EdFi.LearningStandardScopeDescriptor" table="LearningStandardScopeDescriptor" lazy="false">
          <key>
            <column name="LearningStandardScopeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LearningStandardScopeDescriptorId" column="LearningStandardScopeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LevelOfEducationDescriptorAggregate.EdFi.LevelOfEducationDescriptor" table="LevelOfEducationDescriptor" lazy="false">
          <key>
            <column name="LevelOfEducationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LevelOfEducationDescriptorId" column="LevelOfEducationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LicenseStatusDescriptorAggregate.EdFi.LicenseStatusDescriptor" table="LicenseStatusDescriptor" lazy="false">
          <key>
            <column name="LicenseStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LicenseStatusDescriptorId" column="LicenseStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LicenseTypeDescriptorAggregate.EdFi.LicenseTypeDescriptor" table="LicenseTypeDescriptor" lazy="false">
          <key>
            <column name="LicenseTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LicenseTypeDescriptorId" column="LicenseTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LimitedEnglishProficiencyDescriptorAggregate.EdFi.LimitedEnglishProficiencyDescriptor" table="LimitedEnglishProficiencyDescriptor" lazy="false">
          <key>
            <column name="LimitedEnglishProficiencyDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LimitedEnglishProficiencyDescriptorId" column="LimitedEnglishProficiencyDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LocaleDescriptorAggregate.EdFi.LocaleDescriptor" table="LocaleDescriptor" lazy="false">
          <key>
            <column name="LocaleDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyCategoryDescriptorAggregate.EdFi.LocalEducationAgencyCategoryDescriptor" table="LocalEducationAgencyCategoryDescriptor" lazy="false">
          <key>
            <column name="LocalEducationAgencyCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LocalEducationAgencyCategoryDescriptorId" column="LocalEducationAgencyCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.MagnetSpecialProgramEmphasisSchoolDescriptorAggregate.EdFi.MagnetSpecialProgramEmphasisSchoolDescriptor" table="MagnetSpecialProgramEmphasisSchoolDescriptor" lazy="false">
          <key>
            <column name="MagnetSpecialProgramEmphasisSchoolDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MagnetSpecialProgramEmphasisSchoolDescriptorId" column="MagnetSpecialProgramEmphasisSchoolDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.MediumOfInstructionDescriptorAggregate.EdFi.MediumOfInstructionDescriptor" table="MediumOfInstructionDescriptor" lazy="false">
          <key>
            <column name="MediumOfInstructionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MediumOfInstructionDescriptorId" column="MediumOfInstructionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.MethodCreditEarnedDescriptorAggregate.EdFi.MethodCreditEarnedDescriptor" table="MethodCreditEarnedDescriptor" lazy="false">
          <key>
            <column name="MethodCreditEarnedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MethodCreditEarnedDescriptorId" column="MethodCreditEarnedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.MigrantEducationProgramServiceDescriptorAggregate.EdFi.MigrantEducationProgramServiceDescriptor" table="MigrantEducationProgramServiceDescriptor" lazy="false">
          <key>
            <column name="MigrantEducationProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MigrantEducationProgramServiceDescriptorId" column="MigrantEducationProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.MonitoredDescriptorAggregate.EdFi.MonitoredDescriptor" table="MonitoredDescriptor" lazy="false">
          <key>
            <column name="MonitoredDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MonitoredDescriptorId" column="MonitoredDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.NeglectedOrDelinquentProgramDescriptorAggregate.EdFi.NeglectedOrDelinquentProgramDescriptor" table="NeglectedOrDelinquentProgramDescriptor" lazy="false">
          <key>
            <column name="NeglectedOrDelinquentProgramDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="NeglectedOrDelinquentProgramDescriptorId" column="NeglectedOrDelinquentProgramDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.NeglectedOrDelinquentProgramServiceDescriptorAggregate.EdFi.NeglectedOrDelinquentProgramServiceDescriptor" table="NeglectedOrDelinquentProgramServiceDescriptor" lazy="false">
          <key>
            <column name="NeglectedOrDelinquentProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="NeglectedOrDelinquentProgramServiceDescriptorId" column="NeglectedOrDelinquentProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.NetworkPurposeDescriptorAggregate.EdFi.NetworkPurposeDescriptor" table="NetworkPurposeDescriptor" lazy="false">
          <key>
            <column name="NetworkPurposeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="NetworkPurposeDescriptorId" column="NetworkPurposeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.OldEthnicityDescriptorAggregate.EdFi.OldEthnicityDescriptor" table="OldEthnicityDescriptor" lazy="false">
          <key>
            <column name="OldEthnicityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OldEthnicityDescriptorId" column="OldEthnicityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.OperationalStatusDescriptorAggregate.EdFi.OperationalStatusDescriptor" table="OperationalStatusDescriptor" lazy="false">
          <key>
            <column name="OperationalStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OperationalStatusDescriptorId" column="OperationalStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.OtherNameTypeDescriptorAggregate.EdFi.OtherNameTypeDescriptor" table="OtherNameTypeDescriptor" lazy="false">
          <key>
            <column name="OtherNameTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ParticipationDescriptorAggregate.EdFi.ParticipationDescriptor" table="ParticipationDescriptor" lazy="false">
          <key>
            <column name="ParticipationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ParticipationDescriptorId" column="ParticipationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ParticipationStatusDescriptorAggregate.EdFi.ParticipationStatusDescriptor" table="ParticipationStatusDescriptor" lazy="false">
          <key>
            <column name="ParticipationStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ParticipationStatusDescriptorId" column="ParticipationStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.PerformanceBaseConversionDescriptorAggregate.EdFi.PerformanceBaseConversionDescriptor" table="PerformanceBaseConversionDescriptor" lazy="false">
          <key>
            <column name="PerformanceBaseConversionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PerformanceBaseConversionDescriptorId" column="PerformanceBaseConversionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.PerformanceLevelDescriptorAggregate.EdFi.PerformanceLevelDescriptor" table="PerformanceLevelDescriptor" lazy="false">
          <key>
            <column name="PerformanceLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.PersonalInformationVerificationDescriptorAggregate.EdFi.PersonalInformationVerificationDescriptor" table="PersonalInformationVerificationDescriptor" lazy="false">
          <key>
            <column name="PersonalInformationVerificationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.PlatformTypeDescriptorAggregate.EdFi.PlatformTypeDescriptor" table="PlatformTypeDescriptor" lazy="false">
          <key>
            <column name="PlatformTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PlatformTypeDescriptorId" column="PlatformTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.PopulationServedDescriptorAggregate.EdFi.PopulationServedDescriptor" table="PopulationServedDescriptor" lazy="false">
          <key>
            <column name="PopulationServedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.PostingResultDescriptorAggregate.EdFi.PostingResultDescriptor" table="PostingResultDescriptor" lazy="false">
          <key>
            <column name="PostingResultDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PostingResultDescriptorId" column="PostingResultDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.PostSecondaryEventCategoryDescriptorAggregate.EdFi.PostSecondaryEventCategoryDescriptor" table="PostSecondaryEventCategoryDescriptor" lazy="false">
          <key>
            <column name="PostSecondaryEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PostSecondaryEventCategoryDescriptorId" column="PostSecondaryEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.PostSecondaryInstitutionLevelDescriptorAggregate.EdFi.PostSecondaryInstitutionLevelDescriptor" table="PostSecondaryInstitutionLevelDescriptor" lazy="false">
          <key>
            <column name="PostSecondaryInstitutionLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PostSecondaryInstitutionLevelDescriptorId" column="PostSecondaryInstitutionLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ProficiencyDescriptorAggregate.EdFi.ProficiencyDescriptor" table="ProficiencyDescriptor" lazy="false">
          <key>
            <column name="ProficiencyDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProficiencyDescriptorId" column="ProficiencyDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ProgramAssignmentDescriptorAggregate.EdFi.ProgramAssignmentDescriptor" table="ProgramAssignmentDescriptor" lazy="false">
          <key>
            <column name="ProgramAssignmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ProgramCharacteristicDescriptorAggregate.EdFi.ProgramCharacteristicDescriptor" table="ProgramCharacteristicDescriptor" lazy="false">
          <key>
            <column name="ProgramCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramCharacteristicDescriptorId" column="ProgramCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ProgramSponsorDescriptorAggregate.EdFi.ProgramSponsorDescriptor" table="ProgramSponsorDescriptor" lazy="false">
          <key>
            <column name="ProgramSponsorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramSponsorDescriptorId" column="ProgramSponsorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ProgramTypeDescriptorAggregate.EdFi.ProgramTypeDescriptor" table="ProgramTypeDescriptor" lazy="false">
          <key>
            <column name="ProgramTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ProgressDescriptorAggregate.EdFi.ProgressDescriptor" table="ProgressDescriptor" lazy="false">
          <key>
            <column name="ProgressDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgressDescriptorId" column="ProgressDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ProgressLevelDescriptorAggregate.EdFi.ProgressLevelDescriptor" table="ProgressLevelDescriptor" lazy="false">
          <key>
            <column name="ProgressLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgressLevelDescriptorId" column="ProgressLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ProviderCategoryDescriptorAggregate.EdFi.ProviderCategoryDescriptor" table="ProviderCategoryDescriptor" lazy="false">
          <key>
            <column name="ProviderCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProviderCategoryDescriptorId" column="ProviderCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ProviderProfitabilityDescriptorAggregate.EdFi.ProviderProfitabilityDescriptor" table="ProviderProfitabilityDescriptor" lazy="false">
          <key>
            <column name="ProviderProfitabilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProviderProfitabilityDescriptorId" column="ProviderProfitabilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ProviderStatusDescriptorAggregate.EdFi.ProviderStatusDescriptor" table="ProviderStatusDescriptor" lazy="false">
          <key>
            <column name="ProviderStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProviderStatusDescriptorId" column="ProviderStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.PublicationStatusDescriptorAggregate.EdFi.PublicationStatusDescriptor" table="PublicationStatusDescriptor" lazy="false">
          <key>
            <column name="PublicationStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.QuestionFormDescriptorAggregate.EdFi.QuestionFormDescriptor" table="QuestionFormDescriptor" lazy="false">
          <key>
            <column name="QuestionFormDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="QuestionFormDescriptorId" column="QuestionFormDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.RaceDescriptorAggregate.EdFi.RaceDescriptor" table="RaceDescriptor" lazy="false">
          <key>
            <column name="RaceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RaceDescriptorId" column="RaceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ReasonExitedDescriptorAggregate.EdFi.ReasonExitedDescriptor" table="ReasonExitedDescriptor" lazy="false">
          <key>
            <column name="ReasonExitedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ReasonExitedDescriptorId" column="ReasonExitedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ReasonNotTestedDescriptorAggregate.EdFi.ReasonNotTestedDescriptor" table="ReasonNotTestedDescriptor" lazy="false">
          <key>
            <column name="ReasonNotTestedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ReasonNotTestedDescriptorId" column="ReasonNotTestedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.RecognitionTypeDescriptorAggregate.EdFi.RecognitionTypeDescriptor" table="RecognitionTypeDescriptor" lazy="false">
          <key>
            <column name="RecognitionTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RecognitionTypeDescriptorId" column="RecognitionTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.RelationDescriptorAggregate.EdFi.RelationDescriptor" table="RelationDescriptor" lazy="false">
          <key>
            <column name="RelationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RelationDescriptorId" column="RelationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.RepeatIdentifierDescriptorAggregate.EdFi.RepeatIdentifierDescriptor" table="RepeatIdentifierDescriptor" lazy="false">
          <key>
            <column name="RepeatIdentifierDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RepeatIdentifierDescriptorId" column="RepeatIdentifierDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ReporterDescriptionDescriptorAggregate.EdFi.ReporterDescriptionDescriptor" table="ReporterDescriptionDescriptor" lazy="false">
          <key>
            <column name="ReporterDescriptionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ReporterDescriptionDescriptorId" column="ReporterDescriptionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ResidencyStatusDescriptorAggregate.EdFi.ResidencyStatusDescriptor" table="ResidencyStatusDescriptor" lazy="false">
          <key>
            <column name="ResidencyStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResidencyStatusDescriptorId" column="ResidencyStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ResponseIndicatorDescriptorAggregate.EdFi.ResponseIndicatorDescriptor" table="ResponseIndicatorDescriptor" lazy="false">
          <key>
            <column name="ResponseIndicatorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResponseIndicatorDescriptorId" column="ResponseIndicatorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ResponsibilityDescriptorAggregate.EdFi.ResponsibilityDescriptor" table="ResponsibilityDescriptor" lazy="false">
          <key>
            <column name="ResponsibilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResponsibilityDescriptorId" column="ResponsibilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.RestraintEventReasonDescriptorAggregate.EdFi.RestraintEventReasonDescriptor" table="RestraintEventReasonDescriptor" lazy="false">
          <key>
            <column name="RestraintEventReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RestraintEventReasonDescriptorId" column="RestraintEventReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptor" table="ResultDatatypeTypeDescriptor" lazy="false">
          <key>
            <column name="ResultDatatypeTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.RetestIndicatorDescriptorAggregate.EdFi.RetestIndicatorDescriptor" table="RetestIndicatorDescriptor" lazy="false">
          <key>
            <column name="RetestIndicatorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RetestIndicatorDescriptorId" column="RetestIndicatorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SchoolCategoryDescriptorAggregate.EdFi.SchoolCategoryDescriptor" table="SchoolCategoryDescriptor" lazy="false">
          <key>
            <column name="SchoolCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolCategoryDescriptorId" column="SchoolCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SchoolChoiceImplementStatusDescriptorAggregate.EdFi.SchoolChoiceImplementStatusDescriptor" table="SchoolChoiceImplementStatusDescriptor" lazy="false">
          <key>
            <column name="SchoolChoiceImplementStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolChoiceImplementStatusDescriptorId" column="SchoolChoiceImplementStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SchoolFoodServiceProgramServiceDescriptorAggregate.EdFi.SchoolFoodServiceProgramServiceDescriptor" table="SchoolFoodServiceProgramServiceDescriptor" lazy="false">
          <key>
            <column name="SchoolFoodServiceProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolFoodServiceProgramServiceDescriptorId" column="SchoolFoodServiceProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SchoolTypeDescriptorAggregate.EdFi.SchoolTypeDescriptor" table="SchoolTypeDescriptor" lazy="false">
          <key>
            <column name="SchoolTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolTypeDescriptorId" column="SchoolTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SectionCharacteristicDescriptorAggregate.EdFi.SectionCharacteristicDescriptor" table="SectionCharacteristicDescriptor" lazy="false">
          <key>
            <column name="SectionCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SectionCharacteristicDescriptorId" column="SectionCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SeparationDescriptorAggregate.EdFi.SeparationDescriptor" table="SeparationDescriptor" lazy="false">
          <key>
            <column name="SeparationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SeparationDescriptorId" column="SeparationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SeparationReasonDescriptorAggregate.EdFi.SeparationReasonDescriptor" table="SeparationReasonDescriptor" lazy="false">
          <key>
            <column name="SeparationReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SeparationReasonDescriptorId" column="SeparationReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.ServiceDescriptorAggregate.EdFi.ServiceDescriptor" table="ServiceDescriptor" lazy="false">
          <key>
            <column name="ServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SexDescriptorAggregate.EdFi.SexDescriptor" table="SexDescriptor" lazy="false">
          <key>
            <column name="SexDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SexDescriptorId" column="SexDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SourceSystemDescriptorAggregate.EdFi.SourceSystemDescriptor" table="SourceSystemDescriptor" lazy="false">
          <key>
            <column name="SourceSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SpecialEducationProgramServiceDescriptorAggregate.EdFi.SpecialEducationProgramServiceDescriptor" table="SpecialEducationProgramServiceDescriptor" lazy="false">
          <key>
            <column name="SpecialEducationProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SpecialEducationProgramServiceDescriptorId" column="SpecialEducationProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SpecialEducationSettingDescriptorAggregate.EdFi.SpecialEducationSettingDescriptor" table="SpecialEducationSettingDescriptor" lazy="false">
          <key>
            <column name="SpecialEducationSettingDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SpecialEducationSettingDescriptorId" column="SpecialEducationSettingDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.StaffClassificationDescriptorAggregate.EdFi.StaffClassificationDescriptor" table="StaffClassificationDescriptor" lazy="false">
          <key>
            <column name="StaffClassificationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.StaffIdentificationSystemDescriptorAggregate.EdFi.StaffIdentificationSystemDescriptor" table="StaffIdentificationSystemDescriptor" lazy="false">
          <key>
            <column name="StaffIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StaffIdentificationSystemDescriptorId" column="StaffIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.StaffLeaveEventCategoryDescriptorAggregate.EdFi.StaffLeaveEventCategoryDescriptor" table="StaffLeaveEventCategoryDescriptor" lazy="false">
          <key>
            <column name="StaffLeaveEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StaffLeaveEventCategoryDescriptorId" column="StaffLeaveEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptor" table="StateAbbreviationDescriptor" lazy="false">
          <key>
            <column name="StateAbbreviationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.StudentCharacteristicDescriptorAggregate.EdFi.StudentCharacteristicDescriptor" table="StudentCharacteristicDescriptor" lazy="false">
          <key>
            <column name="StudentCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StudentCharacteristicDescriptorId" column="StudentCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.StudentIdentificationSystemDescriptorAggregate.EdFi.StudentIdentificationSystemDescriptor" table="StudentIdentificationSystemDescriptor" lazy="false">
          <key>
            <column name="StudentIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StudentIdentificationSystemDescriptorId" column="StudentIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.StudentParticipationCodeDescriptorAggregate.EdFi.StudentParticipationCodeDescriptor" table="StudentParticipationCodeDescriptor" lazy="false">
          <key>
            <column name="StudentParticipationCodeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StudentParticipationCodeDescriptorId" column="StudentParticipationCodeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SurveyCategoryDescriptorAggregate.EdFi.SurveyCategoryDescriptor" table="SurveyCategoryDescriptor" lazy="false">
          <key>
            <column name="SurveyCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SurveyCategoryDescriptorId" column="SurveyCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.SurveyLevelDescriptorAggregate.EdFi.SurveyLevelDescriptor" table="SurveyLevelDescriptor" lazy="false">
          <key>
            <column name="SurveyLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SurveyLevelDescriptorId" column="SurveyLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.TeachingCredentialBasisDescriptorAggregate.EdFi.TeachingCredentialBasisDescriptor" table="TeachingCredentialBasisDescriptor" lazy="false">
          <key>
            <column name="TeachingCredentialBasisDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TeachingCredentialBasisDescriptorId" column="TeachingCredentialBasisDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.TeachingCredentialDescriptorAggregate.EdFi.TeachingCredentialDescriptor" table="TeachingCredentialDescriptor" lazy="false">
          <key>
            <column name="TeachingCredentialDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TeachingCredentialDescriptorId" column="TeachingCredentialDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.TechnicalSkillsAssessmentDescriptorAggregate.EdFi.TechnicalSkillsAssessmentDescriptor" table="TechnicalSkillsAssessmentDescriptor" lazy="false">
          <key>
            <column name="TechnicalSkillsAssessmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TechnicalSkillsAssessmentDescriptorId" column="TechnicalSkillsAssessmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.TelephoneNumberTypeDescriptorAggregate.EdFi.TelephoneNumberTypeDescriptor" table="TelephoneNumberTypeDescriptor" lazy="false">
          <key>
            <column name="TelephoneNumberTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.TermDescriptorAggregate.EdFi.TermDescriptor" table="TermDescriptor" lazy="false">
          <key>
            <column name="TermDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TermDescriptorId" column="TermDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.TitleIPartAParticipantDescriptorAggregate.EdFi.TitleIPartAParticipantDescriptor" table="TitleIPartAParticipantDescriptor" lazy="false">
          <key>
            <column name="TitleIPartAParticipantDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TitleIPartAParticipantDescriptorId" column="TitleIPartAParticipantDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.TitleIPartAProgramServiceDescriptorAggregate.EdFi.TitleIPartAProgramServiceDescriptor" table="TitleIPartAProgramServiceDescriptor" lazy="false">
          <key>
            <column name="TitleIPartAProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TitleIPartAProgramServiceDescriptorId" column="TitleIPartAProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.TitleIPartASchoolDesignationDescriptorAggregate.EdFi.TitleIPartASchoolDesignationDescriptor" table="TitleIPartASchoolDesignationDescriptor" lazy="false">
          <key>
            <column name="TitleIPartASchoolDesignationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TitleIPartASchoolDesignationDescriptorId" column="TitleIPartASchoolDesignationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.TribalAffiliationDescriptorAggregate.EdFi.TribalAffiliationDescriptor" table="TribalAffiliationDescriptor" lazy="false">
          <key>
            <column name="TribalAffiliationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.VisaDescriptorAggregate.EdFi.VisaDescriptor" table="VisaDescriptor" lazy="false">
          <key>
            <column name="VisaDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="VisaDescriptorId" column="VisaDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
    <joined-subclass name="EdFi.Ods.Entities.NHibernate.WeaponDescriptorAggregate.EdFi.WeaponDescriptor" table="WeaponDescriptor" lazy="false">
          <key>
            <column name="WeaponDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="WeaponDescriptorId" column="WeaponDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </joined-subclass>
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionReferenceData" table="DisciplineAction" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="DisciplineActionIdentifier" column="DisciplineActionIdentifier" type="string"  length="20"  />
            <key-property name="DisciplineDate" column="DisciplineDate" type="date"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineAction" table="DisciplineAction" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineActionIdentifier" column="DisciplineActionIdentifier" type="string" length="20" />
      <key-property name="DisciplineDate" column="DisciplineDate" type="date" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="ActualDisciplineActionLength" column="ActualDisciplineActionLength" type="decimal" />
    <property name="AssignmentSchoolId" column="AssignmentSchoolId" type="int" />
    <property name="DisciplineActionLength" column="DisciplineActionLength" type="decimal" />
    <property name="DisciplineActionLengthDifferenceReasonDescriptorId" column="DisciplineActionLengthDifferenceReasonDescriptorId" type="int" />
    <property name="IEPPlacementMeetingIndicator" column="IEPPlacementMeetingIndicator" type="bool" />
    <property name="ReceivedEducationServicesDuringExpulsion" column="ReceivedEducationServicesDuringExpulsion" type="bool" />
    <property name="RelatedToZeroTolerancePolicy" column="RelatedToZeroTolerancePolicy" type="bool" />
    <property name="ResponsibilitySchoolId" column="ResponsibilitySchoolId" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="AssignmentSchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssignmentSchoolId" />
    </many-to-one>
    <many-to-one name="ResponsibilitySchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ResponsibilitySchoolId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="DisciplineActionDisciplines" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionDiscipline" />
    </set>

    <set name="DisciplineActionStaffs" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionStaff" />
    </set>

    <set name="DisciplineActionStudentDisciplineIncidentAssociations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionStudentDisciplineIncidentAssociation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionDiscipline" table="DisciplineActionDiscipline" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineDescriptorId" column="DisciplineDescriptorId" type="int" />
      <key-many-to-one name="DisciplineAction">
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionStaff" table="DisciplineActionStaff" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="DisciplineAction">
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionStudentDisciplineIncidentAssociation" table="DisciplineActionStudentDisciplineIncidentAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="20" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-many-to-one name="DisciplineAction">
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StudentDisciplineIncidentAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="IncidentIdentifier" />
      <column name="SchoolId" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentReferenceData" table="DisciplineIncident" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string"  length="20"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncident" table="DisciplineIncident" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="20" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CaseNumber" column="CaseNumber" type="string" length="20" />
    <property name="IncidentCost" column="IncidentCost" type="decimal" />
    <property name="IncidentDate" column="IncidentDate" type="date" not-null="true" />
    <property name="IncidentDescription" column="IncidentDescription" type="string" length="1024" />
    <property name="IncidentLocationDescriptorId" column="IncidentLocationDescriptorId" type="int" />
    <property name="IncidentTime" column="IncidentTime" type="TimeAsTimeSpan" />
    <property name="ReportedToLawEnforcement" column="ReportedToLawEnforcement" type="bool" />
    <property name="ReporterDescriptionDescriptorId" column="ReporterDescriptionDescriptorId" type="int" />
    <property name="ReporterName" column="ReporterName" type="string" length="75" />
    <property name="StaffUSI" column="StaffUSI" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="DisciplineIncidentBehaviors" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentBehavior" />
    </set>

    <set name="DisciplineIncidentExternalParticipants" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentExternalParticipant" />
    </set>

    <set name="DisciplineIncidentWeapons" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentWeapon" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentBehavior" table="DisciplineIncidentBehavior" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int" />
      <key-many-to-one name="DisciplineIncident">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BehaviorDetailedDescription" column="BehaviorDetailedDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentExternalParticipant" table="DisciplineIncidentExternalParticipant" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" />
      <key-property name="FirstName" column="FirstName" type="string" length="75" />
      <key-property name="LastSurname" column="LastSurname" type="string" length="75" />
      <key-many-to-one name="DisciplineIncident">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentWeapon" table="DisciplineIncidentWeapon" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="WeaponDescriptorId" column="WeaponDescriptorId" type="int" />
      <key-many-to-one name="DisciplineIncident">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentReferenceData" table="EducationContent" lazy="true" >
        <id name="ContentIdentifier" column="ContentIdentifier" type="string"  length="225" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContent" table="EducationContent" lazy="false" discriminator-value="NULL">
    <id name="ContentIdentifier" column="ContentIdentifier" type="string" length="225">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AdditionalAuthorsIndicator" column="AdditionalAuthorsIndicator" type="bool" />
    <property name="ContentClassDescriptorId" column="ContentClassDescriptorId" type="int" />
    <property name="Cost" column="Cost" type="decimal" />
    <property name="CostRateDescriptorId" column="CostRateDescriptorId" type="int" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="InteractivityStyleDescriptorId" column="InteractivityStyleDescriptorId" type="int" />
    <property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
    <property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Publisher" column="Publisher" type="string" length="50" />
    <property name="ShortDescription" column="ShortDescription" type="string" length="75" />
    <property name="TimeRequired" column="TimeRequired" type="string" length="30" />
    <property name="UseRightsURL" column="UseRightsURL" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="10" />

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="EducationContentAppropriateGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAppropriateGradeLevel" />
    </set>

    <set name="EducationContentAppropriateSexes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAppropriateSex" />
    </set>

    <set name="EducationContentAuthors" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAuthor" />
    </set>

    <set name="EducationContentDerivativeSourceEducationContents" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceEducationContent" />
    </set>

    <set name="EducationContentDerivativeSourceLearningResourceMetadataURIs" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceLearningResourceMetadataURI" />
    </set>

    <set name="EducationContentDerivativeSourceURIs" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceURI" />
    </set>

    <set name="EducationContentLanguages" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentLanguage" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAppropriateGradeLevel" table="EducationContentAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAppropriateSex" table="EducationContentAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAuthor" table="EducationContentAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="100" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceEducationContent" table="EducationContentDerivativeSourceEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DerivativeSourceContentIdentifier" column="DerivativeSourceContentIdentifier" type="string" length="225" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="DerivativeSourceEducationContentReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="DerivativeSourceContentIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceLearningResourceMetadataURI" table="EducationContentDerivativeSourceLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DerivativeSourceLearningResourceMetadataURI" column="DerivativeSourceLearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceURI" table="EducationContentDerivativeSourceURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DerivativeSourceURI" column="DerivativeSourceURI" type="string" length="255" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentLanguage" table="EducationContentLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" table="EducationOrganization" lazy="true" >
        <id name="EducationOrganizationId" column="EducationOrganizationId" type="int" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganization" table="EducationOrganization" lazy="false" abstract="true" discriminator-value="NULL">
    <id name="EducationOrganizationId" column="EducationOrganizationId" type="int">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="NameOfInstitution" column="NameOfInstitution" type="string" length="75" not-null="true" />
    <property name="OperationalStatusDescriptorId" column="OperationalStatusDescriptorId" type="int" />
    <property name="ShortNameOfInstitution" column="ShortNameOfInstitution" type="string" length="75" />
    <property name="WebSite" column="WebSite" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="EducationOrganizationAddresses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationAddress" />
    </set>

    <set name="EducationOrganizationCategories" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationCategory" />
    </set>

    <set name="EducationOrganizationIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIdentificationCode" />
    </set>

    <set name="EducationOrganizationIndicators" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicator" />
    </set>

    <set name="EducationOrganizationInstitutionTelephones" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationInstitutionTelephone" />
    </set>

    <set name="EducationOrganizationInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationInternationalAddress" />
    </set>

    <!-- Derived classes -->
    <subclass name="EdFi.Ods.Entities.NHibernate.CommunityOrganizationAggregate.EdFi.CommunityOrganization" lazy="false" discriminator-value="edfi.CommunityOrganization" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="CommunityOrganization" >
          <key>
            <column name="CommunityOrganizationId" />
          </key>

          <!-- PK properties -->
          <property name="CommunityOrganizationId" column="CommunityOrganizationId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CommunityProviderAggregate.EdFi.CommunityProvider" lazy="false" discriminator-value="edfi.CommunityProvider" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="CommunityProvider" >
          <key>
            <column name="CommunityProviderId" />
          </key>

          <!-- PK properties -->
          <property name="CommunityProviderId" column="CommunityProviderId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="CommunityOrganizationId" column="CommunityOrganizationId" type="int" />
          <property name="LicenseExemptIndicator" column="LicenseExemptIndicator" type="bool" />
          <property name="ProviderCategoryDescriptorId" column="ProviderCategoryDescriptorId" type="int" not-null="true" />
          <property name="ProviderProfitabilityDescriptorId" column="ProviderProfitabilityDescriptorId" type="int" />
          <property name="ProviderStatusDescriptorId" column="ProviderStatusDescriptorId" type="int" not-null="true" />
          <property name="SchoolIndicator" column="SchoolIndicator" type="bool" />

          <!-- Aggregate references -->
          <many-to-one name="CommunityOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="CommunityOrganizationId" />
          </many-to-one>


          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EducationOrganizationNetworkAggregate.EdFi.EducationOrganizationNetwork" lazy="false" discriminator-value="edfi.EducationOrganizationNetwork" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="EducationOrganizationNetwork" >
          <key>
            <column name="EducationOrganizationNetworkId" />
          </key>

          <!-- PK properties -->
          <property name="EducationOrganizationNetworkId" column="EducationOrganizationNetworkId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="NetworkPurposeDescriptorId" column="NetworkPurposeDescriptorId" type="int" not-null="true" />

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EducationServiceCenterAggregate.EdFi.EducationServiceCenter" lazy="false" discriminator-value="edfi.EducationServiceCenter" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="EducationServiceCenter" >
          <key>
            <column name="EducationServiceCenterId" />
          </key>

          <!-- PK properties -->
          <property name="EducationServiceCenterId" column="EducationServiceCenterId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="StateEducationAgencyId" column="StateEducationAgencyId" type="int" />

          <!-- Aggregate references -->
          <many-to-one name="StateEducationAgencyReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="StateEducationAgencyId" />
          </many-to-one>


          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyAggregate.EdFi.LocalEducationAgency" lazy="false" discriminator-value="edfi.LocalEducationAgency" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="LocalEducationAgency" >
          <key>
            <column name="LocalEducationAgencyId" />
          </key>

          <!-- PK properties -->
          <property name="LocalEducationAgencyId" column="LocalEducationAgencyId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="CharterStatusDescriptorId" column="CharterStatusDescriptorId" type="int" />
          <property name="EducationServiceCenterId" column="EducationServiceCenterId" type="int" />
          <property name="LocalEducationAgencyCategoryDescriptorId" column="LocalEducationAgencyCategoryDescriptorId" type="int" not-null="true" />
          <property name="ParentLocalEducationAgencyId" column="ParentLocalEducationAgencyId" type="int" />
          <property name="StateEducationAgencyId" column="StateEducationAgencyId" type="int" />

          <!-- Aggregate references -->
          <many-to-one name="EducationServiceCenterReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="EducationServiceCenterId" />
          </many-to-one>

          <many-to-one name="ParentLocalEducationAgencyReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="ParentLocalEducationAgencyId" />
          </many-to-one>

          <many-to-one name="StateEducationAgencyReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="StateEducationAgencyId" />
          </many-to-one>


          <!-- Collections -->
          <set name="LocalEducationAgencyAccountabilities" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="LocalEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyAccountability" />
          </set>

          <set name="LocalEducationAgencyFederalFunds" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="LocalEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyFederalFunds" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitution" lazy="false" discriminator-value="edfi.PostSecondaryInstitution" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="PostSecondaryInstitution" >
          <key>
            <column name="PostSecondaryInstitutionId" />
          </key>

          <!-- PK properties -->
          <property name="PostSecondaryInstitutionId" column="PostSecondaryInstitutionId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AdministrativeFundingControlDescriptorId" column="AdministrativeFundingControlDescriptorId" type="int" />
          <property name="PostSecondaryInstitutionLevelDescriptorId" column="PostSecondaryInstitutionLevelDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="PostSecondaryInstitutionMediumOfInstructions" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="PostSecondaryInstitutionId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionMediumOfInstruction" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SchoolAggregate.EdFi.School" lazy="false" discriminator-value="edfi.School" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="School" >
          <key>
            <column name="SchoolId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolId" column="SchoolId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AdministrativeFundingControlDescriptorId" column="AdministrativeFundingControlDescriptorId" type="int" />
          <property name="CharterApprovalAgencyTypeDescriptorId" column="CharterApprovalAgencyTypeDescriptorId" type="int" />
          <property name="CharterApprovalSchoolYear" column="CharterApprovalSchoolYear" type="short" />
          <property name="CharterStatusDescriptorId" column="CharterStatusDescriptorId" type="int" />
          <property name="InternetAccessDescriptorId" column="InternetAccessDescriptorId" type="int" />
          <property name="LocalEducationAgencyId" column="LocalEducationAgencyId" type="int" />
          <property name="MagnetSpecialProgramEmphasisSchoolDescriptorId" column="MagnetSpecialProgramEmphasisSchoolDescriptorId" type="int" />
          <property name="SchoolTypeDescriptorId" column="SchoolTypeDescriptorId" type="int" />
          <property name="TitleIPartASchoolDesignationDescriptorId" column="TitleIPartASchoolDesignationDescriptorId" type="int" />

          <!-- Aggregate references -->
          <many-to-one name="CharterApprovalSchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="CharterApprovalSchoolYear" />
          </many-to-one>

          <many-to-one name="LocalEducationAgencyReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="LocalEducationAgencyId" />
          </many-to-one>


          <!-- Collections -->
          <set name="SchoolCategories" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.SchoolAggregate.EdFi.SchoolCategory" />
          </set>

          <set name="SchoolGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.SchoolAggregate.EdFi.SchoolGradeLevel" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StateEducationAgencyAggregate.EdFi.StateEducationAgency" lazy="false" discriminator-value="edfi.StateEducationAgency" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StateEducationAgency" >
          <key>
            <column name="StateEducationAgencyId" />
          </key>

          <!-- PK properties -->
          <property name="StateEducationAgencyId" column="StateEducationAgencyId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StateEducationAgencyAccountabilities" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="StateEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StateEducationAgencyAggregate.EdFi.StateEducationAgencyAccountability" />
          </set>

          <set name="StateEducationAgencyFederalFunds" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="StateEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StateEducationAgencyAggregate.EdFi.StateEducationAgencyFederalFunds" />
          </set>

      </join>
    </subclass>
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationAddress" table="EducationOrganizationAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="EducationOrganizationAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressPeriod" table="EducationOrganizationAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="EducationOrganizationAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationCategory" table="EducationOrganizationCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationCategoryDescriptorId" column="EducationOrganizationCategoryDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIdentificationCode" table="EducationOrganizationIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationIdentificationSystemDescriptorId" column="EducationOrganizationIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicator" table="EducationOrganizationIndicator" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IndicatorDescriptorId" column="IndicatorDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="IndicatorGroupDescriptorId" column="IndicatorGroupDescriptorId" type="int" />
    <property name="IndicatorLevelDescriptorId" column="IndicatorLevelDescriptorId" type="int" />
    <property name="IndicatorValue" column="IndicatorValue" type="string" length="35" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="EducationOrganizationIndicatorPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="IndicatorDescriptorId" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorPeriod" table="EducationOrganizationIndicatorPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="EducationOrganizationIndicator">
        <column name="IndicatorDescriptorId" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationInstitutionTelephone" table="EducationOrganizationInstitutionTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="InstitutionTelephoneNumberTypeDescriptorId" column="InstitutionTelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationInternationalAddress" table="EducationOrganizationInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationInterventionPrescriptionAssociationAggregate.EdFi.EducationOrganizationInterventionPrescriptionAssociationReferenceData" table="EducationOrganizationInterventionPrescriptionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="int"  />
            <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationInterventionPrescriptionAssociationAggregate.EdFi.EducationOrganizationInterventionPrescriptionAssociation" table="EducationOrganizationInterventionPrescriptionAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="int" />
      <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="InterventionPrescriptionReferenceData" class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="InterventionPrescriptionEducationOrganizationId" />
      <column name="InterventionPrescriptionIdentificationCode" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationNetworkAssociationAggregate.EdFi.EducationOrganizationNetworkAssociationReferenceData" table="EducationOrganizationNetworkAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationNetworkId" column="EducationOrganizationNetworkId" type="int"  />
            <key-property name="MemberEducationOrganizationId" column="MemberEducationOrganizationId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationNetworkAssociationAggregate.EdFi.EducationOrganizationNetworkAssociation" table="EducationOrganizationNetworkAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationNetworkId" column="EducationOrganizationNetworkId" type="int" />
      <key-property name="MemberEducationOrganizationId" column="MemberEducationOrganizationId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationNetworkReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationNetworkId" />
    </many-to-one>
    <many-to-one name="MemberEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="MemberEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationPeerAssociationAggregate.EdFi.EducationOrganizationPeerAssociationReferenceData" table="EducationOrganizationPeerAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="PeerEducationOrganizationId" column="PeerEducationOrganizationId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationPeerAssociationAggregate.EdFi.EducationOrganizationPeerAssociation" table="EducationOrganizationPeerAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="PeerEducationOrganizationId" column="PeerEducationOrganizationId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="PeerEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PeerEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.FeederSchoolAssociationAggregate.EdFi.FeederSchoolAssociationReferenceData" table="FeederSchoolAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="FeederSchoolId" column="FeederSchoolId" type="int"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.FeederSchoolAssociationAggregate.EdFi.FeederSchoolAssociation" table="FeederSchoolAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="FeederSchoolId" column="FeederSchoolId" type="int" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="FeederRelationshipDescription" column="FeederRelationshipDescription" type="string" length="1024" />

    <!-- Aggregate references -->
    <many-to-one name="FeederSchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="FeederSchoolId" />
    </many-to-one>
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationReferenceData" table="GeneralStudentProgramAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociation" table="GeneralStudentProgramAssociation" lazy="false" abstract="true" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="ReasonExitedDescriptorId" column="ReasonExitedDescriptorId" type="int" />
    <property name="ServedOutsideOfRegularSession" column="ServedOutsideOfRegularSession" type="bool" />

    <!-- One-to-one child mappings -->
    <set name="GeneralStudentProgramAssociationParticipationStatus" access="EdFi.Ods.Api.NHibernate.Architecture.EmbeddedObjectPropertyAccessor, EdFi.Ods.Api" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationParticipationStatus" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <!-- Derived classes -->
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociation" lazy="false" discriminator-value="edfi.StudentCTEProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentCTEProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="NonTraditionalGenderStatus" column="NonTraditionalGenderStatus" type="bool" />
          <property name="PrivateCTEProgram" column="PrivateCTEProgram" type="bool" />
          <property name="TechnicalSkillsAssessmentDescriptorId" column="TechnicalSkillsAssessmentDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentCTEProgramAssociationCTEPrograms" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgram" />
          </set>

          <set name="StudentCTEProgramAssociationCTEProgramServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgramService" />
          </set>

          <set name="StudentCTEProgramAssociationServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociation" lazy="false" discriminator-value="edfi.StudentHomelessProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentHomelessProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AwaitingFosterCare" column="AwaitingFosterCare" type="bool" />
          <property name="HomelessPrimaryNighttimeResidenceDescriptorId" column="HomelessPrimaryNighttimeResidenceDescriptorId" type="int" />
          <property name="HomelessUnaccompaniedYouth" column="HomelessUnaccompaniedYouth" type="bool" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentHomelessProgramAssociationHomelessProgramServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociationHomelessProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociation" lazy="false" discriminator-value="edfi.StudentLanguageInstructionProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentLanguageInstructionProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="Dosage" column="Dosage" type="int" />
          <property name="EnglishLearnerParticipation" column="EnglishLearnerParticipation" type="bool" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessments" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment" />
          </set>

          <set name="StudentLanguageInstructionProgramAssociationLanguageInstructionProgramServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociation" lazy="false" discriminator-value="edfi.StudentMigrantEducationProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentMigrantEducationProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="ContinuationOfServicesReasonDescriptorId" column="ContinuationOfServicesReasonDescriptorId" type="int" />
          <property name="EligibilityExpirationDate" column="EligibilityExpirationDate" type="date" />
          <property name="LastQualifyingMove" column="LastQualifyingMove" type="date" not-null="true" />
          <property name="PriorityForServices" column="PriorityForServices" type="bool" not-null="true" />
          <property name="QualifyingArrivalDate" column="QualifyingArrivalDate" type="date" />
          <property name="StateResidencyDate" column="StateResidencyDate" type="date" />
          <property name="USInitialEntry" column="USInitialEntry" type="date" />
          <property name="USInitialSchoolEntry" column="USInitialSchoolEntry" type="date" />
          <property name="USMostRecentEntry" column="USMostRecentEntry" type="date" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentMigrantEducationProgramAssociationMigrantEducationProgramServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociationMigrantEducationProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociation" lazy="false" discriminator-value="edfi.StudentNeglectedOrDelinquentProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentNeglectedOrDelinquentProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="ELAProgressLevelDescriptorId" column="ELAProgressLevelDescriptorId" type="int" />
          <property name="MathematicsProgressLevelDescriptorId" column="MathematicsProgressLevelDescriptorId" type="int" />
          <property name="NeglectedOrDelinquentProgramDescriptorId" column="NeglectedOrDelinquentProgramDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentProgramAssociationAggregate.EdFi.StudentProgramAssociation" lazy="false" discriminator-value="edfi.StudentProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentProgramAssociationServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentProgramAssociationAggregate.EdFi.StudentProgramAssociationService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentSchoolFoodServiceProgramAssociationAggregate.EdFi.StudentSchoolFoodServiceProgramAssociation" lazy="false" discriminator-value="edfi.StudentSchoolFoodServiceProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentSchoolFoodServiceProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="DirectCertification" column="DirectCertification" type="bool" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSchoolFoodServiceProgramAssociationAggregate.EdFi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociation" lazy="false" discriminator-value="edfi.StudentSpecialEducationProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentSpecialEducationProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="IdeaEligibility" column="IdeaEligibility" type="bool" />
          <property name="IEPBeginDate" column="IEPBeginDate" type="date" />
          <property name="IEPEndDate" column="IEPEndDate" type="date" />
          <property name="IEPReviewDate" column="IEPReviewDate" type="date" />
          <property name="LastEvaluationDate" column="LastEvaluationDate" type="date" />
          <property name="MedicallyFragile" column="MedicallyFragile" type="bool" />
          <property name="MultiplyDisabled" column="MultiplyDisabled" type="bool" />
          <property name="SchoolHoursPerWeek" column="SchoolHoursPerWeek" type="decimal" />
          <property name="SpecialEducationHoursPerWeek" column="SpecialEducationHoursPerWeek" type="decimal" />
          <property name="SpecialEducationSettingDescriptorId" column="SpecialEducationSettingDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSpecialEducationProgramAssociationDisabilities" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisability" />
          </set>

          <set name="StudentSpecialEducationProgramAssociationServiceProviders" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationServiceProvider" />
          </set>

          <set name="StudentSpecialEducationProgramAssociationSpecialEducationProgramServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociation" lazy="false" discriminator-value="edfi.StudentTitleIPartAProgramAssociation" persister="EdFi.Ods.Api.NHibernate.Architecture.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Api">
      <join table="StudentTitleIPartAProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="TitleIPartAParticipantDescriptorId" column="TitleIPartAParticipantDescriptorId" type="int" not-null="true" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentTitleIPartAProgramAssociationServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationService" />
          </set>

          <set name="StudentTitleIPartAProgramAssociationTitleIPartAProgramServices" cascade="all-delete-orphan" inverse="true" lazy="false">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationTitleIPartAProgramService" />
          </set>

      </join>
    </subclass>
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationParticipationStatus" table="GeneralStudentProgramAssociationParticipationStatus" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="GeneralStudentProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="ParticipationStatusDescriptorId" column="ParticipationStatusDescriptorId" type="int" not-null="true" />
    <property name="StatusBeginDate" column="StatusBeginDate" type="date" />
    <property name="StatusEndDate" column="StatusEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GradeAggregate.EdFi.GradeReferenceData" table="Grade" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int"  />
            <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int"  />
            <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short"  />
            <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradeAggregate.EdFi.Grade" table="Grade" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int" />
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="LetterGradeEarned" column="LetterGradeEarned" type="string" length="20" />
    <property name="NumericGradeEarned" column="NumericGradeEarned" type="decimal" />
    <property name="PerformanceBaseConversionDescriptorId" column="PerformanceBaseConversionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodSequence" />
      <column name="SchoolId" />
      <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="StudentSectionAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="GradeLearningStandardGrades" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="BeginDate" />
        <column name="GradeTypeDescriptorId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GradeAggregate.EdFi.GradeLearningStandardGrade" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradeAggregate.EdFi.GradeLearningStandardGrade" table="GradeLearningStandardGrade" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="Grade">
        <column name="BeginDate" />
        <column name="GradeTypeDescriptorId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="LetterGradeEarned" column="LetterGradeEarned" type="string" length="20" />
    <property name="NumericGradeEarned" column="NumericGradeEarned" type="decimal" />
    <property name="PerformanceBaseConversionDescriptorId" column="PerformanceBaseConversionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntryReferenceData" table="GradebookEntry" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="DateAssigned" column="DateAssigned" type="date"  />
            <key-property name="GradebookEntryTitle" column="GradebookEntryTitle" type="string"  length="60"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntry" table="GradebookEntry" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DateAssigned" column="DateAssigned" type="date" />
      <key-property name="GradebookEntryTitle" column="GradebookEntryTitle" type="string" length="60" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="DueDate" column="DueDate" type="date" />
    <property name="GradebookEntryTypeDescriptorId" column="GradebookEntryTypeDescriptorId" type="int" />
    <property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
    <property name="PeriodSequence" column="PeriodSequence" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="PeriodSequence" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="GradebookEntryLearningObjectives" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="DateAssigned" />
        <column name="GradebookEntryTitle" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntryLearningObjective" />
    </set>

    <set name="GradebookEntryLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="DateAssigned" />
        <column name="GradebookEntryTitle" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntryLearningStandard" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntryLearningObjective" table="GradebookEntryLearningObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="GradebookEntry">
        <column name="DateAssigned" />
        <column name="GradebookEntryTitle" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningObjectiveId" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntryLearningStandard" table="GradebookEntryLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="GradebookEntry">
        <column name="DateAssigned" />
        <column name="GradebookEntryTitle" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" table="GradingPeriod" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int"  />
            <key-property name="PeriodSequence" column="PeriodSequence" type="int"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriod" table="GradingPeriod" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="PeriodSequence" column="PeriodSequence" type="int" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" not-null="true" />
    <property name="TotalInstructionalDays" column="TotalInstructionalDays" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanReferenceData" table="GraduationPlan" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int"  />
            <key-property name="GraduationSchoolYear" column="GraduationSchoolYear" type="short"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlan" table="GraduationPlan" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int" />
      <key-property name="GraduationSchoolYear" column="GraduationSchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="IndividualPlan" column="IndividualPlan" type="bool" />
    <property name="TotalRequiredCreditConversion" column="TotalRequiredCreditConversion" type="decimal" />
    <property name="TotalRequiredCredits" column="TotalRequiredCredits" type="decimal" not-null="true" />
    <property name="TotalRequiredCreditTypeDescriptorId" column="TotalRequiredCreditTypeDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="GraduationSchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GraduationSchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="GraduationPlanCreditsByCourses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourse" />
    </set>

    <set name="GraduationPlanCreditsByCreditCategories" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCreditCategory" />
    </set>

    <set name="GraduationPlanCreditsBySubjects" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsBySubject" />
    </set>

    <set name="GraduationPlanRequiredAssessments" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessment" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourse" table="GraduationPlanCreditsByCourse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseSetName" column="CourseSetName" type="string" length="120" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CreditConversion" column="CreditConversion" type="decimal" />
    <property name="Credits" column="Credits" type="decimal" not-null="true" />
    <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" />
    <property name="WhenTakenGradeLevelDescriptorId" column="WhenTakenGradeLevelDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="GraduationPlanCreditsByCourseCourses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="CourseSetName" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseCourse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseCourse" table="GraduationPlanCreditsByCourseCourse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseCode" column="CourseCode" type="string" length="60" />
      <key-property name="CourseEducationOrganizationId" column="CourseEducationOrganizationId" type="int" />
      <key-many-to-one name="GraduationPlanCreditsByCourse">
        <column name="CourseSetName" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="CourseReferenceData" class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CourseCode" />
      <column name="CourseEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCreditCategory" table="GraduationPlanCreditsByCreditCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CreditCategoryDescriptorId" column="CreditCategoryDescriptorId" type="int" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CreditConversion" column="CreditConversion" type="decimal" />
    <property name="Credits" column="Credits" type="decimal" not-null="true" />
    <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsBySubject" table="GraduationPlanCreditsBySubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CreditConversion" column="CreditConversion" type="decimal" />
    <property name="Credits" column="Credits" type="decimal" not-null="true" />
    <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessment" table="GraduationPlanRequiredAssessment" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- One-to-one child mappings -->
    <set name="GraduationPlanRequiredAssessmentPerformanceLevel" access="EdFi.Ods.Api.NHibernate.Architecture.EmbeddedObjectPropertyAccessor, EdFi.Ods.Api" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentPerformanceLevel" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="GraduationPlanRequiredAssessmentScores" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentScore" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentPerformanceLevel" table="GraduationPlanRequiredAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="GraduationPlanRequiredAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" not-null="true" />
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" not-null="true" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentScore" table="GraduationPlanRequiredAssessmentScore" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="GraduationPlanRequiredAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionReferenceData" table="Intervention" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.Intervention" table="Intervention" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" />
    <property name="MaxDosage" column="MaxDosage" type="int" />
    <property name="MinDosage" column="MinDosage" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="InterventionAppropriateGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionAppropriateGradeLevel" />
    </set>

    <set name="InterventionAppropriateSexes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionAppropriateSex" />
    </set>

    <set name="InterventionDiagnoses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionDiagnosis" />
    </set>

    <set name="InterventionEducationContents" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionEducationContent" />
    </set>

    <set name="InterventionInterventionPrescriptions" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionInterventionPrescription" />
    </set>

    <set name="InterventionLearningResourceMetadataURIs" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionLearningResourceMetadataURI" />
    </set>

    <set name="InterventionMeetingTimes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionMeetingTime" />
    </set>

    <set name="InterventionPopulationServeds" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionPopulationServed" />
    </set>

    <set name="InterventionStaffs" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionStaff" />
    </set>

    <set name="InterventionURIs" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionURI" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionAppropriateGradeLevel" table="InterventionAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionAppropriateSex" table="InterventionAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionDiagnosis" table="InterventionDiagnosis" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionEducationContent" table="InterventionEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentIdentifier" column="ContentIdentifier" type="string" length="225" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationContentReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ContentIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionInterventionPrescription" table="InterventionInterventionPrescription" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="int" />
      <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="60" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="InterventionPrescriptionReferenceData" class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="InterventionPrescriptionEducationOrganizationId" />
      <column name="InterventionPrescriptionIdentificationCode" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionLearningResourceMetadataURI" table="InterventionLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionMeetingTime" table="InterventionMeetingTime" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EndTime" column="EndTime" type="TimeAsTimeSpan" />
      <key-property name="StartTime" column="StartTime" type="TimeAsTimeSpan" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionPopulationServed" table="InterventionPopulationServed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionStaff" table="InterventionStaff" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionURI" table="InterventionURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="URI" column="URI" type="string" length="255" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionReferenceData" table="InterventionPrescription" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescription" table="InterventionPrescription" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" />
    <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" />
    <property name="MaxDosage" column="MaxDosage" type="int" />
    <property name="MinDosage" column="MinDosage" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="InterventionPrescriptionAppropriateGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateGradeLevel" />
    </set>

    <set name="InterventionPrescriptionAppropriateSexes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateSex" />
    </set>

    <set name="InterventionPrescriptionDiagnoses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionDiagnosis" />
    </set>

    <set name="InterventionPrescriptionEducationContents" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionEducationContent" />
    </set>

    <set name="InterventionPrescriptionLearningResourceMetadataURIs" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionLearningResourceMetadataURI" />
    </set>

    <set name="InterventionPrescriptionPopulationServeds" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionPopulationServed" />
    </set>

    <set name="InterventionPrescriptionURIs" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionURI" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateGradeLevel" table="InterventionPrescriptionAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateSex" table="InterventionPrescriptionAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionDiagnosis" table="InterventionPrescriptionDiagnosis" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionEducationContent" table="InterventionPrescriptionEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentIdentifier" column="ContentIdentifier" type="string" length="225" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationContentReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ContentIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionLearningResourceMetadataURI" table="InterventionPrescriptionLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionPopulationServed" table="InterventionPrescriptionPopulationServed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionURI" table="InterventionPrescriptionURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="URI" column="URI" type="string" length="255" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyReferenceData" table="InterventionStudy" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="InterventionStudyIdentificationCode" column="InterventionStudyIdentificationCode" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudy" table="InterventionStudy" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="InterventionStudyIdentificationCode" column="InterventionStudyIdentificationCode" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" />
    <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" />
    <property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="int" not-null="true" />
    <property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="60" not-null="true" />
    <property name="Participants" column="Participants" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="InterventionPrescriptionReferenceData" class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="InterventionPrescriptionEducationOrganizationId" />
      <column name="InterventionPrescriptionIdentificationCode" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="InterventionStudyAppropriateGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateGradeLevel" />
    </set>

    <set name="InterventionStudyAppropriateSexes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateSex" />
    </set>

    <set name="InterventionStudyEducationContents" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyEducationContent" />
    </set>

    <set name="InterventionStudyInterventionEffectivenesses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyInterventionEffectiveness" />
    </set>

    <set name="InterventionStudyLearningResourceMetadataURIs" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyLearningResourceMetadataURI" />
    </set>

    <set name="InterventionStudyPopulationServeds" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyPopulationServed" />
    </set>

    <set name="InterventionStudyStateAbbreviations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyStateAbbreviation" />
    </set>

    <set name="InterventionStudyURIs" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyURI" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateGradeLevel" table="InterventionStudyAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateSex" table="InterventionStudyAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyEducationContent" table="InterventionStudyEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentIdentifier" column="ContentIdentifier" type="string" length="225" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationContentReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ContentIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyInterventionEffectiveness" table="InterventionStudyInterventionEffectiveness" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ImprovementIndex" column="ImprovementIndex" type="int" />
    <property name="InterventionEffectivenessRatingDescriptorId" column="InterventionEffectivenessRatingDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyLearningResourceMetadataURI" table="InterventionStudyLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyPopulationServed" table="InterventionStudyPopulationServed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyStateAbbreviation" table="InterventionStudyStateAbbreviation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyURI" table="InterventionStudyURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="URI" column="URI" type="string" length="255" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveReferenceData" table="LearningObjective" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string"  length="60"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjective" table="LearningObjective" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />
    <property name="Objective" column="Objective" type="string" length="60" not-null="true" />
    <property name="ParentLearningObjectiveId" column="ParentLearningObjectiveId" type="string" length="60" />
    <property name="ParentNamespace" column="ParentNamespace" type="string" length="255" />
    <property name="SuccessCriteria" column="SuccessCriteria" type="string" length="150" />

    <!-- One-to-one child mappings -->
    <set name="LearningObjectiveContentStandard" access="EdFi.Ods.Api.NHibernate.Architecture.EmbeddedObjectPropertyAccessor, EdFi.Ods.Api" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandard" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="ParentLearningObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ParentLearningObjectiveId" />
      <column name="ParentNamespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="LearningObjectiveAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveAcademicSubject" />
    </set>

    <set name="LearningObjectiveGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveGradeLevel" />
    </set>

    <set name="LearningObjectiveLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveLearningStandard" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveAcademicSubject" table="LearningObjectiveAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="LearningObjective">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandard" table="LearningObjectiveContentStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="LearningObjective">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="MandatingEducationOrganizationId" column="MandatingEducationOrganizationId" type="int" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Title" column="Title" type="string" length="75" not-null="true" />
    <property name="URI" column="URI" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="50" />

    <!-- Aggregate references -->
    <many-to-one name="MandatingEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="MandatingEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="LearningObjectiveContentStandardAuthors" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandardAuthor" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveContentStandardAuthor" table="LearningObjectiveContentStandardAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="100" />
      <key-many-to-one name="LearningObjectiveContentStandard">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveGradeLevel" table="LearningObjectiveGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="LearningObjective">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveLearningStandard" table="LearningObjectiveLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="LearningObjective">
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" table="LearningStandard" lazy="true" >
        <id name="LearningStandardId" column="LearningStandardId" type="string"  length="60" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandard" table="LearningStandard" lazy="false" discriminator-value="NULL">
    <id name="LearningStandardId" column="LearningStandardId" type="string" length="60">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CourseTitle" column="CourseTitle" type="string" length="60" />
    <property name="Description" column="Description" type="string" length="1024" not-null="true" />
    <property name="LearningStandardCategoryDescriptorId" column="LearningStandardCategoryDescriptorId" type="int" />
    <property name="LearningStandardItemCode" column="LearningStandardItemCode" type="string" length="60" />
    <property name="LearningStandardScopeDescriptorId" column="LearningStandardScopeDescriptorId" type="int" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="ParentLearningStandardId" column="ParentLearningStandardId" type="string" length="60" />
    <property name="SuccessCriteria" column="SuccessCriteria" type="string" length="150" />
    <property name="URI" column="URI" type="string" length="255" />

    <!-- One-to-one child mappings -->
    <set name="LearningStandardContentStandard" access="EdFi.Ods.Api.NHibernate.Architecture.EmbeddedObjectPropertyAccessor, EdFi.Ods.Api" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardContentStandard" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="ParentLearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ParentLearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="LearningStandardAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardAcademicSubject" />
    </set>

    <set name="LearningStandardGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardGradeLevel" />
    </set>

    <set name="LearningStandardIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardIdentificationCode" />
    </set>

    <set name="LearningStandardPrerequisiteLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardPrerequisiteLearningStandard" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardAcademicSubject" table="LearningStandardAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardContentStandard" table="LearningStandardContentStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="MandatingEducationOrganizationId" column="MandatingEducationOrganizationId" type="int" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Title" column="Title" type="string" length="75" not-null="true" />
    <property name="URI" column="URI" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="50" />

    <!-- Aggregate references -->
    <many-to-one name="MandatingEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="MandatingEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="LearningStandardContentStandardAuthors" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardContentStandardAuthor" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardContentStandardAuthor" table="LearningStandardContentStandardAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="100" />
      <key-many-to-one name="LearningStandardContentStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardGradeLevel" table="LearningStandardGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardIdentificationCode" table="LearningStandardIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentStandardName" column="ContentStandardName" type="string" length="65" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardPrerequisiteLearningStandard" table="LearningStandardPrerequisiteLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PrerequisiteLearningStandardId" column="PrerequisiteLearningStandardId" type="string" length="60" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="PrerequisiteLearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PrerequisiteLearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LearningStandardEquivalenceAssociationAggregate.EdFi.LearningStandardEquivalenceAssociationReferenceData" table="LearningStandardEquivalenceAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SourceLearningStandardId" column="SourceLearningStandardId" type="string"  length="60"  />
            <key-property name="TargetLearningStandardId" column="TargetLearningStandardId" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardEquivalenceAssociationAggregate.EdFi.LearningStandardEquivalenceAssociation" table="LearningStandardEquivalenceAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SourceLearningStandardId" column="SourceLearningStandardId" type="string" length="60" />
      <key-property name="TargetLearningStandardId" column="TargetLearningStandardId" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EffectiveDate" column="EffectiveDate" type="date" />
    <property name="LearningStandardEquivalenceStrengthDescription" column="LearningStandardEquivalenceStrengthDescription" type="string" length="255" />
    <property name="LearningStandardEquivalenceStrengthDescriptorId" column="LearningStandardEquivalenceStrengthDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SourceLearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SourceLearningStandardId" />
    </many-to-one>
    <many-to-one name="TargetLearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="TargetLearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyAccountability" table="LocalEducationAgencyAccountability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="LocalEducationAgency">
        <column name="LocalEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="GunFreeSchoolsActReportingStatusDescriptorId" column="GunFreeSchoolsActReportingStatusDescriptorId" type="int" />
    <property name="SchoolChoiceImplementStatusDescriptorId" column="SchoolChoiceImplementStatusDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyFederalFunds" table="LocalEducationAgencyFederalFunds" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-many-to-one name="LocalEducationAgency">
        <column name="LocalEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="InnovativeDollarsSpent" column="InnovativeDollarsSpent" type="decimal" />
    <property name="InnovativeDollarsSpentStrategicPriorities" column="InnovativeDollarsSpentStrategicPriorities" type="decimal" />
    <property name="InnovativeProgramsFundsReceived" column="InnovativeProgramsFundsReceived" type="decimal" />
    <property name="SchoolImprovementAllocation" column="SchoolImprovementAllocation" type="decimal" />
    <property name="SchoolImprovementReservedFundsPercentage" column="SchoolImprovementReservedFundsPercentage" type="decimal" />
    <property name="StateAssessmentAdministrationFunding" column="StateAssessmentAdministrationFunding" type="decimal" />
    <property name="SupplementalEducationalServicesFundsSpent" column="SupplementalEducationalServicesFundsSpent" type="decimal" />
    <property name="SupplementalEducationalServicesPerPupilExpenditure" column="SupplementalEducationalServicesPerPupilExpenditure" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LocationAggregate.EdFi.LocationReferenceData" table="Location" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ClassroomIdentificationCode" column="ClassroomIdentificationCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocationAggregate.EdFi.Location" table="Location" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassroomIdentificationCode" column="ClassroomIdentificationCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="MaximumNumberOfSeats" column="MaximumNumberOfSeats" type="int" />
    <property name="OptimalNumberOfSeats" column="OptimalNumberOfSeats" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentReferenceData" table="ObjectiveAssessment" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="60"  />
            <key-property name="IdentificationCode" column="IdentificationCode" type="string"  length="60"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessment" table="ObjectiveAssessment" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="35" />
    <property name="ParentIdentificationCode" column="ParentIdentificationCode" type="string" length="60" />
    <property name="PercentOfAssessment" column="PercentOfAssessment" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="ParentObjectiveAssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="ParentIdentificationCode" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ObjectiveAssessmentAssessmentItems" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentAssessmentItem" />
    </set>

    <set name="ObjectiveAssessmentLearningObjectives" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningObjective" />
    </set>

    <set name="ObjectiveAssessmentLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningStandard" />
    </set>

    <set name="ObjectiveAssessmentPerformanceLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentPerformanceLevel" />
    </set>

    <set name="ObjectiveAssessmentScores" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentScore" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentAssessmentItem" table="ObjectiveAssessmentAssessmentItem" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentItemIdentificationCode" column="AssessmentItemIdentificationCode" type="string" length="60" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AssessmentItemReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="AssessmentItemIdentificationCode" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningObjective" table="ObjectiveAssessmentLearningObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="LearningObjectiveNamespace" column="LearningObjectiveNamespace" type="string" length="255" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningObjectiveId" />
      <column name="LearningObjectiveNamespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningStandard" table="ObjectiveAssessmentLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentPerformanceLevel" table="ObjectiveAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentScore" table="ObjectiveAssessmentScore" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionReferenceData" table="OpenStaffPosition" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="RequisitionNumber" column="RequisitionNumber" type="string"  length="20"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPosition" table="OpenStaffPosition" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="RequisitionNumber" column="RequisitionNumber" type="string" length="20" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="DatePosted" column="DatePosted" type="date" not-null="true" />
    <property name="DatePostingRemoved" column="DatePostingRemoved" type="date" />
    <property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" not-null="true" />
    <property name="PositionTitle" column="PositionTitle" type="string" length="100" />
    <property name="PostingResultDescriptorId" column="PostingResultDescriptorId" type="int" />
    <property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int" />
    <property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="OpenStaffPositionAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionAcademicSubject" />
    </set>

    <set name="OpenStaffPositionInstructionalGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionInstructionalGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionAcademicSubject" table="OpenStaffPositionAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="OpenStaffPosition">
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionInstructionalGradeLevel" table="OpenStaffPositionInstructionalGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="OpenStaffPosition">
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentReferenceData" table="Parent" lazy="true" >
        <id name="ParentUSI" column="ParentUSI" type="int" >
            <generator class="identity" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.Parent" table="Parent" lazy="false" discriminator-value="NULL">
    <id name="ParentUSI" column="ParentUSI" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="LoginId" column="LoginId" type="string" length="60" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="ParentUniqueId" column="ParentUniqueId" type="string" length="32" not-null="true" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ParentAddresses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentAddress" />
    </set>

    <set name="ParentElectronicMails" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentElectronicMail" />
    </set>

    <set name="ParentInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentInternationalAddress" />
    </set>

    <set name="ParentLanguages" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentLanguage" />
    </set>

    <set name="ParentOtherNames" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentOtherName" />
    </set>

    <set name="ParentPersonalIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentPersonalIdentificationDocument" />
    </set>

    <set name="ParentTelephones" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentTelephone" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentAddress" table="ParentAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ParentAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentAddressPeriod" table="ParentAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="ParentAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentElectronicMail" table="ParentElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentInternationalAddress" table="ParentInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentLanguage" table="ParentLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ParentLanguageUses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="ParentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentLanguageUse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentLanguageUse" table="ParentLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="ParentLanguage">
        <column name="LanguageDescriptorId" />
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentOtherName" table="ParentOtherName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentPersonalIdentificationDocument" table="ParentPersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="60" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentTelephone" table="ParentTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="Parent">
        <column name="ParentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PayrollAggregate.EdFi.PayrollReferenceData" table="Payroll" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="AsOfDate" column="AsOfDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PayrollAggregate.EdFi.Payroll" table="Payroll" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AmountToDate" column="AmountToDate" type="decimal" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="AccountReferenceData" class="EdFi.Ods.Entities.NHibernate.AccountAggregate.EdFi.AccountReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AccountIdentifier" />
      <column name="EducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" table="Person" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.Person" table="Person" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PostSecondaryEventAggregate.EdFi.PostSecondaryEventReferenceData" table="PostSecondaryEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="PostSecondaryEventCategoryDescriptorId" column="PostSecondaryEventCategoryDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PostSecondaryEventAggregate.EdFi.PostSecondaryEvent" table="PostSecondaryEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="PostSecondaryEventCategoryDescriptorId" column="PostSecondaryEventCategoryDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="PostSecondaryInstitutionId" column="PostSecondaryInstitutionId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="PostSecondaryInstitutionReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PostSecondaryInstitutionId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionMediumOfInstruction" table="PostSecondaryInstitutionMediumOfInstruction" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MediumOfInstructionDescriptorId" column="MediumOfInstructionDescriptorId" type="int" />
      <key-many-to-one name="PostSecondaryInstitution">
        <column name="PostSecondaryInstitutionId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" table="Program" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.Program" table="Program" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="ProgramId" column="ProgramId" type="string" length="20" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ProgramCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramCharacteristic" />
    </set>

    <set name="ProgramLearningObjectives" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramLearningObjective" />
    </set>

    <set name="ProgramLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramLearningStandard" />
    </set>

    <set name="ProgramServices" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramService" />
    </set>

    <set name="ProgramSponsors" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramSponsor" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramCharacteristic" table="ProgramCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramCharacteristicDescriptorId" column="ProgramCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramLearningObjective" table="ProgramLearningObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningObjectiveId" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramLearningStandard" table="ProgramLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramService" table="ProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramSponsor" table="ProgramSponsor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramSponsorDescriptorId" column="ProgramSponsorDescriptorId" type="int" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardReferenceData" table="ReportCard" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int"  />
            <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int"  />
            <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short"  />
            <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCard" table="ReportCard" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="GPACumulative" column="GPACumulative" type="decimal" />
    <property name="GPAGivenGradingPeriod" column="GPAGivenGradingPeriod" type="decimal" />
    <property name="NumberOfDaysAbsent" column="NumberOfDaysAbsent" type="decimal" />
    <property name="NumberOfDaysInAttendance" column="NumberOfDaysInAttendance" type="decimal" />
    <property name="NumberOfDaysTardy" column="NumberOfDaysTardy" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodSequence" />
      <column name="GradingPeriodSchoolId" />
      <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ReportCardGradePointAverages" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardGradePointAverage" />
    </set>

    <set name="ReportCardGrades" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardGrade" />
    </set>

    <set name="ReportCardStudentCompetencyObjectives" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardStudentCompetencyObjective" />
    </set>

    <set name="ReportCardStudentLearningObjectives" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardStudentLearningObjective" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardGrade" table="ReportCardGrade" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="GradeReferenceData" class="EdFi.Ods.Entities.NHibernate.GradeAggregate.EdFi.GradeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="GradeTypeDescriptorId" />
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodSchoolYear" />
      <column name="GradingPeriodSequence" />
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardGradePointAverage" table="ReportCardGradePointAverage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradePointAverageTypeDescriptorId" column="GradePointAverageTypeDescriptorId" type="int" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="GradePointAverageValue" column="GradePointAverageValue" type="decimal" not-null="true" />
    <property name="IsCumulative" column="IsCumulative" type="bool" />
    <property name="MaxGradePointAverageValue" column="MaxGradePointAverageValue" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardStudentCompetencyObjective" table="ReportCardStudentCompetencyObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Objective" column="Objective" type="string" length="60" />
      <key-property name="ObjectiveEducationOrganizationId" column="ObjectiveEducationOrganizationId" type="int" />
      <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StudentCompetencyObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodSchoolId" />
      <column name="GradingPeriodSchoolYear" />
      <column name="GradingPeriodSequence" />
      <column name="Objective" />
      <column name="ObjectiveEducationOrganizationId" />
      <column name="ObjectiveGradeLevelDescriptorId" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardStudentLearningObjective" table="ReportCardStudentLearningObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StudentLearningObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodSchoolId" />
      <column name="GradingPeriodSchoolYear" />
      <column name="GradingPeriodSequence" />
      <column name="LearningObjectiveId" />
      <column name="Namespace" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEventReferenceData" table="RestraintEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="RestraintEventIdentifier" column="RestraintEventIdentifier" type="string"  length="20"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEvent" table="RestraintEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RestraintEventIdentifier" column="RestraintEventIdentifier" type="string" length="20" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDate" column="EventDate" type="date" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="RestraintEventPrograms" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEventProgram" />
    </set>

    <set name="RestraintEventReasons" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEventReason" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEventProgram" table="RestraintEventProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="RestraintEvent">
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEventReason" table="RestraintEventReason" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RestraintEventReasonDescriptorId" column="RestraintEventReasonDescriptorId" type="int" />
      <key-many-to-one name="RestraintEvent">
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SchoolAggregate.EdFi.SchoolCategory" table="SchoolCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolCategoryDescriptorId" column="SchoolCategoryDescriptorId" type="int" />
      <key-many-to-one name="School">
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SchoolAggregate.EdFi.SchoolGradeLevel" table="SchoolGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="School">
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" table="SchoolYearType" lazy="true" >
        <id name="SchoolYear" column="SchoolYear" type="short" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearType" table="SchoolYearType" lazy="false">
    <id name="SchoolYear" column="SchoolYear" type="short">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CurrentSchoolYear" column="CurrentSchoolYear" type="bool" not-null="true" />
    <property name="SchoolYearDescription" column="SchoolYearDescription" type="string" length="50" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" table="Section" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.Section" table="Section" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AvailableCreditConversion" column="AvailableCreditConversion" type="decimal" />
    <property name="AvailableCredits" column="AvailableCredits" type="decimal" />
    <property name="AvailableCreditTypeDescriptorId" column="AvailableCreditTypeDescriptorId" type="int" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="InstructionLanguageDescriptorId" column="InstructionLanguageDescriptorId" type="int" />
    <property name="LocationClassroomIdentificationCode" column="LocationClassroomIdentificationCode" type="string" length="60" />
    <property name="LocationSchoolId" column="LocationSchoolId" type="int" />
    <property name="MediumOfInstructionDescriptorId" column="MediumOfInstructionDescriptorId" type="int" />
    <property name="OfficialAttendancePeriod" column="OfficialAttendancePeriod" type="bool" />
    <property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
    <property name="SectionName" column="SectionName" type="string" length="100" />
    <property name="SequenceOfCourse" column="SequenceOfCourse" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CourseOfferingReferenceData" class="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="LocationReferenceData" class="EdFi.Ods.Entities.NHibernate.LocationAggregate.EdFi.LocationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocationClassroomIdentificationCode" />
      <column name="LocationSchoolId" />
    </many-to-one>
    <many-to-one name="LocationSchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocationSchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="SectionCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionCharacteristic" />
    </set>

    <set name="SectionClassPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionClassPeriod" />
    </set>

    <set name="SectionCourseLevelCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionCourseLevelCharacteristic" />
    </set>

    <set name="SectionOfferedGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionOfferedGradeLevel" />
    </set>

    <set name="SectionPrograms" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionProgram" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionCharacteristic" table="SectionCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SectionCharacteristicDescriptorId" column="SectionCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionClassPeriod" table="SectionClassPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassPeriodName" column="ClassPeriodName" type="string" length="60" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ClassPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ClassPeriodName" />
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionCourseLevelCharacteristic" table="SectionCourseLevelCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionOfferedGradeLevel" table="SectionOfferedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionProgram" table="SectionProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SectionAttendanceTakenEventAggregate.EdFi.SectionAttendanceTakenEventReferenceData" table="SectionAttendanceTakenEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CalendarCode" column="CalendarCode" type="string"  length="60"  />
            <key-property name="Date" column="Date" type="date"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAttendanceTakenEventAggregate.EdFi.SectionAttendanceTakenEvent" table="SectionAttendanceTakenEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarCode" column="CalendarCode" type="string" length="60" />
      <key-property name="Date" column="Date" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EventDate" column="EventDate" type="date" not-null="true" />
    <property name="StaffUSI" column="StaffUSI" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CalendarDateReferenceData" class="EdFi.Ods.Entities.NHibernate.CalendarDateAggregate.EdFi.CalendarDateReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CalendarCode" />
      <column name="Date" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionReferenceData" table="Session" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.Session" table="Session" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" not-null="true" />
    <property name="TermDescriptorId" column="TermDescriptorId" type="int" not-null="true" />
    <property name="TotalInstructionalDays" column="TotalInstructionalDays" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="SessionAcademicWeeks" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionAcademicWeek" />
    </set>

    <set name="SessionGradingPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionGradingPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionAcademicWeek" table="SessionAcademicWeek" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="WeekIdentifier" column="WeekIdentifier" type="string" length="80" />
      <key-many-to-one name="Session">
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AcademicWeekReferenceData" class="EdFi.Ods.Entities.NHibernate.AcademicWeekAggregate.EdFi.AcademicWeekReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
      <column name="WeekIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionGradingPeriod" table="SessionGradingPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="PeriodSequence" column="PeriodSequence" type="int" />
      <key-many-to-one name="Session">
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="PeriodSequence" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" table="Staff" lazy="true" >
        <id name="StaffUSI" column="StaffUSI" type="int" >
            <generator class="identity" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.Staff" table="Staff" lazy="false" discriminator-value="NULL">
    <id name="StaffUSI" column="StaffUSI" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="BirthDate" column="BirthDate" type="date" />
    <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="HighestCompletedLevelOfEducationDescriptorId" column="HighestCompletedLevelOfEducationDescriptorId" type="int" />
    <property name="HighlyQualifiedTeacher" column="HighlyQualifiedTeacher" type="bool" />
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="LoginId" column="LoginId" type="string" length="60" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="OldEthnicityDescriptorId" column="OldEthnicityDescriptorId" type="int" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    <property name="StaffUniqueId" column="StaffUniqueId" type="string" length="32" not-null="true" />
    <property name="YearsOfPriorProfessionalExperience" column="YearsOfPriorProfessionalExperience" type="decimal" />
    <property name="YearsOfPriorTeachingExperience" column="YearsOfPriorTeachingExperience" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffAddresses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffAddress" />
    </set>

    <set name="StaffCredentials" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffCredential" />
    </set>

    <set name="StaffElectronicMails" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffElectronicMail" />
    </set>

    <set name="StaffIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffIdentificationCode" />
    </set>

    <set name="StaffIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffIdentificationDocument" />
    </set>

    <set name="StaffInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffInternationalAddress" />
    </set>

    <set name="StaffLanguages" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffLanguage" />
    </set>

    <set name="StaffOtherNames" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffOtherName" />
    </set>

    <set name="StaffPersonalIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffPersonalIdentificationDocument" />
    </set>

    <set name="StaffRaces" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffRace" />
    </set>

    <set name="StaffRecognitions" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffRecognition" />
    </set>

    <set name="StaffTelephones" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffTelephone" />
    </set>

    <set name="StaffTribalAffiliations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffTribalAffiliation" />
    </set>

    <set name="StaffVisas" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffVisa" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffAddress" table="StaffAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffAddressPeriod" table="StaffAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StaffAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffCredential" table="StaffCredential" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="60" />
      <key-property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="CredentialReferenceData" class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CredentialIdentifier" />
      <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffElectronicMail" table="StaffElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffIdentificationCode" table="StaffIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffIdentificationSystemDescriptorId" column="StaffIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffIdentificationDocument" table="StaffIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="60" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffInternationalAddress" table="StaffInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffLanguage" table="StaffLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffLanguageUses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffLanguageUse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffLanguageUse" table="StaffLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="StaffLanguage">
        <column name="LanguageDescriptorId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffOtherName" table="StaffOtherName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffPersonalIdentificationDocument" table="StaffPersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="60" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffRace" table="StaffRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffRecognition" table="StaffRecognition" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RecognitionTypeDescriptorId" column="RecognitionTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />
    <property name="RecognitionAwardDate" column="RecognitionAwardDate" type="date" />
    <property name="RecognitionAwardExpiresDate" column="RecognitionAwardExpiresDate" type="date" />
    <property name="RecognitionDescription" column="RecognitionDescription" type="string" length="80" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffTelephone" table="StaffTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffTribalAffiliation" table="StaffTribalAffiliation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffVisa" table="StaffVisa" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="VisaDescriptorId" column="VisaDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffAbsenceEventAggregate.EdFi.StaffAbsenceEventReferenceData" table="StaffAbsenceEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AbsenceEventCategoryDescriptorId" column="AbsenceEventCategoryDescriptorId" type="int"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAbsenceEventAggregate.EdFi.StaffAbsenceEvent" table="StaffAbsenceEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AbsenceEventCategoryDescriptorId" column="AbsenceEventCategoryDescriptorId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AbsenceEventReason" column="AbsenceEventReason" type="string" length="40" />
    <property name="HoursAbsent" column="HoursAbsent" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffCohortAssociationAggregate.EdFi.StaffCohortAssociationReferenceData" table="StaffCohortAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="CohortIdentifier" column="CohortIdentifier" type="string"  length="20"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffCohortAssociationAggregate.EdFi.StaffCohortAssociation" table="StaffCohortAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="CohortIdentifier" column="CohortIdentifier" type="string" length="20" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="StudentRecordAccess" column="StudentRecordAccess" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="CohortReferenceData" class="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CohortIdentifier" />
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationReferenceData" table="StaffDisciplineIncidentAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string"  length="20"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociation" table="StaffDisciplineIncidentAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="20" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="DisciplineIncidentReferenceData" class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="IncidentIdentifier" />
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCodes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCode" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCode" table="StaffDisciplineIncidentAssociationDisciplineIncidentPart_7fa4be" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" />
      <key-many-to-one name="StaffDisciplineIncidentAssociation">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationAssignmentAssociationAggregate.EdFi.StaffEducationOrganizationAssignmentAssociationReferenceData" table="StaffEducationOrganizationAssignmentAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationAssignmentAssociationAggregate.EdFi.StaffEducationOrganizationAssignmentAssociation" table="StaffEducationOrganizationAssignmentAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="60" />
    <property name="EmploymentEducationOrganizationId" column="EmploymentEducationOrganizationId" type="int" />
    <property name="EmploymentHireDate" column="EmploymentHireDate" type="date" />
    <property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="OrderOfAssignment" column="OrderOfAssignment" type="int" />
    <property name="PositionTitle" column="PositionTitle" type="string" length="100" />
    <property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CredentialReferenceData" class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CredentialIdentifier" />
      <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="EmploymentStaffEducationOrganizationEmploymentAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EmploymentEducationOrganizationId" />
      <column name="EmploymentStatusDescriptorId" />
      <column name="EmploymentHireDate" />
      <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationReferenceData" table="StaffEducationOrganizationContactAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ContactTitle" column="ContactTitle" type="string"  length="75"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociation" table="StaffEducationOrganizationContactAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContactTitle" column="ContactTitle" type="string" length="75" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="ContactTypeDescriptorId" column="ContactTypeDescriptorId" type="int" />
    <property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" not-null="true" />

    <!-- One-to-one child mappings -->
    <set name="StaffEducationOrganizationContactAssociationAddress" access="EdFi.Ods.Api.NHibernate.Architecture.EmbeddedObjectPropertyAccessor, EdFi.Ods.Api" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddress" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffEducationOrganizationContactAssociationTelephones" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationTelephone" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddress" table="StaffEducationOrganizationContactAssociationAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StaffEducationOrganizationContactAssociation">
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" not-null="true" />
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="City" column="City" type="string" length="30" not-null="true" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />
    <property name="PostalCode" column="PostalCode" type="string" length="17" not-null="true" />
    <property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" not-null="true" />
    <property name="StreetNumberName" column="StreetNumberName" type="string" length="150" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffEducationOrganizationContactAssociationAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationAddressPeriod" table="StaffEducationOrganizationContactAssociationAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StaffEducationOrganizationContactAssociationAddress">
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationContactAssociationAggregate.EdFi.StaffEducationOrganizationContactAssociationTelephone" table="StaffEducationOrganizationContactAssociationTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="StaffEducationOrganizationContactAssociation">
        <column name="ContactTitle" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationReferenceData" table="StaffEducationOrganizationEmploymentAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int"  />
            <key-property name="HireDate" column="HireDate" type="date"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociation" table="StaffEducationOrganizationEmploymentAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" />
      <key-property name="HireDate" column="HireDate" type="date" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="60" />
    <property name="Department" column="Department" type="string" length="60" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="FullTimeEquivalency" column="FullTimeEquivalency" type="decimal" />
    <property name="HourlyWage" column="HourlyWage" type="decimal" />
    <property name="OfferDate" column="OfferDate" type="date" />
    <property name="SeparationDescriptorId" column="SeparationDescriptorId" type="int" />
    <property name="SeparationReasonDescriptorId" column="SeparationReasonDescriptorId" type="int" />
    <property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CredentialReferenceData" class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CredentialIdentifier" />
      <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffLeaveAggregate.EdFi.StaffLeaveReferenceData" table="StaffLeave" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="StaffLeaveEventCategoryDescriptorId" column="StaffLeaveEventCategoryDescriptorId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffLeaveAggregate.EdFi.StaffLeave" table="StaffLeave" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="StaffLeaveEventCategoryDescriptorId" column="StaffLeaveEventCategoryDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Reason" column="Reason" type="string" length="40" />
    <property name="SubstituteAssigned" column="SubstituteAssigned" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffProgramAssociationAggregate.EdFi.StaffProgramAssociationReferenceData" table="StaffProgramAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffProgramAssociationAggregate.EdFi.StaffProgramAssociation" table="StaffProgramAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="StudentRecordAccess" column="StudentRecordAccess" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationReferenceData" table="StaffSchoolAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociation" table="StaffSchoolAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CalendarCode" column="CalendarCode" type="string" length="60" />
    <property name="SchoolYear" column="SchoolYear" type="short" />

    <!-- Aggregate references -->
    <many-to-one name="CalendarReferenceData" class="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CalendarCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffSchoolAssociationAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationAcademicSubject" />
    </set>

    <set name="StaffSchoolAssociationGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationAcademicSubject" table="StaffSchoolAssociationAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="StaffSchoolAssociation">
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationGradeLevel" table="StaffSchoolAssociationGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="StaffSchoolAssociation">
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffSectionAssociationAggregate.EdFi.StaffSectionAssociationReferenceData" table="StaffSectionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffSectionAssociationAggregate.EdFi.StaffSectionAssociation" table="StaffSectionAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="ClassroomPositionDescriptorId" column="ClassroomPositionDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="HighlyQualifiedTeacher" column="HighlyQualifiedTeacher" type="bool" />
    <property name="PercentageContribution" column="PercentageContribution" type="decimal" />
    <property name="TeacherStudentDataLinkExclusion" column="TeacherStudentDataLinkExclusion" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StateEducationAgencyAggregate.EdFi.StateEducationAgencyAccountability" table="StateEducationAgencyAccountability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="StateEducationAgency">
        <column name="StateEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CTEGraduationRateInclusion" column="CTEGraduationRateInclusion" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StateEducationAgencyAggregate.EdFi.StateEducationAgencyFederalFunds" table="StateEducationAgencyFederalFunds" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-many-to-one name="StateEducationAgency">
        <column name="StateEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FederalProgramsFundingAllocation" column="FederalProgramsFundingAllocation" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" table="Student" lazy="true" >
        <id name="StudentUSI" column="StudentUSI" type="int" >
            <generator class="identity" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.Student" table="Student" lazy="false" discriminator-value="NULL">
    <id name="StudentUSI" column="StudentUSI" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="BirthCity" column="BirthCity" type="string" length="30" />
    <property name="BirthCountryDescriptorId" column="BirthCountryDescriptorId" type="int" />
    <property name="BirthDate" column="BirthDate" type="date" not-null="true" />
    <property name="BirthInternationalProvince" column="BirthInternationalProvince" type="string" length="150" />
    <property name="BirthSexDescriptorId" column="BirthSexDescriptorId" type="int" />
    <property name="BirthStateAbbreviationDescriptorId" column="BirthStateAbbreviationDescriptorId" type="int" />
    <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" />
    <property name="DateEnteredUS" column="DateEnteredUS" type="date" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="MultipleBirthStatus" column="MultipleBirthStatus" type="bool" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    <property name="StudentUniqueId" column="StudentUniqueId" type="string" length="32" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentIdentificationDocument" />
    </set>

    <set name="StudentOtherNames" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentOtherName" />
    </set>

    <set name="StudentPersonalIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentPersonalIdentificationDocument" />
    </set>

    <set name="StudentVisas" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentVisa" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentIdentificationDocument" table="StudentIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="60" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentOtherName" table="StudentOtherName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentPersonalIdentificationDocument" table="StudentPersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="60" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentVisa" table="StudentVisa" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="VisaDescriptorId" column="VisaDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReferenceData" table="StudentAcademicRecord" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecord" table="StudentAcademicRecord" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CumulativeAttemptedCreditConversion" column="CumulativeAttemptedCreditConversion" type="decimal" />
    <property name="CumulativeAttemptedCredits" column="CumulativeAttemptedCredits" type="decimal" />
    <property name="CumulativeAttemptedCreditTypeDescriptorId" column="CumulativeAttemptedCreditTypeDescriptorId" type="int" />
    <property name="CumulativeEarnedCreditConversion" column="CumulativeEarnedCreditConversion" type="decimal" />
    <property name="CumulativeEarnedCredits" column="CumulativeEarnedCredits" type="decimal" />
    <property name="CumulativeEarnedCreditTypeDescriptorId" column="CumulativeEarnedCreditTypeDescriptorId" type="int" />
    <property name="CumulativeGradePointAverage" column="CumulativeGradePointAverage" type="decimal" />
    <property name="CumulativeGradePointsEarned" column="CumulativeGradePointsEarned" type="decimal" />
    <property name="GradeValueQualifier" column="GradeValueQualifier" type="string" length="80" />
    <property name="ProjectedGraduationDate" column="ProjectedGraduationDate" type="date" />
    <property name="SessionAttemptedCreditConversion" column="SessionAttemptedCreditConversion" type="decimal" />
    <property name="SessionAttemptedCredits" column="SessionAttemptedCredits" type="decimal" />
    <property name="SessionAttemptedCreditTypeDescriptorId" column="SessionAttemptedCreditTypeDescriptorId" type="int" />
    <property name="SessionEarnedCreditConversion" column="SessionEarnedCreditConversion" type="decimal" />
    <property name="SessionEarnedCredits" column="SessionEarnedCredits" type="decimal" />
    <property name="SessionEarnedCreditTypeDescriptorId" column="SessionEarnedCreditTypeDescriptorId" type="int" />
    <property name="SessionGradePointAverage" column="SessionGradePointAverage" type="decimal" />
    <property name="SessionGradePointsEarned" column="SessionGradePointsEarned" type="decimal" />

    <!-- One-to-one child mappings -->
    <set name="StudentAcademicRecordClassRanking" access="EdFi.Ods.Api.NHibernate.Architecture.EmbeddedObjectPropertyAccessor, EdFi.Ods.Api" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordClassRanking" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentAcademicRecordAcademicHonors" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordAcademicHonor" />
    </set>

    <set name="StudentAcademicRecordDiplomas" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordDiploma" />
    </set>

    <set name="StudentAcademicRecordGradePointAverages" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordGradePointAverage" />
    </set>

    <set name="StudentAcademicRecordRecognitions" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordRecognition" />
    </set>

    <set name="StudentAcademicRecordReportCards" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReportCard" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordAcademicHonor" table="StudentAcademicRecordAcademicHonor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicHonorCategoryDescriptorId" column="AcademicHonorCategoryDescriptorId" type="int" />
      <key-property name="HonorDescription" column="HonorDescription" type="string" length="80" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="HonorAwardDate" column="HonorAwardDate" type="date" />
    <property name="HonorAwardExpiresDate" column="HonorAwardExpiresDate" type="date" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordClassRanking" table="StudentAcademicRecordClassRanking" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ClassRank" column="ClassRank" type="int" not-null="true" />
    <property name="ClassRankingDate" column="ClassRankingDate" type="date" />
    <property name="PercentageRanking" column="PercentageRanking" type="int" />
    <property name="TotalNumberInClass" column="TotalNumberInClass" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordDiploma" table="StudentAcademicRecordDiploma" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiplomaAwardDate" column="DiplomaAwardDate" type="date" />
      <key-property name="DiplomaTypeDescriptorId" column="DiplomaTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="CTECompleter" column="CTECompleter" type="bool" />
    <property name="DiplomaAwardExpiresDate" column="DiplomaAwardExpiresDate" type="date" />
    <property name="DiplomaDescription" column="DiplomaDescription" type="string" length="80" />
    <property name="DiplomaLevelDescriptorId" column="DiplomaLevelDescriptorId" type="int" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordGradePointAverage" table="StudentAcademicRecordGradePointAverage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradePointAverageTypeDescriptorId" column="GradePointAverageTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="GradePointAverageValue" column="GradePointAverageValue" type="decimal" not-null="true" />
    <property name="IsCumulative" column="IsCumulative" type="bool" />
    <property name="MaxGradePointAverageValue" column="MaxGradePointAverageValue" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordRecognition" table="StudentAcademicRecordRecognition" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RecognitionTypeDescriptorId" column="RecognitionTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />
    <property name="RecognitionAwardDate" column="RecognitionAwardDate" type="date" />
    <property name="RecognitionAwardExpiresDate" column="RecognitionAwardExpiresDate" type="date" />
    <property name="RecognitionDescription" column="RecognitionDescription" type="string" length="80" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReportCard" table="StudentAcademicRecordReportCard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ReportCardReferenceData" class="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodSchoolId" />
      <column name="GradingPeriodSchoolYear" />
      <column name="GradingPeriodSequence" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentReferenceData" table="StudentAssessment" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="60"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StudentAssessmentIdentifier" column="StudentAssessmentIdentifier" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessment" table="StudentAssessment" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StudentAssessmentIdentifier" column="StudentAssessmentIdentifier" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AdministrationDate" column="AdministrationDate" type="UtcDateTime" not-null="true" />
    <property name="AdministrationEndDate" column="AdministrationEndDate" type="UtcDateTime" />
    <property name="AdministrationEnvironmentDescriptorId" column="AdministrationEnvironmentDescriptorId" type="int" />
    <property name="AdministrationLanguageDescriptorId" column="AdministrationLanguageDescriptorId" type="int" />
    <property name="EventCircumstanceDescriptorId" column="EventCircumstanceDescriptorId" type="int" />
    <property name="EventDescription" column="EventDescription" type="string" length="1024" />
    <property name="PlatformTypeDescriptorId" column="PlatformTypeDescriptorId" type="int" />
    <property name="ReasonNotTestedDescriptorId" column="ReasonNotTestedDescriptorId" type="int" />
    <property name="RetestIndicatorDescriptorId" column="RetestIndicatorDescriptorId" type="int" />
    <property name="SchoolYear" column="SchoolYear" type="short" />
    <property name="SerialNumber" column="SerialNumber" type="string" length="60" />
    <property name="WhenAssessedGradeLevelDescriptorId" column="WhenAssessedGradeLevelDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentAssessmentAccommodations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentAccommodation" />
    </set>

    <set name="StudentAssessmentItems" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentItem" />
    </set>

    <set name="StudentAssessmentPerformanceLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentPerformanceLevel" />
    </set>

    <set name="StudentAssessmentScoreResults" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentScoreResult" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessments" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessment" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentAccommodation" table="StudentAssessmentAccommodation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccommodationDescriptorId" column="AccommodationDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentItem" table="StudentAssessmentItem" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssessmentItemResultDescriptorId" column="AssessmentItemResultDescriptorId" type="int" not-null="true" />
    <property name="AssessmentResponse" column="AssessmentResponse" type="string" length="60" />
    <property name="DescriptiveFeedback" column="DescriptiveFeedback" type="string" length="1024" />
    <property name="RawScoreResult" column="RawScoreResult" type="decimal" />
    <property name="ResponseIndicatorDescriptorId" column="ResponseIndicatorDescriptorId" type="int" />
    <property name="TimeAssessed" column="TimeAssessed" type="string" length="30" />

    <!-- Aggregate references -->
    <many-to-one name="AssessmentItemReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="IdentificationCode" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentPerformanceLevel" table="StudentAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PerformanceLevelMet" column="PerformanceLevelMet" type="bool" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentScoreResult" table="StudentAssessmentScoreResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Result" column="Result" type="string" length="35" not-null="true" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessment" table="StudentAssessmentStudentObjectiveAssessment" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="60" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ObjectiveAssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="IdentificationCode" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentAssessmentStudentObjectiveAssessmentPerformanceLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevel" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessmentScoreResults" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentScoreResult" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevel" table="StudentAssessmentStudentObjectiveAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessmentStudentObjectiveAssessment">
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PerformanceLevelMet" column="PerformanceLevelMet" type="bool" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentScoreResult" table="StudentAssessmentStudentObjectiveAssessmentScoreResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessmentStudentObjectiveAssessment">
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Result" column="Result" type="string" length="35" not-null="true" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationReferenceData" table="StudentCohortAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="CohortIdentifier" column="CohortIdentifier" type="string"  length="20"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociation" table="StudentCohortAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="CohortIdentifier" column="CohortIdentifier" type="string" length="20" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="CohortReferenceData" class="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CohortIdentifier" />
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentCohortAssociationSections" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="BeginDate" />
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationSection" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationSection" table="StudentCohortAssociationSection" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-many-to-one name="StudentCohortAssociation">
        <column name="BeginDate" />
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveReferenceData" table="StudentCompetencyObjective" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int"  />
            <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int"  />
            <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short"  />
            <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int"  />
            <key-property name="Objective" column="Objective" type="string"  length="60"  />
            <key-property name="ObjectiveEducationOrganizationId" column="ObjectiveEducationOrganizationId" type="int"  />
            <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjective" table="StudentCompetencyObjective" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int" />
      <key-property name="Objective" column="Objective" type="string" length="60" />
      <key-property name="ObjectiveEducationOrganizationId" column="ObjectiveEducationOrganizationId" type="int" />
      <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" not-null="true" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />

    <!-- Aggregate references -->
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodSequence" />
      <column name="GradingPeriodSchoolId" />
      <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="ObjectiveCompetencyObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.CompetencyObjectiveAggregate.EdFi.CompetencyObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ObjectiveEducationOrganizationId" />
      <column name="Objective" />
      <column name="ObjectiveGradeLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentCompetencyObjectiveGeneralStudentProgramAssociations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveGeneralStudentProgramAssociation" />
    </set>

    <set name="StudentCompetencyObjectiveStudentSectionAssociations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveStudentSectionAssociation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveGeneralStudentProgramAssociation" table="StudentCompetencyObjectiveGeneralStudentProgramAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentCompetencyObjective">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="GeneralStudentProgramAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="EducationOrganizationId" />
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveStudentSectionAssociation" table="StudentCompetencyObjectiveStudentSectionAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-many-to-one name="StudentCompetencyObjective">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StudentSectionAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgram" table="StudentCTEProgramAssociationCTEProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CareerPathwayDescriptorId" column="CareerPathwayDescriptorId" type="int" />
      <key-many-to-one name="StudentCTEProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CIPCode" column="CIPCode" type="string" length="120" />
    <property name="CTEProgramCompletionIndicator" column="CTEProgramCompletionIndicator" type="bool" />
    <property name="PrimaryCTEProgramIndicator" column="PrimaryCTEProgramIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgramService" table="StudentCTEProgramAssociationCTEProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CTEProgramServiceDescriptorId" column="CTEProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentCTEProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CIPCode" column="CIPCode" type="string" length="120" />
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationService" table="StudentCTEProgramAssociationService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentCTEProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationReferenceData" table="StudentDisciplineIncidentAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string"  length="20"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociation" table="StudentDisciplineIncidentAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="20" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="StudentParticipationCodeDescriptorId" column="StudentParticipationCodeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="DisciplineIncidentReferenceData" class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="IncidentIdentifier" />
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentDisciplineIncidentAssociationBehaviors" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationBehavior" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentAssociationAggregate.EdFi.StudentDisciplineIncidentAssociationBehavior" table="StudentDisciplineIncidentAssociationBehavior" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int" />
      <key-many-to-one name="StudentDisciplineIncidentAssociation">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BehaviorDetailedDescription" column="BehaviorDetailedDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationReferenceData" table="StudentEducationOrganizationAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociation" table="StudentEducationOrganizationAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="LimitedEnglishProficiencyDescriptorId" column="LimitedEnglishProficiencyDescriptorId" type="int" />
    <property name="LoginId" column="LoginId" type="string" length="60" />
    <property name="OldEthnicityDescriptorId" column="OldEthnicityDescriptorId" type="int" />
    <property name="ProfileThumbnail" column="ProfileThumbnail" type="string" length="255" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationAddresses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddress" />
    </set>

    <set name="StudentEducationOrganizationAssociationCohortYears" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationCohortYear" />
    </set>

    <set name="StudentEducationOrganizationAssociationDisabilities" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisability" />
    </set>

    <set name="StudentEducationOrganizationAssociationElectronicMails" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationElectronicMail" />
    </set>

    <set name="StudentEducationOrganizationAssociationInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationInternationalAddress" />
    </set>

    <set name="StudentEducationOrganizationAssociationLanguages" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguage" />
    </set>

    <set name="StudentEducationOrganizationAssociationProgramParticipations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationProgramParticipation" />
    </set>

    <set name="StudentEducationOrganizationAssociationRaces" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationRace" />
    </set>

    <set name="StudentEducationOrganizationAssociationStudentCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristic" />
    </set>

    <set name="StudentEducationOrganizationAssociationStudentIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIdentificationCode" />
    </set>

    <set name="StudentEducationOrganizationAssociationStudentIndicators" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicator" />
    </set>

    <set name="StudentEducationOrganizationAssociationTelephones" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTelephone" />
    </set>

    <set name="StudentEducationOrganizationAssociationTribalAffiliations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTribalAffiliation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddress" table="StudentEducationOrganizationAssociationAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressPeriod" table="StudentEducationOrganizationAssociationAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentEducationOrganizationAssociationAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationCohortYear" table="StudentEducationOrganizationAssociationCohortYear" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CohortYearTypeDescriptorId" column="CohortYearTypeDescriptorId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisability" table="StudentEducationOrganizationAssociationDisability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" />
    <property name="DisabilityDiagnosis" column="DisabilityDiagnosis" type="string" length="80" />
    <property name="OrderOfDisability" column="OrderOfDisability" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationDisabilityDesignations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="DisabilityDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityDesignation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityDesignation" table="StudentEducationOrganizationAssociationDisabilityDesignation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociationDisability">
        <column name="DisabilityDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationElectronicMail" table="StudentEducationOrganizationAssociationElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationInternationalAddress" table="StudentEducationOrganizationAssociationInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguage" table="StudentEducationOrganizationAssociationLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationLanguageUses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguageUse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguageUse" table="StudentEducationOrganizationAssociationLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociationLanguage">
        <column name="LanguageDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationProgramParticipation" table="StudentEducationOrganizationAssociationProgramParticipation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="ProgramTypeDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic" table="StudentEducationOrganizationAssociationProgramParticipat_810575" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramCharacteristicDescriptorId" column="ProgramCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociationProgramParticipation">
        <column name="ProgramTypeDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationRace" table="StudentEducationOrganizationAssociationRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristic" table="StudentEducationOrganizationAssociationStudentCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StudentCharacteristicDescriptorId" column="StudentCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationStudentCharacteristicPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="StudentCharacteristicDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristicPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristicPeriod" table="StudentEducationOrganizationAssociationStudentCharacteri_a18fcf" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentEducationOrganizationAssociationStudentCharacteristic">
        <column name="StudentCharacteristicDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIdentificationCode" table="StudentEducationOrganizationAssociationStudentIdentifica_c15030" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
      <key-property name="StudentIdentificationSystemDescriptorId" column="StudentIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="60" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicator" table="StudentEducationOrganizationAssociationStudentIndicator" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IndicatorName" column="IndicatorName" type="string" length="200" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="Indicator" column="Indicator" type="string" length="35" not-null="true" />
    <property name="IndicatorGroup" column="IndicatorGroup" type="string" length="200" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationStudentIndicatorPeriods" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="IndicatorName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicatorPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicatorPeriod" table="StudentEducationOrganizationAssociationStudentIndicatorPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentEducationOrganizationAssociationStudentIndicator">
        <column name="IndicatorName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTelephone" table="StudentEducationOrganizationAssociationTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTribalAffiliation" table="StudentEducationOrganizationAssociationTribalAffiliation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationResponsibilityAssociationAggregate.EdFi.StudentEducationOrganizationResponsibilityAssociationReferenceData" table="StudentEducationOrganizationResponsibilityAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="ResponsibilityDescriptorId" column="ResponsibilityDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationResponsibilityAssociationAggregate.EdFi.StudentEducationOrganizationResponsibilityAssociation" table="StudentEducationOrganizationResponsibilityAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ResponsibilityDescriptorId" column="ResponsibilityDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentGradebookEntryAggregate.EdFi.StudentGradebookEntryReferenceData" table="StudentGradebookEntry" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="DateAssigned" column="DateAssigned" type="date"  />
            <key-property name="GradebookEntryTitle" column="GradebookEntryTitle" type="string"  length="60"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentGradebookEntryAggregate.EdFi.StudentGradebookEntry" table="StudentGradebookEntry" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="DateAssigned" column="DateAssigned" type="date" />
      <key-property name="GradebookEntryTitle" column="GradebookEntryTitle" type="string" length="60" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" />
    <property name="DateFulfilled" column="DateFulfilled" type="date" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="LetterGradeEarned" column="LetterGradeEarned" type="string" length="20" />
    <property name="NumericGradeEarned" column="NumericGradeEarned" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="GradebookEntryReferenceData" class="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntryReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="DateAssigned" />
      <column name="GradebookEntryTitle" />
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StudentSectionAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociationHomelessProgramService" table="StudentHomelessProgramAssociationHomelessProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="HomelessProgramServiceDescriptorId" column="HomelessProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentHomelessProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationReferenceData" table="StudentInterventionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociation" table="StudentInterventionAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CohortEducationOrganizationId" column="CohortEducationOrganizationId" type="int" />
    <property name="CohortIdentifier" column="CohortIdentifier" type="string" length="20" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="Dosage" column="Dosage" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CohortReferenceData" class="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CohortIdentifier" />
      <column name="CohortEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="InterventionReferenceData" class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="InterventionIdentificationCode" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentInterventionAssociationInterventionEffectivenesses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationInterventionEffectiveness" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationInterventionEffectiveness" table="StudentInterventionAssociationInterventionEffectiveness" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="StudentInterventionAssociation">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ImprovementIndex" column="ImprovementIndex" type="int" />
    <property name="InterventionEffectivenessRatingDescriptorId" column="InterventionEffectivenessRatingDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentInterventionAttendanceEventAggregate.EdFi.StudentInterventionAttendanceEventReferenceData" table="StudentInterventionAttendanceEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentInterventionAttendanceEventAggregate.EdFi.StudentInterventionAttendanceEvent" table="StudentInterventionAttendanceEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="InterventionDuration" column="InterventionDuration" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="InterventionReferenceData" class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="InterventionIdentificationCode" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment" table="StudentLanguageInstructionProgramAssociationEnglishLangu_1ac620" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="StudentLanguageInstructionProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MonitoredDescriptorId" column="MonitoredDescriptorId" type="int" />
    <property name="ParticipationDescriptorId" column="ParticipationDescriptorId" type="int" />
    <property name="ProficiencyDescriptorId" column="ProficiencyDescriptorId" type="int" />
    <property name="ProgressDescriptorId" column="ProgressDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService" table="StudentLanguageInstructionProgramAssociationLanguageInst_268e07" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageInstructionProgramServiceDescriptorId" column="LanguageInstructionProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentLanguageInstructionProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveReferenceData" table="StudentLearningObjective" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int"  />
            <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int"  />
            <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short"  />
            <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int"  />
            <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string"  length="60"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjective" table="StudentLearningObjective" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="int" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="GradingPeriodSequence" column="GradingPeriodSequence" type="int" />
      <key-property name="LearningObjectiveId" column="LearningObjectiveId" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" not-null="true" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />

    <!-- Aggregate references -->
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodSequence" />
      <column name="GradingPeriodSchoolId" />
      <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="LearningObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningObjectiveAggregate.EdFi.LearningObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningObjectiveId" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentLearningObjectiveGeneralStudentProgramAssociations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveGeneralStudentProgramAssociation" />
    </set>

    <set name="StudentLearningObjectiveStudentSectionAssociations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveStudentSectionAssociation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveGeneralStudentProgramAssociation" table="StudentLearningObjectiveGeneralStudentProgramAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentLearningObjective">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="GeneralStudentProgramAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="EducationOrganizationId" />
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentLearningObjectiveAggregate.EdFi.StudentLearningObjectiveStudentSectionAssociation" table="StudentLearningObjectiveStudentSectionAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-many-to-one name="StudentLearningObjective">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="GradingPeriodSequence" />
        <column name="LearningObjectiveId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StudentSectionAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociationMigrantEducationProgramService" table="StudentMigrantEducationProgramAssociationMigrantEducatio_d9dcd7" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MigrantEducationProgramServiceDescriptorId" column="MigrantEducationProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentMigrantEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService" table="StudentNeglectedOrDelinquentProgramAssociationNeglectedO_520251" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="NeglectedOrDelinquentProgramServiceDescriptorId" column="NeglectedOrDelinquentProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentNeglectedOrDelinquentProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentParentAssociationAggregate.EdFi.StudentParentAssociationReferenceData" table="StudentParentAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ParentUSI" column="ParentUSI" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentParentAssociationAggregate.EdFi.StudentParentAssociation" table="StudentParentAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ParentUSI" column="ParentUSI" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="ContactPriority" column="ContactPriority" type="int" />
    <property name="ContactRestrictions" column="ContactRestrictions" type="string" length="250" />
    <property name="EmergencyContactStatus" column="EmergencyContactStatus" type="bool" />
    <property name="LivesWith" column="LivesWith" type="bool" />
    <property name="PrimaryContactStatus" column="PrimaryContactStatus" type="bool" />
    <property name="RelationDescriptorId" column="RelationDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ParentReferenceData" class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ParentUSI" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentProgramAssociationAggregate.EdFi.StudentProgramAssociationService" table="StudentProgramAssociationService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentProgramAttendanceEventAggregate.EdFi.StudentProgramAttendanceEventReferenceData" table="StudentProgramAttendanceEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentProgramAttendanceEventAggregate.EdFi.StudentProgramAttendanceEvent" table="StudentProgramAttendanceEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="ProgramAttendanceDuration" column="ProgramAttendanceDuration" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationReferenceData" table="StudentSchoolAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EntryDate" column="EntryDate" type="date"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociation" table="StudentSchoolAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EntryDate" column="EntryDate" type="date" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="CalendarCode" column="CalendarCode" type="string" length="60" />
    <property name="ClassOfSchoolYear" column="ClassOfSchoolYear" type="short" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
    <property name="EmployedWhileEnrolled" column="EmployedWhileEnrolled" type="bool" />
    <property name="EntryGradeLevelDescriptorId" column="EntryGradeLevelDescriptorId" type="int" not-null="true" />
    <property name="EntryGradeLevelReasonDescriptorId" column="EntryGradeLevelReasonDescriptorId" type="int" />
    <property name="EntryTypeDescriptorId" column="EntryTypeDescriptorId" type="int" />
    <property name="ExitWithdrawDate" column="ExitWithdrawDate" type="date" />
    <property name="ExitWithdrawTypeDescriptorId" column="ExitWithdrawTypeDescriptorId" type="int" />
    <property name="FullTimeEquivalency" column="FullTimeEquivalency" type="decimal" />
    <property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int" />
    <property name="GraduationSchoolYear" column="GraduationSchoolYear" type="short" />
    <property name="PrimarySchool" column="PrimarySchool" type="bool" />
    <property name="RepeatGradeIndicator" column="RepeatGradeIndicator" type="bool" />
    <property name="ResidencyStatusDescriptorId" column="ResidencyStatusDescriptorId" type="int" />
    <property name="SchoolChoiceTransfer" column="SchoolChoiceTransfer" type="bool" />
    <property name="SchoolYear" column="SchoolYear" type="short" />
    <property name="TermCompletionIndicator" column="TermCompletionIndicator" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="CalendarReferenceData" class="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CalendarCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="ClassOfSchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ClassOfSchoolYear" />
    </many-to-one>
    <many-to-one name="GraduationPlanReferenceData" class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="GraduationPlanTypeDescriptorId" />
      <column name="GraduationSchoolYear" />
    </many-to-one>
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentSchoolAssociationAlternativeGraduationPlans" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationAlternativeGraduationPlan" />
    </set>

    <set name="StudentSchoolAssociationEducationPlans" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationEducationPlan" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationAlternativeGraduationPlan" table="StudentSchoolAssociationAlternativeGraduationPlan" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AlternativeEducationOrganizationId" column="AlternativeEducationOrganizationId" type="int" />
      <key-property name="AlternativeGraduationPlanTypeDescriptorId" column="AlternativeGraduationPlanTypeDescriptorId" type="int" />
      <key-property name="AlternativeGraduationSchoolYear" column="AlternativeGraduationSchoolYear" type="short" />
      <key-many-to-one name="StudentSchoolAssociation">
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AlternativeGraduationPlanReferenceData" class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AlternativeEducationOrganizationId" />
      <column name="AlternativeGraduationPlanTypeDescriptorId" />
      <column name="AlternativeGraduationSchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationEducationPlan" table="StudentSchoolAssociationEducationPlan" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationPlanDescriptorId" column="EducationPlanDescriptorId" type="int" />
      <key-many-to-one name="StudentSchoolAssociation">
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAttendanceEventAggregate.EdFi.StudentSchoolAttendanceEventReferenceData" table="StudentSchoolAttendanceEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAttendanceEventAggregate.EdFi.StudentSchoolAttendanceEvent" table="StudentSchoolAttendanceEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="ArrivalTime" column="ArrivalTime" type="TimeAsTimeSpan" />
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="DepartureTime" column="DepartureTime" type="TimeAsTimeSpan" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="SchoolAttendanceDuration" column="SchoolAttendanceDuration" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SessionReferenceData" class="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolFoodServiceProgramAssociationAggregate.EdFi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService" table="StudentSchoolFoodServiceProgramAssociationSchoolFoodServ_85a0eb" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolFoodServiceProgramServiceDescriptorId" column="SchoolFoodServiceProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentSchoolFoodServiceProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationReferenceData" table="StudentSectionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociation" table="StudentSectionAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AttemptStatusDescriptorId" column="AttemptStatusDescriptorId" type="int" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="HomeroomIndicator" column="HomeroomIndicator" type="bool" />
    <property name="RepeatIdentifierDescriptorId" column="RepeatIdentifierDescriptorId" type="int" />
    <property name="TeacherStudentDataLinkExclusion" column="TeacherStudentDataLinkExclusion" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEventReferenceData" table="StudentSectionAttendanceEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEvent" table="StudentSectionAttendanceEvent" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="ArrivalTime" column="ArrivalTime" type="TimeAsTimeSpan" />
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="DepartureTime" column="DepartureTime" type="TimeAsTimeSpan" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="SectionAttendanceDuration" column="SectionAttendanceDuration" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisability" table="StudentSpecialEducationProgramAssociationDisability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" />
    <property name="DisabilityDiagnosis" column="DisabilityDiagnosis" type="string" length="80" />
    <property name="OrderOfDisability" column="OrderOfDisability" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentSpecialEducationProgramAssociationDisabilityDesignations" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="DisabilityDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityDesignation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityDesignation" table="StudentSpecialEducationProgramAssociationDisabilityDesignation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociationDisability">
        <column name="DisabilityDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationServiceProvider" table="StudentSpecialEducationProgramAssociationServiceProvider" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryProvider" column="PrimaryProvider" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramService" table="StudentSpecialEducationProgramAssociationSpecialEducatio_a51ff9" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SpecialEducationProgramServiceDescriptorId" column="SpecialEducationProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProviders" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="SpecialEducationProgramServiceDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider" table="StudentSpecialEducationProgramAssociationSpecialEducatio_bcba5c" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociationSpecialEducationProgramService">
        <column name="SpecialEducationProgramServiceDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryProvider" column="PrimaryProvider" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationService" table="StudentTitleIPartAProgramAssociationService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentTitleIPartAProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationTitleIPartAProgramService" table="StudentTitleIPartAProgramAssociationTitleIPartAProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TitleIPartAProgramServiceDescriptorId" column="TitleIPartAProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentTitleIPartAProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" table="Survey" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.Survey" table="Survey" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
    <property name="NumberAdministered" column="NumberAdministered" type="int" />
    <property name="SchoolId" column="SchoolId" type="int" />
    <property name="SchoolYear" column="SchoolYear" type="short" not-null="true" />
    <property name="SessionName" column="SessionName" type="string" length="60" />
    <property name="SurveyCategoryDescriptorId" column="SurveyCategoryDescriptorId" type="int" />
    <property name="SurveyTitle" column="SurveyTitle" type="string" length="255" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="SessionReferenceData" class="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyCourseAssociationAggregate.EdFi.SurveyCourseAssociationReferenceData" table="SurveyCourseAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CourseCode" column="CourseCode" type="string"  length="60"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyCourseAssociationAggregate.EdFi.SurveyCourseAssociation" table="SurveyCourseAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseCode" column="CourseCode" type="string" length="60" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="CourseReferenceData" class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CourseCode" />
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyProgramAssociationAggregate.EdFi.SurveyProgramAssociationReferenceData" table="SurveyProgramAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyProgramAssociationAggregate.EdFi.SurveyProgramAssociation" table="SurveyProgramAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionReferenceData" table="SurveyQuestion" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="QuestionCode" column="QuestionCode" type="string"  length="60"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestion" table="SurveyQuestion" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="QuestionCode" column="QuestionCode" type="string" length="60" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="QuestionFormDescriptorId" column="QuestionFormDescriptorId" type="int" not-null="true" />
    <property name="QuestionText" column="QuestionText" type="string" length="1024" not-null="true" />
    <property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />

    <!-- Aggregate references -->
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>
    <many-to-one name="SurveySectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveySectionAggregate.EdFi.SurveySectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="SurveyQuestionMatrices" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionMatrix" />
    </set>

    <set name="SurveyQuestionResponseChoices" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionResponseChoice" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionMatrix" table="SurveyQuestionMatrix" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MatrixElement" column="MatrixElement" type="string" length="255" />
      <key-many-to-one name="SurveyQuestion">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxRawScore" column="MaxRawScore" type="int" />
    <property name="MinRawScore" column="MinRawScore" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionResponseChoice" table="SurveyQuestionResponseChoice" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SortOrder" column="SortOrder" type="int" />
      <key-many-to-one name="SurveyQuestion">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="NumericValue" column="NumericValue" type="int" />
    <property name="TextValue" column="TextValue" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseReferenceData" table="SurveyQuestionResponse" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="QuestionCode" column="QuestionCode" type="string"  length="60"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponse" table="SurveyQuestionResponse" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="QuestionCode" column="QuestionCode" type="string" length="60" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="Comment" column="Comment" type="string" length="1024" />
    <property name="NoResponse" column="NoResponse" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="SurveyQuestionReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="QuestionCode" />
      <column name="SurveyIdentifier" />
    </many-to-one>
    <many-to-one name="SurveyResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="SurveyQuestionResponseSurveyQuestionMatrixElementResponses" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseSurveyQuestionMatrixElementResponse" />
    </set>

    <set name="SurveyQuestionResponseValues" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseValue" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseSurveyQuestionMatrixElementResponse" table="SurveyQuestionResponseSurveyQuestionMatrixElementResponse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MatrixElement" column="MatrixElement" type="string" length="255" />
      <key-many-to-one name="SurveyQuestionResponse">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxNumericResponse" column="MaxNumericResponse" type="int" />
    <property name="MinNumericResponse" column="MinNumericResponse" type="int" />
    <property name="NoResponse" column="NoResponse" type="bool" />
    <property name="NumericResponse" column="NumericResponse" type="int" />
    <property name="TextResponse" column="TextResponse" type="string" length="2048" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseValue" table="SurveyQuestionResponseValue" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SurveyQuestionResponseValueIdentifier" column="SurveyQuestionResponseValueIdentifier" type="int" />
      <key-many-to-one name="SurveyQuestionResponse">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="NumericResponse" column="NumericResponse" type="int" />
    <property name="TextResponse" column="TextResponse" type="string" length="2048" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" table="SurveyResponse" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponse" table="SurveyResponse" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
    <property name="FullName" column="FullName" type="string" length="80" />
    <property name="Location" column="Location" type="string" length="75" />
    <property name="ParentUSI" column="ParentUSI" type="int" />
    <property name="ResponseDate" column="ResponseDate" type="date" not-null="true" />
    <property name="ResponseTime" column="ResponseTime" type="int" />
    <property name="StaffUSI" column="StaffUSI" type="int" />
    <property name="StudentUSI" column="StudentUSI" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ParentReferenceData" class="EdFi.Ods.Entities.NHibernate.ParentAggregate.EdFi.ParentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ParentUSI" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="SurveyResponseSurveyLevels" cascade="all-delete-orphan" inverse="true" lazy="false">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseSurveyLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseSurveyLevel" table="SurveyResponseSurveyLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SurveyLevelDescriptorId" column="SurveyLevelDescriptorId" type="int" />
      <key-many-to-one name="SurveyResponse">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveyResponseEducationOrganizationTargetAssociationReferenceData" table="SurveyResponseEducationOrganizationTargetAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveyResponseEducationOrganizationTargetAssociation" table="SurveyResponseEducationOrganizationTargetAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SurveyResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseStaffTargetAssociationAggregate.EdFi.SurveyResponseStaffTargetAssociationReferenceData" table="SurveyResponseStaffTargetAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseStaffTargetAssociationAggregate.EdFi.SurveyResponseStaffTargetAssociation" table="SurveyResponseStaffTargetAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="SurveyResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionAggregate.EdFi.SurveySectionReferenceData" table="SurveySection" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
            <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionAggregate.EdFi.SurveySection" table="SurveySection" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionAssociationAggregate.EdFi.SurveySectionAssociationReferenceData" table="SurveySectionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SchoolId" column="SchoolId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="60"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionAssociationAggregate.EdFi.SurveySectionAssociation" table="SurveySectionAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SchoolId" column="SchoolId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="60" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseAggregate.EdFi.SurveySectionResponseReferenceData" table="SurveySectionResponse" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="60"  />
            <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseAggregate.EdFi.SurveySectionResponse" table="SurveySectionResponse" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="SectionRating" column="SectionRating" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="SurveyResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
    </many-to-one>
    <many-to-one name="SurveySectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveySectionAggregate.EdFi.SurveySectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveySectionResponseEducationOrganizationTargetAssociationReferenceData" table="SurveySectionResponseEducationOrganizationTargetAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="60"  />
            <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveySectionResponseEducationOrganizationTargetAssociation" table="SurveySectionResponseEducationOrganizationTargetAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="int" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SurveySectionResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveySectionResponseAggregate.EdFi.SurveySectionResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
      <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseStaffTargetAssociationAggregate.EdFi.SurveySectionResponseStaffTargetAssociationReferenceData" table="SurveySectionResponseStaffTargetAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="60"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="60"  />
            <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseStaffTargetAssociationAggregate.EdFi.SurveySectionResponseStaffTargetAssociation" table="SurveySectionResponseStaffTargetAssociation" lazy="false" discriminator-value="NULL">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="60" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="60" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="SurveySectionResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveySectionResponseAggregate.EdFi.SurveySectionResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
      <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


</hibernate-mapping>

