<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" assembly="EdFi.Ods.Standard" namespace="EdFi.Ods.Entities.NHibernate" default-access="property" auto-import="false">

    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AcademicWeekAggregate.EdFi.AcademicWeekReferenceData" table="AcademicWeek" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="WeekIdentifier" column="WeekIdentifier" type="string"  length="80"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AcademicWeekAggregate.EdFi.AcademicWeek" table="AcademicWeek" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="WeekIdentifier" column="WeekIdentifier" type="string" length="80" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" not-null="true" />
    <property name="TotalInstructionalDays" column="TotalInstructionalDays" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AccountabilityRatingAggregate.EdFi.AccountabilityRatingReferenceData" table="AccountabilityRating" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="RatingTitle" column="RatingTitle" type="string"  length="60"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AccountabilityRatingAggregate.EdFi.AccountabilityRating" table="AccountabilityRating" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="RatingTitle" column="RatingTitle" type="string" length="60" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="Rating" column="Rating" type="string" length="35" not-null="true" />
    <property name="RatingDate" column="RatingDate" type="date" />
    <property name="RatingOrganization" column="RatingOrganization" type="string" length="35" />
    <property name="RatingProgram" column="RatingProgram" type="string" length="30" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileReferenceData" table="ApplicantProfile" lazy="true" >
        <id name="ApplicantProfileIdentifier" column="ApplicantProfileIdentifier" type="string"  length="32" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfile" table="ApplicantProfile" lazy="false" discriminator-value="null">
    <id name="ApplicantProfileIdentifier" column="ApplicantProfileIdentifier" type="string" length="32">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BirthDate" column="BirthDate" type="date" />
    <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" />
    <property name="EconomicDisadvantaged" column="EconomicDisadvantaged" type="bool" />
    <property name="FirstGenerationStudent" column="FirstGenerationStudent" type="bool" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenderIdentity" column="GenderIdentity" type="string" length="60" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="HighestCompletedLevelOfEducationDescriptorId" column="HighestCompletedLevelOfEducationDescriptorId" type="int" />
    <property name="HighlyQualifiedTeacher" column="HighlyQualifiedTeacher" type="bool" />
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PreferredFirstName" column="PreferredFirstName" type="string" length="75" />
    <property name="PreferredLastSurname" column="PreferredLastSurname" type="string" length="75" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />
    <property name="YearsOfPriorProfessionalExperience" column="YearsOfPriorProfessionalExperience" type="decimal" />
    <property name="YearsOfPriorTeachingExperience" column="YearsOfPriorTeachingExperience" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ApplicantProfileAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileAddress" />
    </set>

    <set name="ApplicantProfileApplicantCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileApplicantCharacteristic" />
    </set>

    <set name="ApplicantProfileBackgroundChecks" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileBackgroundCheck" />
    </set>

    <set name="ApplicantProfileDisabilities" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileDisability" />
    </set>

    <set name="ApplicantProfileEducatorPreparationProgramNames" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileEducatorPreparationProgramName" />
    </set>

    <set name="ApplicantProfileElectronicMails" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileElectronicMail" />
    </set>

    <set name="ApplicantProfileGradePointAverages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileGradePointAverage" />
    </set>

    <set name="ApplicantProfileHighlyQualifiedAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileHighlyQualifiedAcademicSubject" />
    </set>

    <set name="ApplicantProfileIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileIdentificationDocument" />
    </set>

    <set name="ApplicantProfileInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileInternationalAddress" />
    </set>

    <set name="ApplicantProfileLanguages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileLanguage" />
    </set>

    <set name="ApplicantProfilePersonalIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfilePersonalIdentificationDocument" />
    </set>

    <set name="ApplicantProfileRaces" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileRace" />
    </set>

    <set name="ApplicantProfileTelephones" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileTelephone" />
    </set>

    <set name="ApplicantProfileVisas" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileVisa" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileAddress" table="ApplicantProfileAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ApplicantProfileAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileAddressPeriod" table="ApplicantProfileAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="ApplicantProfileAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileApplicantCharacteristic" table="ApplicantProfileApplicantCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StudentCharacteristicDescriptorId" column="StudentCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileBackgroundCheck" table="ApplicantProfileBackgroundCheck" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BackgroundCheckTypeDescriptorId" column="BackgroundCheckTypeDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BackgroundCheckCompletedDate" column="BackgroundCheckCompletedDate" type="date" />
    <property name="BackgroundCheckRequestedDate" column="BackgroundCheckRequestedDate" type="date" not-null="true" />
    <property name="BackgroundCheckStatusDescriptorId" column="BackgroundCheckStatusDescriptorId" type="int" />
    <property name="Fingerprint" column="Fingerprint" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileDisability" table="ApplicantProfileDisability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" />
    <property name="DisabilityDiagnosis" column="DisabilityDiagnosis" type="string" length="80" />
    <property name="OrderOfDisability" column="OrderOfDisability" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ApplicantProfileDisabilityDesignations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="DisabilityDescriptorId" />
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileDisabilityDesignation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileDisabilityDesignation" table="ApplicantProfileDisabilityDesignation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfileDisability">
        <column name="DisabilityDescriptorId" />
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileEducatorPreparationProgramName" table="ApplicantProfileEducatorPreparationProgramName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducatorPreparationProgramName" column="EducatorPreparationProgramName" type="string" length="255" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileElectronicMail" table="ApplicantProfileElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileGradePointAverage" table="ApplicantProfileGradePointAverage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradePointAverageTypeDescriptorId" column="GradePointAverageTypeDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="GradePointAverageValue" column="GradePointAverageValue" type="decimal" not-null="true" />
    <property name="IsCumulative" column="IsCumulative" type="bool" />
    <property name="MaxGradePointAverageValue" column="MaxGradePointAverageValue" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileHighlyQualifiedAcademicSubject" table="ApplicantProfileHighlyQualifiedAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileIdentificationDocument" table="ApplicantProfileIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileInternationalAddress" table="ApplicantProfileInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileLanguage" table="ApplicantProfileLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ApplicantProfileLanguageUses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="ApplicantProfileIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileLanguageUse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileLanguageUse" table="ApplicantProfileLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfileLanguage">
        <column name="LanguageDescriptorId" />
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfilePersonalIdentificationDocument" table="ApplicantProfilePersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileRace" table="ApplicantProfileRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileTelephone" table="ApplicantProfileTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileVisa" table="ApplicantProfileVisa" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="VisaDescriptorId" column="VisaDescriptorId" type="int" />
      <key-many-to-one name="ApplicantProfile">
        <column name="ApplicantProfileIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ApplicationAggregate.EdFi.ApplicationReferenceData" table="Application" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ApplicantProfileIdentifier" column="ApplicantProfileIdentifier" type="string"  length="32"  />
            <key-property name="ApplicationIdentifier" column="ApplicationIdentifier" type="string"  length="20"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicationAggregate.EdFi.Application" table="Application" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ApplicantProfileIdentifier" column="ApplicantProfileIdentifier" type="string" length="32" />
      <key-property name="ApplicationIdentifier" column="ApplicationIdentifier" type="string" length="20" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="AcceptedDate" column="AcceptedDate" type="date" />
    <property name="ApplicationDate" column="ApplicationDate" type="date" not-null="true" />
    <property name="ApplicationSourceDescriptorId" column="ApplicationSourceDescriptorId" type="int" />
    <property name="ApplicationStatusDescriptorId" column="ApplicationStatusDescriptorId" type="int" not-null="true" />
    <property name="CurrentEmployee" column="CurrentEmployee" type="bool" />
    <property name="FirstContactDate" column="FirstContactDate" type="date" />
    <property name="HighNeedsAcademicSubjectDescriptorId" column="HighNeedsAcademicSubjectDescriptorId" type="int" />
    <property name="HireStatusDescriptorId" column="HireStatusDescriptorId" type="int" />
    <property name="HiringSourceDescriptorId" column="HiringSourceDescriptorId" type="int" />
    <property name="RequisitionNumber" column="RequisitionNumber" type="string" length="20" />
    <property name="WithdrawDate" column="WithdrawDate" type="date" />
    <property name="WithdrawReasonDescriptorId" column="WithdrawReasonDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ApplicantProfileReferenceData" class="EdFi.Ods.Entities.NHibernate.ApplicantProfileAggregate.EdFi.ApplicantProfileReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ApplicantProfileIdentifier" />
    </many-to-one>
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="OpenStaffPositionReferenceData" class="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="RequisitionNumber" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ApplicationRecruitmentEventAttendances" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
        <column name="ApplicationIdentifier" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicationAggregate.EdFi.ApplicationRecruitmentEventAttendance" />
    </set>

    <set name="ApplicationScoreResults" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
        <column name="ApplicationIdentifier" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicationAggregate.EdFi.ApplicationScoreResult" />
    </set>

    <set name="ApplicationTerms" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ApplicantProfileIdentifier" />
        <column name="ApplicationIdentifier" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ApplicationAggregate.EdFi.ApplicationTerm" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicationAggregate.EdFi.ApplicationRecruitmentEventAttendance" table="ApplicationRecruitmentEventAttendance" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="EventTitle" column="EventTitle" type="string" length="50" />
      <key-property name="RecruitmentEventAttendeeIdentifier" column="RecruitmentEventAttendeeIdentifier" type="string" length="32" />
      <key-many-to-one name="Application">
        <column name="ApplicantProfileIdentifier" />
        <column name="ApplicationIdentifier" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="RecruitmentEventAttendanceReferenceData" class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EventDate" />
      <column name="EventTitle" />
      <column name="RecruitmentEventAttendeeIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicationAggregate.EdFi.ApplicationScoreResult" table="ApplicationScoreResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="Application">
        <column name="ApplicantProfileIdentifier" />
        <column name="ApplicationIdentifier" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Result" column="Result" type="string" length="35" not-null="true" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicationAggregate.EdFi.ApplicationTerm" table="ApplicationTerm" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
      <key-many-to-one name="Application">
        <column name="ApplicantProfileIdentifier" />
        <column name="ApplicationIdentifier" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ApplicationEventAggregate.EdFi.ApplicationEventReferenceData" table="ApplicationEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ApplicantProfileIdentifier" column="ApplicantProfileIdentifier" type="string"  length="32"  />
            <key-property name="ApplicationEventTypeDescriptorId" column="ApplicationEventTypeDescriptorId" type="int"  />
            <key-property name="ApplicationIdentifier" column="ApplicationIdentifier" type="string"  length="20"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="SequenceNumber" column="SequenceNumber" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ApplicationEventAggregate.EdFi.ApplicationEvent" table="ApplicationEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ApplicantProfileIdentifier" column="ApplicantProfileIdentifier" type="string" length="32" />
      <key-property name="ApplicationEventTypeDescriptorId" column="ApplicationEventTypeDescriptorId" type="int" />
      <key-property name="ApplicationIdentifier" column="ApplicationIdentifier" type="string" length="20" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="SequenceNumber" column="SequenceNumber" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ApplicationEvaluationScore" column="ApplicationEvaluationScore" type="decimal" />
    <property name="ApplicationEventResultDescriptorId" column="ApplicationEventResultDescriptorId" type="int" />
    <property name="EventEndDate" column="EventEndDate" type="date" />
    <property name="SchoolYear" column="SchoolYear" type="short" not-null="true" />
    <property name="TermDescriptorId" column="TermDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ApplicationReferenceData" class="EdFi.Ods.Entities.NHibernate.ApplicationAggregate.EdFi.ApplicationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ApplicantProfileIdentifier" />
      <column name="ApplicationIdentifier" />
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" table="Assessment" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.Assessment" table="Assessment" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AdaptiveAssessment" column="AdaptiveAssessment" type="bool" />
    <property name="AssessmentCategoryDescriptorId" column="AssessmentCategoryDescriptorId" type="int" />
    <property name="AssessmentFamily" column="AssessmentFamily" type="string" length="60" />
    <property name="AssessmentForm" column="AssessmentForm" type="string" length="60" />
    <property name="AssessmentTitle" column="AssessmentTitle" type="string" length="255" not-null="true" />
    <property name="AssessmentVersion" column="AssessmentVersion" type="int" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="100" />
    <property name="RevisionDate" column="RevisionDate" type="date" />

    <!-- One-to-one child mappings -->
    <set name="AssessmentContentStandard" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentContentStandard" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AssessmentAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentAcademicSubject" />
    </set>

    <set name="AssessmentAssessedGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentAssessedGradeLevel" />
    </set>

    <set name="AssessmentIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentIdentificationCode" />
    </set>

    <set name="AssessmentLanguages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentLanguage" />
    </set>

    <set name="AssessmentPerformanceLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPerformanceLevel" />
    </set>

    <set name="AssessmentPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPeriod" />
    </set>

    <set name="AssessmentPlatformTypes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPlatformType" />
    </set>

    <set name="AssessmentPrograms" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentProgram" />
    </set>

    <set name="AssessmentScores" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentScore" />
    </set>

    <set name="AssessmentSections" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentSection" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentAcademicSubject" table="AssessmentAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentAssessedGradeLevel" table="AssessmentAssessedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentContentStandard" table="AssessmentContentStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="MandatingEducationOrganizationId" column="MandatingEducationOrganizationId" type="long" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Title" column="Title" type="string" length="100" not-null="true" />
    <property name="URI" column="URI" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="50" />

    <!-- Aggregate references -->
    <many-to-one name="MandatingEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="MandatingEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AssessmentContentStandardAuthors" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentContentStandardAuthor" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentContentStandardAuthor" table="AssessmentContentStandardAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="255" />
      <key-many-to-one name="AssessmentContentStandard">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentIdentificationCode" table="AssessmentIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentificationSystemDescriptorId" column="AssessmentIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="120" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentLanguage" table="AssessmentLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPerformanceLevel" table="AssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="PerformanceLevelIndicatorName" column="PerformanceLevelIndicatorName" type="string" length="60" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPeriod" table="AssessmentPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentPeriodDescriptorId" column="AssessmentPeriodDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentPlatformType" table="AssessmentPlatformType" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PlatformTypeDescriptorId" column="PlatformTypeDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentProgram" table="AssessmentProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentScore" table="AssessmentScore" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentSection" table="AssessmentSection" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-many-to-one name="Assessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationAggregate.EdFi.AssessmentAdministrationReferenceData" table="AssessmentAdministration" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AdministrationIdentifier" column="AdministrationIdentifier" type="string"  length="255"  />
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="AssigningEducationOrganizationId" column="AssigningEducationOrganizationId" type="long"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationAggregate.EdFi.AssessmentAdministration" table="AssessmentAdministration" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AdministrationIdentifier" column="AdministrationIdentifier" type="string" length="255" />
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="AssigningEducationOrganizationId" column="AssigningEducationOrganizationId" type="long" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="AssigningEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssigningEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AssessmentAdministrationAssessmentBatteryParts" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AdministrationIdentifier" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationAggregate.EdFi.AssessmentAdministrationAssessmentBatteryPart" />
    </set>

    <set name="AssessmentAdministrationPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AdministrationIdentifier" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationAggregate.EdFi.AssessmentAdministrationPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationAggregate.EdFi.AssessmentAdministrationAssessmentBatteryPart" table="AssessmentAdministrationAssessmentBatteryPart" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentBatteryPartName" column="AssessmentBatteryPartName" type="string" length="65" />
      <key-many-to-one name="AssessmentAdministration">
        <column name="AdministrationIdentifier" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AssessmentBatteryPartReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentBatteryPartAggregate.EdFi.AssessmentBatteryPartReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentBatteryPartName" />
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationAggregate.EdFi.AssessmentAdministrationPeriod" table="AssessmentAdministrationPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="AssessmentAdministration">
        <column name="AdministrationIdentifier" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationParticipationAggregate.EdFi.AssessmentAdministrationParticipationReferenceData" table="AssessmentAdministrationParticipation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AdministrationIdentifier" column="AdministrationIdentifier" type="string"  length="255"  />
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="AssigningEducationOrganizationId" column="AssigningEducationOrganizationId" type="long"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="ParticipatingEducationOrganizationId" column="ParticipatingEducationOrganizationId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationParticipationAggregate.EdFi.AssessmentAdministrationParticipation" table="AssessmentAdministrationParticipation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AdministrationIdentifier" column="AdministrationIdentifier" type="string" length="255" />
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="AssigningEducationOrganizationId" column="AssigningEducationOrganizationId" type="long" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="ParticipatingEducationOrganizationId" column="ParticipatingEducationOrganizationId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AssessmentAdministrationReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationAggregate.EdFi.AssessmentAdministrationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AdministrationIdentifier" />
      <column name="AssessmentIdentifier" />
      <column name="AssigningEducationOrganizationId" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="ParticipatingEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ParticipatingEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AssessmentAdministrationParticipationAdministrationPointOfContacts" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AdministrationIdentifier" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="Namespace" />
        <column name="ParticipatingEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationParticipationAggregate.EdFi.AssessmentAdministrationParticipationAdministrationPointOfContact" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationParticipationAggregate.EdFi.AssessmentAdministrationParticipationAdministrationPointOfContact" table="AssessmentAdministrationParticipationAdministrationPointOfContact" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-many-to-one name="AssessmentAdministrationParticipation">
        <column name="AdministrationIdentifier" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="Namespace" />
        <column name="ParticipatingEducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="LoginId" column="LoginId" type="string" length="120" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AssessmentBatteryPartAggregate.EdFi.AssessmentBatteryPartReferenceData" table="AssessmentBatteryPart" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentBatteryPartName" column="AssessmentBatteryPartName" type="string"  length="65"  />
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentBatteryPartAggregate.EdFi.AssessmentBatteryPart" table="AssessmentBatteryPart" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentBatteryPartName" column="AssessmentBatteryPartName" type="string" length="65" />
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AssessmentBatteryPartObjectiveAssessments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentBatteryPartName" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentBatteryPartAggregate.EdFi.AssessmentBatteryPartObjectiveAssessment" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentBatteryPartAggregate.EdFi.AssessmentBatteryPartObjectiveAssessment" table="AssessmentBatteryPartObjectiveAssessment" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="120" />
      <key-many-to-one name="AssessmentBatteryPart">
        <column name="AssessmentBatteryPartName" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ObjectiveAssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="IdentificationCode" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemReferenceData" table="AssessmentItem" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="IdentificationCode" column="IdentificationCode" type="string"  length="120"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItem" table="AssessmentItem" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="120" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AssessmentItemCategoryDescriptorId" column="AssessmentItemCategoryDescriptorId" type="int" />
    <property name="AssessmentItemURI" column="AssessmentItemURI" type="string" length="255" />
    <property name="ExpectedTimeAssessed" column="ExpectedTimeAssessed" type="string" length="30" />
    <property name="ItemText" column="ItemText" type="string" length="1024" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="100" />

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AssessmentItemLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemLearningStandard" />
    </set>

    <set name="AssessmentItemPossibleResponses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemPossibleResponse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemLearningStandard" table="AssessmentItemLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="AssessmentItem">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemPossibleResponse" table="AssessmentItemPossibleResponse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ResponseValue" column="ResponseValue" type="string" length="60" />
      <key-many-to-one name="AssessmentItem">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CorrectResponse" column="CorrectResponse" type="bool" />
    <property name="ResponseDescription" column="ResponseDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.AssessmentScoreRangeLearningStandardAggregate.EdFi.AssessmentScoreRangeLearningStandardReferenceData" table="AssessmentScoreRangeLearningStandard" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="ScoreRangeId" column="ScoreRangeId" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentScoreRangeLearningStandardAggregate.EdFi.AssessmentScoreRangeLearningStandard" table="AssessmentScoreRangeLearningStandard" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="ScoreRangeId" column="ScoreRangeId" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" />
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" not-null="true" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="ObjectiveAssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="IdentificationCode" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="AssessmentScoreRangeLearningStandardLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="ScoreRangeId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.AssessmentScoreRangeLearningStandardAggregate.EdFi.AssessmentScoreRangeLearningStandardLearningStandard" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.AssessmentScoreRangeLearningStandardAggregate.EdFi.AssessmentScoreRangeLearningStandardLearningStandard" table="AssessmentScoreRangeLearningStandardLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="AssessmentScoreRangeLearningStandard">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="ScoreRangeId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.BalanceSheetDimensionAggregate.EdFi.BalanceSheetDimensionReferenceData" table="BalanceSheetDimension" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Code" column="Code" type="string"  length="16"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BalanceSheetDimensionAggregate.EdFi.BalanceSheetDimension" table="BalanceSheetDimension" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Code" column="Code" type="string" length="16" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CodeName" column="CodeName" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="BalanceSheetDimensionReportingTags" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Code" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.BalanceSheetDimensionAggregate.EdFi.BalanceSheetDimensionReportingTag" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BalanceSheetDimensionAggregate.EdFi.BalanceSheetDimensionReportingTag" table="BalanceSheetDimensionReportingTag" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" />
      <key-many-to-one name="BalanceSheetDimension">
        <column name="Code" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleReferenceData" table="BellSchedule" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BellScheduleName" column="BellScheduleName" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellSchedule" table="BellSchedule" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BellScheduleName" column="BellScheduleName" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AlternateDayName" column="AlternateDayName" type="string" length="20" />
    <property name="EndTime" column="EndTime" type="TimeAsTimeSpan" />
    <property name="StartTime" column="StartTime" type="TimeAsTimeSpan" />
    <property name="TotalInstructionalTime" column="TotalInstructionalTime" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="BellScheduleClassPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleClassPeriod" />
    </set>

    <set name="BellScheduleDates" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleDate" />
    </set>

    <set name="BellScheduleGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleClassPeriod" table="BellScheduleClassPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassPeriodName" column="ClassPeriodName" type="string" length="60" />
      <key-many-to-one name="BellSchedule">
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ClassPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ClassPeriodName" />
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleDate" table="BellScheduleDate" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Date" column="Date" type="date" />
      <key-many-to-one name="BellSchedule">
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.BellScheduleAggregate.EdFi.BellScheduleGradeLevel" table="BellScheduleGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="BellSchedule">
        <column name="BellScheduleName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarReferenceData" table="Calendar" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CalendarCode" column="CalendarCode" type="string"  length="120"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.Calendar" table="Calendar" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarCode" column="CalendarCode" type="string" length="120" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CalendarTypeDescriptorId" column="CalendarTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CalendarGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarGradeLevel" table="CalendarGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Calendar">
        <column name="CalendarCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CalendarDateAggregate.EdFi.CalendarDateReferenceData" table="CalendarDate" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CalendarCode" column="CalendarCode" type="string"  length="120"  />
            <key-property name="Date" column="Date" type="date"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CalendarDateAggregate.EdFi.CalendarDate" table="CalendarDate" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarCode" column="CalendarCode" type="string" length="120" />
      <key-property name="Date" column="Date" type="date" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="CalendarReferenceData" class="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CalendarCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CalendarDateCalendarEvents" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CalendarCode" />
        <column name="Date" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CalendarDateAggregate.EdFi.CalendarDateCalendarEvent" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CalendarDateAggregate.EdFi.CalendarDateCalendarEvent" table="CalendarDateCalendarEvent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarEventDescriptorId" column="CalendarEventDescriptorId" type="int" />
      <key-many-to-one name="CalendarDate">
        <column name="CalendarCode" />
        <column name="Date" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateReferenceData" table="Candidate" lazy="true" >
        <id name="CandidateIdentifier" column="CandidateIdentifier" type="string"  length="32" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.Candidate" table="Candidate" lazy="false" discriminator-value="null">
    <id name="CandidateIdentifier" column="CandidateIdentifier" type="string" length="32">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BirthCity" column="BirthCity" type="string" length="30" />
    <property name="BirthCountryDescriptorId" column="BirthCountryDescriptorId" type="int" />
    <property name="BirthDate" column="BirthDate" type="date" not-null="true" />
    <property name="BirthInternationalProvince" column="BirthInternationalProvince" type="string" length="150" />
    <property name="BirthSexDescriptorId" column="BirthSexDescriptorId" type="int" />
    <property name="BirthStateAbbreviationDescriptorId" column="BirthStateAbbreviationDescriptorId" type="int" />
    <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" />
    <property name="DateEnteredUS" column="DateEnteredUS" type="date" />
    <property name="DisplacementStatus" column="DisplacementStatus" type="string" length="30" />
    <property name="EconomicDisadvantaged" column="EconomicDisadvantaged" type="bool" />
    <property name="EnglishLanguageExamDescriptorId" column="EnglishLanguageExamDescriptorId" type="int" />
    <property name="FirstGenerationStudent" column="FirstGenerationStudent" type="bool" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenderIdentity" column="GenderIdentity" type="string" length="60" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="LimitedEnglishProficiencyDescriptorId" column="LimitedEnglishProficiencyDescriptorId" type="int" />
    <property name="LoginId" column="LoginId" type="string" length="120" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="MultipleBirthStatus" column="MultipleBirthStatus" type="bool" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="PreferredFirstName" column="PreferredFirstName" type="string" length="75" />
    <property name="PreferredLastSurname" column="PreferredLastSurname" type="string" length="75" />
    <property name="PreviousCareerDescriptorId" column="PreviousCareerDescriptorId" type="int" />
    <property name="ProfileThumbnail" column="ProfileThumbnail" type="string" length="255" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" not-null="true" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    <property name="TuitionCost" column="TuitionCost" type="decimal" />

    <!-- One-to-one child mappings -->
    <set name="CandidateBackgroundCheck" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateBackgroundCheck" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CandidateAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateAddress" />
    </set>

    <set name="CandidateCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateCharacteristic" />
    </set>

    <set name="CandidateDisabilities" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateDisability" />
    </set>

    <set name="CandidateElectronicMails" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateElectronicMail" />
    </set>

    <set name="CandidateEPPProgramDegrees" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateEPPProgramDegree" />
    </set>

    <set name="CandidateIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateIdentificationCode" />
    </set>

    <set name="CandidateIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateIdentificationDocument" />
    </set>

    <set name="CandidateIndicators" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateIndicator" />
    </set>

    <set name="CandidateInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateInternationalAddress" />
    </set>

    <set name="CandidateLanguages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateLanguage" />
    </set>

    <set name="CandidateOtherNames" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateOtherName" />
    </set>

    <set name="CandidatePersonalIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidatePersonalIdentificationDocument" />
    </set>

    <set name="CandidateRaces" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateRace" />
    </set>

    <set name="CandidateTelephones" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateTelephone" />
    </set>

    <set name="CandidateVisas" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateVisa" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateAddress" table="CandidateAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="CandidateAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateAddressPeriod" table="CandidateAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="CandidateAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateBackgroundCheck" table="CandidateBackgroundCheck" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BackgroundCheckCompletedDate" column="BackgroundCheckCompletedDate" type="date" />
    <property name="BackgroundCheckRequestedDate" column="BackgroundCheckRequestedDate" type="date" not-null="true" />
    <property name="BackgroundCheckStatusDescriptorId" column="BackgroundCheckStatusDescriptorId" type="int" />
    <property name="BackgroundCheckTypeDescriptorId" column="BackgroundCheckTypeDescriptorId" type="int" not-null="true" />
    <property name="Fingerprint" column="Fingerprint" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateCharacteristic" table="CandidateCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CandidateCharacteristicDescriptorId" column="CandidateCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateDisability" table="CandidateDisability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" />
    <property name="DisabilityDiagnosis" column="DisabilityDiagnosis" type="string" length="80" />
    <property name="OrderOfDisability" column="OrderOfDisability" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="CandidateDisabilityDesignations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="DisabilityDescriptorId" />
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateDisabilityDesignation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateDisabilityDesignation" table="CandidateDisabilityDesignation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" />
      <key-many-to-one name="CandidateDisability">
        <column name="DisabilityDescriptorId" />
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateElectronicMail" table="CandidateElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateEPPProgramDegree" table="CandidateEPPProgramDegree" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-property name="EPPDegreeTypeDescriptorId" column="EPPDegreeTypeDescriptorId" type="int" />
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateIdentificationCode" table="CandidateIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="120" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="120" />
      <key-property name="StudentIdentificationSystemDescriptorId" column="StudentIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateIdentificationDocument" table="CandidateIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateIndicator" table="CandidateIndicator" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="IndicatorName" column="IndicatorName" type="string" length="200" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Indicator" column="Indicator" type="string" length="60" not-null="true" />
    <property name="IndicatorGroup" column="IndicatorGroup" type="string" length="200" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateInternationalAddress" table="CandidateInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateLanguage" table="CandidateLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="CandidateLanguageUses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="CandidateIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateLanguageUse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateLanguageUse" table="CandidateLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="CandidateLanguage">
        <column name="LanguageDescriptorId" />
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateOtherName" table="CandidateOtherName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidatePersonalIdentificationDocument" table="CandidatePersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateRace" table="CandidateRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateTelephone" table="CandidateTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateVisa" table="CandidateVisa" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="VisaDescriptorId" column="VisaDescriptorId" type="int" />
      <key-many-to-one name="Candidate">
        <column name="CandidateIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CandidateEducatorPreparationProgramAssociationAggregate.EdFi.CandidateEducatorPreparationProgramAssociationReferenceData" table="CandidateEducatorPreparationProgramAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="CandidateIdentifier" column="CandidateIdentifier" type="string"  length="32"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="255"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateEducatorPreparationProgramAssociationAggregate.EdFi.CandidateEducatorPreparationProgramAssociation" table="CandidateEducatorPreparationProgramAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="CandidateIdentifier" column="CandidateIdentifier" type="string" length="32" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="255" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ApplicantProfileIdentifier" column="ApplicantProfileIdentifier" type="string" length="32" />
    <property name="ApplicationIdentifier" column="ApplicationIdentifier" type="string" length="20" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="EPPProgramPathwayDescriptorId" column="EPPProgramPathwayDescriptorId" type="int" />
    <property name="ReasonExitedDescriptorId" column="ReasonExitedDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ApplicationReferenceData" class="EdFi.Ods.Entities.NHibernate.ApplicationAggregate.EdFi.ApplicationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ApplicantProfileIdentifier" />
      <column name="ApplicationIdentifier" />
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="CandidateReferenceData" class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CandidateIdentifier" />
    </many-to-one>
    <many-to-one name="EducatorPreparationProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.EducatorPreparationProgramAggregate.EdFi.EducatorPreparationProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CandidateEducatorPreparationProgramAssociationCandidateIndicators" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="CandidateIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateEducatorPreparationProgramAssociationAggregate.EdFi.CandidateEducatorPreparationProgramAssociationCandidateIndicator" />
    </set>

    <set name="CandidateEducatorPreparationProgramAssociationCohortYears" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="CandidateIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateEducatorPreparationProgramAssociationAggregate.EdFi.CandidateEducatorPreparationProgramAssociationCohortYear" />
    </set>

    <set name="CandidateEducatorPreparationProgramAssociationDegreeSpecializations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="CandidateIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CandidateEducatorPreparationProgramAssociationAggregate.EdFi.CandidateEducatorPreparationProgramAssociationDegreeSpecialization" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateEducatorPreparationProgramAssociationAggregate.EdFi.CandidateEducatorPreparationProgramAssociationCandidateIndicator" table="CandidateEducatorPreparationProgramAssociationCandidateIndicator" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IndicatorName" column="IndicatorName" type="string" length="200" />
      <key-many-to-one name="CandidateEducatorPreparationProgramAssociation">
        <column name="BeginDate" />
        <column name="CandidateIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Indicator" column="Indicator" type="string" length="60" not-null="true" />
    <property name="IndicatorGroup" column="IndicatorGroup" type="string" length="200" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateEducatorPreparationProgramAssociationAggregate.EdFi.CandidateEducatorPreparationProgramAssociationCohortYear" table="CandidateEducatorPreparationProgramAssociationCohortYear" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CohortYearTypeDescriptorId" column="CohortYearTypeDescriptorId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="CandidateEducatorPreparationProgramAssociation">
        <column name="BeginDate" />
        <column name="CandidateIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="TermDescriptorId" column="TermDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateEducatorPreparationProgramAssociationAggregate.EdFi.CandidateEducatorPreparationProgramAssociationDegreeSpecialization" table="CandidateEducatorPreparationProgramAssociationDegreeSpecialization" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MajorSpecialization" column="MajorSpecialization" type="string" length="255" />
      <key-many-to-one name="CandidateEducatorPreparationProgramAssociation">
        <column name="BeginDate" />
        <column name="CandidateIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="MinorSpecialization" column="MinorSpecialization" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CandidateIdentityAggregate.EdFi.CandidateIdentityReferenceData" table="CandidateIdentity" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CandidateIdentificationSystemDescriptorId" column="CandidateIdentificationSystemDescriptorId" type="int"  />
            <key-property name="CandidateIdentifier" column="CandidateIdentifier" type="string"  length="32"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateIdentityAggregate.EdFi.CandidateIdentity" table="CandidateIdentity" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CandidateIdentificationSystemDescriptorId" column="CandidateIdentificationSystemDescriptorId" type="int" />
      <key-property name="CandidateIdentifier" column="CandidateIdentifier" type="string" length="32" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="CandidateReferenceData" class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CandidateIdentifier" />
    </many-to-one>
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CandidateRelationshipToStaffAssociationAggregate.EdFi.CandidateRelationshipToStaffAssociationReferenceData" table="CandidateRelationshipToStaffAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CandidateIdentifier" column="CandidateIdentifier" type="string"  length="32"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CandidateRelationshipToStaffAssociationAggregate.EdFi.CandidateRelationshipToStaffAssociation" table="CandidateRelationshipToStaffAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CandidateIdentifier" column="CandidateIdentifier" type="string" length="32" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="StaffToCandidateRelationshipDescriptorId" column="StaffToCandidateRelationshipDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CandidateReferenceData" class="EdFi.Ods.Entities.NHibernate.CandidateAggregate.EdFi.CandidateReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CandidateIdentifier" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CertificationAggregate.EdFi.CertificationReferenceData" table="Certification" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CertificationIdentifier" column="CertificationIdentifier" type="string"  length="120"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CertificationAggregate.EdFi.Certification" table="Certification" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CertificationIdentifier" column="CertificationIdentifier" type="string" length="120" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CertificationFieldDescriptorId" column="CertificationFieldDescriptorId" type="int" />
    <property name="CertificationLevelDescriptorId" column="CertificationLevelDescriptorId" type="int" />
    <property name="CertificationStandardDescriptorId" column="CertificationStandardDescriptorId" type="int" />
    <property name="CertificationTitle" column="CertificationTitle" type="string" length="64" not-null="true" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    <property name="EducatorRoleDescriptorId" column="EducatorRoleDescriptorId" type="int" />
    <property name="EffectiveDate" column="EffectiveDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="InstructionalSettingDescriptorId" column="InstructionalSettingDescriptorId" type="int" />
    <property name="MinimumDegreeDescriptorId" column="MinimumDegreeDescriptorId" type="int" />
    <property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CertificationCertificationExams" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CertificationIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CertificationAggregate.EdFi.CertificationCertificationExam" />
    </set>

    <set name="CertificationGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CertificationIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CertificationAggregate.EdFi.CertificationGradeLevel" />
    </set>

    <set name="CertificationRoutes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CertificationIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CertificationAggregate.EdFi.CertificationRoute" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CertificationAggregate.EdFi.CertificationCertificationExam" table="CertificationCertificationExam" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CertificationExamIdentifier" column="CertificationExamIdentifier" type="string" length="120" />
      <key-property name="CertificationExamNamespace" column="CertificationExamNamespace" type="string" length="255" />
      <key-many-to-one name="Certification">
        <column name="CertificationIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="CertificationExamReferenceData" class="EdFi.Ods.Entities.NHibernate.CertificationExamAggregate.EdFi.CertificationExamReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CertificationExamIdentifier" />
      <column name="CertificationExamNamespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CertificationAggregate.EdFi.CertificationGradeLevel" table="CertificationGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Certification">
        <column name="CertificationIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CertificationAggregate.EdFi.CertificationRoute" table="CertificationRoute" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CertificationRouteDescriptorId" column="CertificationRouteDescriptorId" type="int" />
      <key-many-to-one name="Certification">
        <column name="CertificationIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CertificationExamAggregate.EdFi.CertificationExamReferenceData" table="CertificationExam" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CertificationExamIdentifier" column="CertificationExamIdentifier" type="string"  length="120"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CertificationExamAggregate.EdFi.CertificationExam" table="CertificationExam" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CertificationExamIdentifier" column="CertificationExamIdentifier" type="string" length="120" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CertificationExamTitle" column="CertificationExamTitle" type="string" length="60" not-null="true" />
    <property name="CertificationExamTypeDescriptorId" column="CertificationExamTypeDescriptorId" type="int" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    <property name="EffectiveDate" column="EffectiveDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CertificationExamResultAggregate.EdFi.CertificationExamResultReferenceData" table="CertificationExamResult" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CertificationExamDate" column="CertificationExamDate" type="date"  />
            <key-property name="CertificationExamIdentifier" column="CertificationExamIdentifier" type="string"  length="120"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CertificationExamResultAggregate.EdFi.CertificationExamResult" table="CertificationExamResult" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CertificationExamDate" column="CertificationExamDate" type="date" />
      <key-property name="CertificationExamIdentifier" column="CertificationExamIdentifier" type="string" length="120" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AttemptNumber" column="AttemptNumber" type="int" />
    <property name="CertificationExamAssessmentIdentifier" column="CertificationExamAssessmentIdentifier" type="string" length="120" />
    <property name="CertificationExamNamespace" column="CertificationExamNamespace" type="string" length="255" />
    <property name="CertificationExamPassIndicator" column="CertificationExamPassIndicator" type="bool" />
    <property name="CertificationExamScore" column="CertificationExamScore" type="decimal" />
    <property name="CertificationExamStatusDescriptorId" column="CertificationExamStatusDescriptorId" type="int" />
    <property name="CertificationExamStudentAssessmentIdentifier" column="CertificationExamStudentAssessmentIdentifier" type="string" length="120" />
    <property name="CertificationExamStudentUSI" column="CertificationExamStudentUSI" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CertificationExamReferenceData" class="EdFi.Ods.Entities.NHibernate.CertificationExamAggregate.EdFi.CertificationExamReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CertificationExamIdentifier" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="CertificationExamStudentAssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CertificationExamAssessmentIdentifier" />
      <column name="CertificationExamNamespace" />
      <column name="CertificationExamStudentAssessmentIdentifier" />
      <column name="CertificationExamStudentUSI" />
    </many-to-one>
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ChartOfAccountAggregate.EdFi.ChartOfAccountReferenceData" table="ChartOfAccount" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ChartOfAccountAggregate.EdFi.ChartOfAccount" table="ChartOfAccount" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AccountName" column="AccountName" type="string" length="100" />
    <property name="AccountTypeDescriptorId" column="AccountTypeDescriptorId" type="int" not-null="true" />
    <property name="BalanceSheetCode" column="BalanceSheetCode" type="string" length="16" />
    <property name="FunctionCode" column="FunctionCode" type="string" length="16" />
    <property name="FundCode" column="FundCode" type="string" length="16" />
    <property name="ObjectCode" column="ObjectCode" type="string" length="16" />
    <property name="OperationalUnitCode" column="OperationalUnitCode" type="string" length="16" />
    <property name="ProgramCode" column="ProgramCode" type="string" length="16" />
    <property name="ProjectCode" column="ProjectCode" type="string" length="16" />
    <property name="SourceCode" column="SourceCode" type="string" length="16" />

    <!-- Aggregate references -->
    <many-to-one name="BalanceSheetDimensionReferenceData" class="EdFi.Ods.Entities.NHibernate.BalanceSheetDimensionAggregate.EdFi.BalanceSheetDimensionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BalanceSheetCode" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="FunctionDimensionReferenceData" class="EdFi.Ods.Entities.NHibernate.FunctionDimensionAggregate.EdFi.FunctionDimensionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="FunctionCode" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="FundDimensionReferenceData" class="EdFi.Ods.Entities.NHibernate.FundDimensionAggregate.EdFi.FundDimensionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="FundCode" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="ObjectDimensionReferenceData" class="EdFi.Ods.Entities.NHibernate.ObjectDimensionAggregate.EdFi.ObjectDimensionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ObjectCode" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="OperationalUnitDimensionReferenceData" class="EdFi.Ods.Entities.NHibernate.OperationalUnitDimensionAggregate.EdFi.OperationalUnitDimensionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="OperationalUnitCode" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="ProgramDimensionReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramDimensionAggregate.EdFi.ProgramDimensionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramCode" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="ProjectDimensionReferenceData" class="EdFi.Ods.Entities.NHibernate.ProjectDimensionAggregate.EdFi.ProjectDimensionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProjectCode" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="SourceDimensionReferenceData" class="EdFi.Ods.Entities.NHibernate.SourceDimensionAggregate.EdFi.SourceDimensionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SourceCode" />
      <column name="FiscalYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ChartOfAccountReportingTags" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ChartOfAccountAggregate.EdFi.ChartOfAccountReportingTag" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ChartOfAccountAggregate.EdFi.ChartOfAccountReportingTag" table="ChartOfAccountReportingTag" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" />
      <key-many-to-one name="ChartOfAccount">
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="TagValue" column="TagValue" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodReferenceData" table="ClassPeriod" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ClassPeriodName" column="ClassPeriodName" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriod" table="ClassPeriod" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassPeriodName" column="ClassPeriodName" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="OfficialAttendancePeriod" column="OfficialAttendancePeriod" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ClassPeriodMeetingTimes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ClassPeriodName" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodMeetingTime" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodMeetingTime" table="ClassPeriodMeetingTime" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EndTime" column="EndTime" type="TimeAsTimeSpan" />
      <key-property name="StartTime" column="StartTime" type="TimeAsTimeSpan" />
      <key-many-to-one name="ClassPeriod">
        <column name="ClassPeriodName" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortReferenceData" table="Cohort" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CohortIdentifier" column="CohortIdentifier" type="string"  length="36"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.Cohort" table="Cohort" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CohortIdentifier" column="CohortIdentifier" type="string" length="36" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="CohortDescription" column="CohortDescription" type="string" length="1024" />
    <property name="CohortScopeDescriptorId" column="CohortScopeDescriptorId" type="int" />
    <property name="CohortTypeDescriptorId" column="CohortTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CohortPrograms" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortProgram" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortProgram" table="CohortProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="Cohort">
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CommunityProviderLicenseAggregate.EdFi.CommunityProviderLicenseReferenceData" table="CommunityProviderLicense" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CommunityProviderId" column="CommunityProviderId" type="long"  />
            <key-property name="LicenseIdentifier" column="LicenseIdentifier" type="string"  length="36"  />
            <key-property name="LicensingOrganization" column="LicensingOrganization" type="string"  length="75"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CommunityProviderLicenseAggregate.EdFi.CommunityProviderLicense" table="CommunityProviderLicense" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CommunityProviderId" column="CommunityProviderId" type="long" />
      <key-property name="LicenseIdentifier" column="LicenseIdentifier" type="string" length="36" />
      <key-property name="LicensingOrganization" column="LicensingOrganization" type="string" length="75" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AuthorizedFacilityCapacity" column="AuthorizedFacilityCapacity" type="int" />
    <property name="LicenseEffectiveDate" column="LicenseEffectiveDate" type="date" not-null="true" />
    <property name="LicenseExpirationDate" column="LicenseExpirationDate" type="date" />
    <property name="LicenseIssueDate" column="LicenseIssueDate" type="date" />
    <property name="LicenseStatusDescriptorId" column="LicenseStatusDescriptorId" type="int" />
    <property name="LicenseTypeDescriptorId" column="LicenseTypeDescriptorId" type="int" not-null="true" />
    <property name="OldestAgeAuthorizedToServe" column="OldestAgeAuthorizedToServe" type="int" />
    <property name="YoungestAgeAuthorizedToServe" column="YoungestAgeAuthorizedToServe" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CommunityProviderReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CommunityProviderId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CompetencyObjectiveAggregate.EdFi.CompetencyObjectiveReferenceData" table="CompetencyObjective" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="Objective" column="Objective" type="string"  length="60"  />
            <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CompetencyObjectiveAggregate.EdFi.CompetencyObjective" table="CompetencyObjective" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="Objective" column="Objective" type="string" length="60" />
      <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CompetencyObjectiveId" column="CompetencyObjectiveId" type="string" length="120" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="SuccessCriteria" column="SuccessCriteria" type="string" length="150" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactReferenceData" table="Contact" lazy="true" >
        <id name="ContactUSI" column="ContactUSI" type="int" >
            <generator class="identity" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.Contact" table="Contact" lazy="false" discriminator-value="null">
    <id name="ContactUSI" column="ContactUSI" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ContactUniqueId" column="ContactUniqueId" type="string" length="32" not-null="true" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenderIdentity" column="GenderIdentity" type="string" length="60" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="HighestCompletedLevelOfEducationDescriptorId" column="HighestCompletedLevelOfEducationDescriptorId" type="int" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="LoginId" column="LoginId" type="string" length="120" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="PreferredFirstName" column="PreferredFirstName" type="string" length="75" />
    <property name="PreferredLastSurname" column="PreferredLastSurname" type="string" length="75" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ContactAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContactUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactAddress" />
    </set>

    <set name="ContactElectronicMails" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContactUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactElectronicMail" />
    </set>

    <set name="ContactInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContactUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactInternationalAddress" />
    </set>

    <set name="ContactLanguages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContactUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactLanguage" />
    </set>

    <set name="ContactOtherNames" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContactUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactOtherName" />
    </set>

    <set name="ContactPersonalIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContactUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactPersonalIdentificationDocument" />
    </set>

    <set name="ContactTelephones" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContactUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactTelephone" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactAddress" table="ContactAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="Contact">
        <column name="ContactUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ContactAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="ContactUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactAddressPeriod" table="ContactAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="ContactAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="ContactUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactElectronicMail" table="ContactElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="Contact">
        <column name="ContactUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactInternationalAddress" table="ContactInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="Contact">
        <column name="ContactUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactLanguage" table="ContactLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="Contact">
        <column name="ContactUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ContactLanguageUses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="ContactUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactLanguageUse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactLanguageUse" table="ContactLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="ContactLanguage">
        <column name="LanguageDescriptorId" />
        <column name="ContactUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactOtherName" table="ContactOtherName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" />
      <key-many-to-one name="Contact">
        <column name="ContactUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactPersonalIdentificationDocument" table="ContactPersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Contact">
        <column name="ContactUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactTelephone" table="ContactTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="Contact">
        <column name="ContactUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ContactIdentityAggregate.EdFi.ContactIdentityReferenceData" table="ContactIdentity" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ContactIdentificationSystemDescriptorId" column="ContactIdentificationSystemDescriptorId" type="int"  />
            <key-property name="ContactUSI" column="ContactUSI" type="int"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ContactIdentityAggregate.EdFi.ContactIdentity" table="ContactIdentity" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContactIdentificationSystemDescriptorId" column="ContactIdentificationSystemDescriptorId" type="int" />
      <key-property name="ContactUSI" column="ContactUSI" type="int" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="ContactReferenceData" class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ContactUSI" />
    </many-to-one>
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseReferenceData" table="Course" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CourseCode" column="CourseCode" type="string"  length="120"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.Course" table="Course" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseCode" column="CourseCode" type="string" length="120" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CareerPathwayDescriptorId" column="CareerPathwayDescriptorId" type="int" />
    <property name="CourseDefinedByDescriptorId" column="CourseDefinedByDescriptorId" type="int" />
    <property name="CourseDescription" column="CourseDescription" type="string" length="1024" />
    <property name="CourseGPAApplicabilityDescriptorId" column="CourseGPAApplicabilityDescriptorId" type="int" />
    <property name="CourseTitle" column="CourseTitle" type="string" length="120" not-null="true" />
    <property name="DateCourseAdopted" column="DateCourseAdopted" type="date" />
    <property name="HighSchoolCourseRequirement" column="HighSchoolCourseRequirement" type="bool" />
    <property name="MaxCompletionsForCredit" column="MaxCompletionsForCredit" type="int" />
    <property name="MaximumAvailableCreditConversion" column="MaximumAvailableCreditConversion" type="decimal" />
    <property name="MaximumAvailableCredits" column="MaximumAvailableCredits" type="decimal" />
    <property name="MaximumAvailableCreditTypeDescriptorId" column="MaximumAvailableCreditTypeDescriptorId" type="int" />
    <property name="MinimumAvailableCreditConversion" column="MinimumAvailableCreditConversion" type="decimal" />
    <property name="MinimumAvailableCredits" column="MinimumAvailableCredits" type="decimal" />
    <property name="MinimumAvailableCreditTypeDescriptorId" column="MinimumAvailableCreditTypeDescriptorId" type="int" />
    <property name="NumberOfParts" column="NumberOfParts" type="int" not-null="true" />
    <property name="TimeRequiredForCompletion" column="TimeRequiredForCompletion" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CourseAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseAcademicSubject" />
    </set>

    <set name="CourseCompetencyLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseCompetencyLevel" />
    </set>

    <set name="CourseIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseIdentificationCode" />
    </set>

    <set name="CourseLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseLearningStandard" />
    </set>

    <set name="CourseLevelCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseLevelCharacteristic" />
    </set>

    <set name="CourseOfferedGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseOfferedGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseAcademicSubject" table="CourseAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseCompetencyLevel" table="CourseCompetencyLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseIdentificationCode" table="CourseIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseIdentificationSystemDescriptorId" column="CourseIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="120" />
    <property name="CourseCatalogURL" column="CourseCatalogURL" type="string" length="255" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseLearningStandard" table="CourseLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseLevelCharacteristic" table="CourseLevelCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseOfferedGradeLevel" table="CourseOfferedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Course">
        <column name="CourseCode" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingReferenceData" table="CourseOffering" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOffering" table="CourseOffering" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CourseCode" column="CourseCode" type="string" length="120" not-null="true" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" />
    <property name="InstructionalTimePlanned" column="InstructionalTimePlanned" type="int" />
    <property name="LocalCourseTitle" column="LocalCourseTitle" type="string" length="120" />

    <!-- Aggregate references -->
    <many-to-one name="CourseReferenceData" class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CourseCode" />
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SessionReferenceData" class="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CourseOfferingCourseLevelCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingCourseLevelCharacteristic" />
    </set>

    <set name="CourseOfferingCurriculumUseds" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingCurriculumUsed" />
    </set>

    <set name="CourseOfferingOfferedGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingOfferedGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingCourseLevelCharacteristic" table="CourseOfferingCourseLevelCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="CourseOffering">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingCurriculumUsed" table="CourseOfferingCurriculumUsed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CurriculumUsedDescriptorId" column="CurriculumUsedDescriptorId" type="int" />
      <key-many-to-one name="CourseOffering">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingOfferedGradeLevel" table="CourseOfferingOfferedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="CourseOffering">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptReferenceData" table="CourseTranscript" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CourseAttemptResultDescriptorId" column="CourseAttemptResultDescriptorId" type="int"  />
            <key-property name="CourseCode" column="CourseCode" type="string"  length="120"  />
            <key-property name="CourseEducationOrganizationId" column="CourseEducationOrganizationId" type="long"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscript" table="CourseTranscript" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseAttemptResultDescriptorId" column="CourseAttemptResultDescriptorId" type="int" />
      <key-property name="CourseCode" column="CourseCode" type="string" length="120" />
      <key-property name="CourseEducationOrganizationId" column="CourseEducationOrganizationId" type="long" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AlternativeCourseTitle" column="AlternativeCourseTitle" type="string" length="120" />
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="120" />
    <property name="AttemptedCreditConversion" column="AttemptedCreditConversion" type="decimal" />
    <property name="AttemptedCredits" column="AttemptedCredits" type="decimal" />
    <property name="AttemptedCreditTypeDescriptorId" column="AttemptedCreditTypeDescriptorId" type="int" />
    <property name="CourseCatalogURL" column="CourseCatalogURL" type="string" length="255" />
    <property name="CourseRepeatCodeDescriptorId" column="CourseRepeatCodeDescriptorId" type="int" />
    <property name="CourseTitle" column="CourseTitle" type="string" length="120" />
    <property name="EarnedCreditConversion" column="EarnedCreditConversion" type="decimal" />
    <property name="EarnedCredits" column="EarnedCredits" type="decimal" />
    <property name="EarnedCreditTypeDescriptorId" column="EarnedCreditTypeDescriptorId" type="int" />
    <property name="ExternalEducationOrganizationId" column="ExternalEducationOrganizationId" type="long" />
    <property name="ExternalEducationOrganizationNameOfInstitution" column="ExternalEducationOrganizationNameOfInstitution" type="string" length="75" />
    <property name="FinalLetterGradeEarned" column="FinalLetterGradeEarned" type="string" length="20" />
    <property name="FinalNumericGradeEarned" column="FinalNumericGradeEarned" type="decimal" />
    <property name="MethodCreditEarnedDescriptorId" column="MethodCreditEarnedDescriptorId" type="int" />
    <property name="ResponsibleTeacherStaffUSI" column="ResponsibleTeacherStaffUSI" type="int" />
    <property name="WhenTakenGradeLevelDescriptorId" column="WhenTakenGradeLevelDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CourseReferenceData" class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CourseCode" />
      <column name="CourseEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ExternalEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ExternalEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ResponsibleTeacherStaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ResponsibleTeacherStaffUSI" />
    </many-to-one>
    <many-to-one name="StudentAcademicRecordReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="SchoolYear" />
      <column name="StudentUSI" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CourseTranscriptAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptAcademicSubject" />
    </set>

    <set name="CourseTranscriptAlternativeCourseIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptAlternativeCourseIdentificationCode" />
    </set>

    <set name="CourseTranscriptCoursePrograms" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptCourseProgram" />
    </set>

    <set name="CourseTranscriptCreditCategories" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptCreditCategory" />
    </set>

    <set name="CourseTranscriptEarnedAdditionalCredits" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptEarnedAdditionalCredits" />
    </set>

    <set name="CourseTranscriptPartialCourseTranscriptAwards" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptPartialCourseTranscriptAwards" />
    </set>

    <set name="CourseTranscriptSections" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptSection" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptAcademicSubject" table="CourseTranscriptAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptAlternativeCourseIdentificationCode" table="CourseTranscriptAlternativeCourseIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseIdentificationSystemDescriptorId" column="CourseIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="120" />
    <property name="CourseCatalogURL" column="CourseCatalogURL" type="string" length="255" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptCourseProgram" table="CourseTranscriptCourseProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseProgramName" column="CourseProgramName" type="string" length="60" />
      <key-property name="CourseProgramTypeDescriptorId" column="CourseProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="CourseProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CourseEducationOrganizationId" />
      <column name="CourseProgramName" />
      <column name="CourseProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptCreditCategory" table="CourseTranscriptCreditCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CreditCategoryDescriptorId" column="CreditCategoryDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptEarnedAdditionalCredits" table="CourseTranscriptEarnedAdditionalCredits" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AdditionalCreditTypeDescriptorId" column="AdditionalCreditTypeDescriptorId" type="int" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Credits" column="Credits" type="decimal" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptPartialCourseTranscriptAwards" table="CourseTranscriptPartialCourseTranscriptAwards" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AwardDate" column="AwardDate" type="date" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EarnedCredits" column="EarnedCredits" type="decimal" not-null="true" />
    <property name="LetterGradeEarned" column="LetterGradeEarned" type="string" length="20" />
    <property name="MethodCreditEarnedDescriptorId" column="MethodCreditEarnedDescriptorId" type="int" />
    <property name="NumericGradeEarned" column="NumericGradeEarned" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CourseTranscriptAggregate.EdFi.CourseTranscriptSection" table="CourseTranscriptSection" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-many-to-one name="CourseTranscript">
        <column name="CourseAttemptResultDescriptorId" />
        <column name="CourseCode" />
        <column name="CourseEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialReferenceData" table="Credential" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CredentialIdentifier" column="CredentialIdentifier" type="string"  length="120"  />
            <key-property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.Credential" table="Credential" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="120" />
      <key-property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BoardCertificationIndicator" column="BoardCertificationIndicator" type="bool" />
    <property name="CertificationIdentifier" column="CertificationIdentifier" type="string" length="120" />
    <property name="CertificationNamespace" column="CertificationNamespace" type="string" length="255" />
    <property name="CertificationRouteDescriptorId" column="CertificationRouteDescriptorId" type="int" />
    <property name="CertificationTitle" column="CertificationTitle" type="string" length="64" />
    <property name="CredentialFieldDescriptorId" column="CredentialFieldDescriptorId" type="int" />
    <property name="CredentialStatusDate" column="CredentialStatusDate" type="date" />
    <property name="CredentialStatusDescriptorId" column="CredentialStatusDescriptorId" type="int" />
    <property name="CredentialTypeDescriptorId" column="CredentialTypeDescriptorId" type="int" not-null="true" />
    <property name="EducatorRoleDescriptorId" column="EducatorRoleDescriptorId" type="int" />
    <property name="EffectiveDate" column="EffectiveDate" type="date" />
    <property name="ExpirationDate" column="ExpirationDate" type="date" />
    <property name="IssuanceDate" column="IssuanceDate" type="date" not-null="true" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    <property name="TeachingCredentialBasisDescriptorId" column="TeachingCredentialBasisDescriptorId" type="int" />
    <property name="TeachingCredentialDescriptorId" column="TeachingCredentialDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CertificationReferenceData" class="EdFi.Ods.Entities.NHibernate.CertificationAggregate.EdFi.CertificationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CertificationIdentifier" />
      <column name="CertificationNamespace" />
    </many-to-one>
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="CredentialAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialAcademicSubject" />
    </set>

    <set name="CredentialEndorsements" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialEndorsement" />
    </set>

    <set name="CredentialGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialGradeLevel" />
    </set>

    <set name="CredentialStudentAcademicRecords" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialStudentAcademicRecord" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialAcademicSubject" table="CredentialAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="Credential">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialEndorsement" table="CredentialEndorsement" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialEndorsementX" column="CredentialEndorsement" type="string" length="255" />
      <key-many-to-one name="Credential">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialGradeLevel" table="CredentialGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Credential">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialStudentAcademicRecord" table="CredentialStudentAcademicRecord" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
      <key-many-to-one name="Credential">
        <column name="CredentialIdentifier" />
        <column name="StateOfIssueStateAbbreviationDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StudentAcademicRecordReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="SchoolYear" />
      <column name="StudentUSI" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CredentialEventAggregate.EdFi.CredentialEventReferenceData" table="CredentialEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CredentialEventDate" column="CredentialEventDate" type="date"  />
            <key-property name="CredentialEventTypeDescriptorId" column="CredentialEventTypeDescriptorId" type="int"  />
            <key-property name="CredentialIdentifier" column="CredentialIdentifier" type="string"  length="120"  />
            <key-property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CredentialEventAggregate.EdFi.CredentialEvent" table="CredentialEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialEventDate" column="CredentialEventDate" type="date" />
      <key-property name="CredentialEventTypeDescriptorId" column="CredentialEventTypeDescriptorId" type="int" />
      <key-property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="120" />
      <key-property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CredentialEventReason" column="CredentialEventReason" type="string" length="1024" />

    <!-- Aggregate references -->
    <many-to-one name="CredentialReferenceData" class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CredentialIdentifier" />
      <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.CrisisEventAggregate.EdFi.CrisisEventReferenceData" table="CrisisEvent" lazy="true" >
        <id name="CrisisEventName" column="CrisisEventName" type="string"  length="100" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.CrisisEventAggregate.EdFi.CrisisEvent" table="CrisisEvent" lazy="false" discriminator-value="null">
    <id name="CrisisEventName" column="CrisisEventName" type="string" length="100">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CrisisDescription" column="CrisisDescription" type="string" length="1024" />
    <property name="CrisisEndDate" column="CrisisEndDate" type="date" />
    <property name="CrisisStartDate" column="CrisisStartDate" type="date" />
    <property name="CrisisTypeDescriptorId" column="CrisisTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DescriptorAggregate.EdFi.Descriptor" table="Descriptor" lazy="false" abstract="true" discriminator-value="null">
    <id name="DescriptorId" column="DescriptorId" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CodeValue" column="CodeValue" type="string" length="50" not-null="true" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="EffectiveBeginDate" column="EffectiveBeginDate" type="date" />
    <property name="EffectiveEndDate" column="EffectiveEndDate" type="date" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="ShortDescription" column="ShortDescription" type="string" length="75" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <!-- Derived classes -->
    <subclass name="EdFi.Ods.Entities.NHibernate.AbsenceEventCategoryDescriptorAggregate.EdFi.AbsenceEventCategoryDescriptor" lazy="false" discriminator-value="edfi.AbsenceEventCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AbsenceEventCategoryDescriptor" >
          <key>
            <column name="AbsenceEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AbsenceEventCategoryDescriptorId" column="AbsenceEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AcademicHonorCategoryDescriptorAggregate.EdFi.AcademicHonorCategoryDescriptor" lazy="false" discriminator-value="edfi.AcademicHonorCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AcademicHonorCategoryDescriptor" >
          <key>
            <column name="AcademicHonorCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AcademicHonorCategoryDescriptorId" column="AcademicHonorCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AcademicSubjectDescriptorAggregate.EdFi.AcademicSubjectDescriptor" lazy="false" discriminator-value="edfi.AcademicSubjectDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AcademicSubjectDescriptor" >
          <key>
            <column name="AcademicSubjectDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AccommodationDescriptorAggregate.EdFi.AccommodationDescriptor" lazy="false" discriminator-value="edfi.AccommodationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AccommodationDescriptor" >
          <key>
            <column name="AccommodationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AccommodationDescriptorId" column="AccommodationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AccountTypeDescriptorAggregate.EdFi.AccountTypeDescriptor" lazy="false" discriminator-value="edfi.AccountTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AccountTypeDescriptor" >
          <key>
            <column name="AccountTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AccountTypeDescriptorId" column="AccountTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AccreditationStatusDescriptorAggregate.EdFi.AccreditationStatusDescriptor" lazy="false" discriminator-value="edfi.AccreditationStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AccreditationStatusDescriptor" >
          <key>
            <column name="AccreditationStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AccreditationStatusDescriptorId" column="AccreditationStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AchievementCategoryDescriptorAggregate.EdFi.AchievementCategoryDescriptor" lazy="false" discriminator-value="edfi.AchievementCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AchievementCategoryDescriptor" >
          <key>
            <column name="AchievementCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AdditionalCreditTypeDescriptorAggregate.EdFi.AdditionalCreditTypeDescriptor" lazy="false" discriminator-value="edfi.AdditionalCreditTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AdditionalCreditTypeDescriptor" >
          <key>
            <column name="AdditionalCreditTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AdditionalCreditTypeDescriptorId" column="AdditionalCreditTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AddressTypeDescriptorAggregate.EdFi.AddressTypeDescriptor" lazy="false" discriminator-value="edfi.AddressTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AddressTypeDescriptor" >
          <key>
            <column name="AddressTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AdministrationEnvironmentDescriptorAggregate.EdFi.AdministrationEnvironmentDescriptor" lazy="false" discriminator-value="edfi.AdministrationEnvironmentDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AdministrationEnvironmentDescriptor" >
          <key>
            <column name="AdministrationEnvironmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AdministrationEnvironmentDescriptorId" column="AdministrationEnvironmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AdministrativeFundingControlDescriptorAggregate.EdFi.AdministrativeFundingControlDescriptor" lazy="false" discriminator-value="edfi.AdministrativeFundingControlDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AdministrativeFundingControlDescriptor" >
          <key>
            <column name="AdministrativeFundingControlDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AdministrativeFundingControlDescriptorId" column="AdministrativeFundingControlDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AidTypeDescriptorAggregate.EdFi.AidTypeDescriptor" lazy="false" discriminator-value="edfi.AidTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AidTypeDescriptor" >
          <key>
            <column name="AidTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AidTypeDescriptorId" column="AidTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AncestryEthnicOriginDescriptorAggregate.EdFi.AncestryEthnicOriginDescriptor" lazy="false" discriminator-value="edfi.AncestryEthnicOriginDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AncestryEthnicOriginDescriptor" >
          <key>
            <column name="AncestryEthnicOriginDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AncestryEthnicOriginDescriptorId" column="AncestryEthnicOriginDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ApplicationEventResultDescriptorAggregate.EdFi.ApplicationEventResultDescriptor" lazy="false" discriminator-value="edfi.ApplicationEventResultDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ApplicationEventResultDescriptor" >
          <key>
            <column name="ApplicationEventResultDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ApplicationEventResultDescriptorId" column="ApplicationEventResultDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ApplicationEventTypeDescriptorAggregate.EdFi.ApplicationEventTypeDescriptor" lazy="false" discriminator-value="edfi.ApplicationEventTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ApplicationEventTypeDescriptor" >
          <key>
            <column name="ApplicationEventTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ApplicationEventTypeDescriptorId" column="ApplicationEventTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ApplicationSourceDescriptorAggregate.EdFi.ApplicationSourceDescriptor" lazy="false" discriminator-value="edfi.ApplicationSourceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ApplicationSourceDescriptor" >
          <key>
            <column name="ApplicationSourceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ApplicationSourceDescriptorId" column="ApplicationSourceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ApplicationStatusDescriptorAggregate.EdFi.ApplicationStatusDescriptor" lazy="false" discriminator-value="edfi.ApplicationStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ApplicationStatusDescriptor" >
          <key>
            <column name="ApplicationStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ApplicationStatusDescriptorId" column="ApplicationStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AssessmentCategoryDescriptorAggregate.EdFi.AssessmentCategoryDescriptor" lazy="false" discriminator-value="edfi.AssessmentCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AssessmentCategoryDescriptor" >
          <key>
            <column name="AssessmentCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentCategoryDescriptorId" column="AssessmentCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AssessmentIdentificationSystemDescriptorAggregate.EdFi.AssessmentIdentificationSystemDescriptor" lazy="false" discriminator-value="edfi.AssessmentIdentificationSystemDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AssessmentIdentificationSystemDescriptor" >
          <key>
            <column name="AssessmentIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentIdentificationSystemDescriptorId" column="AssessmentIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AssessmentItemCategoryDescriptorAggregate.EdFi.AssessmentItemCategoryDescriptor" lazy="false" discriminator-value="edfi.AssessmentItemCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AssessmentItemCategoryDescriptor" >
          <key>
            <column name="AssessmentItemCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentItemCategoryDescriptorId" column="AssessmentItemCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AssessmentItemResultDescriptorAggregate.EdFi.AssessmentItemResultDescriptor" lazy="false" discriminator-value="edfi.AssessmentItemResultDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AssessmentItemResultDescriptor" >
          <key>
            <column name="AssessmentItemResultDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentItemResultDescriptorId" column="AssessmentItemResultDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AssessmentPeriodDescriptorAggregate.EdFi.AssessmentPeriodDescriptor" lazy="false" discriminator-value="edfi.AssessmentPeriodDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AssessmentPeriodDescriptor" >
          <key>
            <column name="AssessmentPeriodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentPeriodDescriptorId" column="AssessmentPeriodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AssessmentReportingMethodDescriptorAggregate.EdFi.AssessmentReportingMethodDescriptor" lazy="false" discriminator-value="edfi.AssessmentReportingMethodDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AssessmentReportingMethodDescriptor" >
          <key>
            <column name="AssessmentReportingMethodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AssignmentLateStatusDescriptorAggregate.EdFi.AssignmentLateStatusDescriptor" lazy="false" discriminator-value="edfi.AssignmentLateStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AssignmentLateStatusDescriptor" >
          <key>
            <column name="AssignmentLateStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AssignmentLateStatusDescriptorId" column="AssignmentLateStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AttemptStatusDescriptorAggregate.EdFi.AttemptStatusDescriptor" lazy="false" discriminator-value="edfi.AttemptStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AttemptStatusDescriptor" >
          <key>
            <column name="AttemptStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AttemptStatusDescriptorId" column="AttemptStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.AttendanceEventCategoryDescriptorAggregate.EdFi.AttendanceEventCategoryDescriptor" lazy="false" discriminator-value="edfi.AttendanceEventCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="AttendanceEventCategoryDescriptor" >
          <key>
            <column name="AttendanceEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.BackgroundCheckStatusDescriptorAggregate.EdFi.BackgroundCheckStatusDescriptor" lazy="false" discriminator-value="edfi.BackgroundCheckStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="BackgroundCheckStatusDescriptor" >
          <key>
            <column name="BackgroundCheckStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="BackgroundCheckStatusDescriptorId" column="BackgroundCheckStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.BackgroundCheckTypeDescriptorAggregate.EdFi.BackgroundCheckTypeDescriptor" lazy="false" discriminator-value="edfi.BackgroundCheckTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="BackgroundCheckTypeDescriptor" >
          <key>
            <column name="BackgroundCheckTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="BackgroundCheckTypeDescriptorId" column="BackgroundCheckTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.BarrierToInternetAccessInResidenceDescriptorAggregate.EdFi.BarrierToInternetAccessInResidenceDescriptor" lazy="false" discriminator-value="edfi.BarrierToInternetAccessInResidenceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="BarrierToInternetAccessInResidenceDescriptor" >
          <key>
            <column name="BarrierToInternetAccessInResidenceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="BarrierToInternetAccessInResidenceDescriptorId" column="BarrierToInternetAccessInResidenceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.BehaviorDescriptorAggregate.EdFi.BehaviorDescriptor" lazy="false" discriminator-value="edfi.BehaviorDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="BehaviorDescriptor" >
          <key>
            <column name="BehaviorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.BusRouteDescriptorAggregate.EdFi.BusRouteDescriptor" lazy="false" discriminator-value="edfi.BusRouteDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="BusRouteDescriptor" >
          <key>
            <column name="BusRouteDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="BusRouteDescriptorId" column="BusRouteDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CalendarEventDescriptorAggregate.EdFi.CalendarEventDescriptor" lazy="false" discriminator-value="edfi.CalendarEventDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CalendarEventDescriptor" >
          <key>
            <column name="CalendarEventDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CalendarEventDescriptorId" column="CalendarEventDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CalendarTypeDescriptorAggregate.EdFi.CalendarTypeDescriptor" lazy="false" discriminator-value="edfi.CalendarTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CalendarTypeDescriptor" >
          <key>
            <column name="CalendarTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CalendarTypeDescriptorId" column="CalendarTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CandidateCharacteristicDescriptorAggregate.EdFi.CandidateCharacteristicDescriptor" lazy="false" discriminator-value="edfi.CandidateCharacteristicDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CandidateCharacteristicDescriptor" >
          <key>
            <column name="CandidateCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CandidateCharacteristicDescriptorId" column="CandidateCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CandidateIdentificationSystemDescriptorAggregate.EdFi.CandidateIdentificationSystemDescriptor" lazy="false" discriminator-value="edfi.CandidateIdentificationSystemDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CandidateIdentificationSystemDescriptor" >
          <key>
            <column name="CandidateIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CandidateIdentificationSystemDescriptorId" column="CandidateIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CareerPathwayDescriptorAggregate.EdFi.CareerPathwayDescriptor" lazy="false" discriminator-value="edfi.CareerPathwayDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CareerPathwayDescriptor" >
          <key>
            <column name="CareerPathwayDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CareerPathwayDescriptorId" column="CareerPathwayDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CertificationExamStatusDescriptorAggregate.EdFi.CertificationExamStatusDescriptor" lazy="false" discriminator-value="edfi.CertificationExamStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CertificationExamStatusDescriptor" >
          <key>
            <column name="CertificationExamStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CertificationExamStatusDescriptorId" column="CertificationExamStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CertificationExamTypeDescriptorAggregate.EdFi.CertificationExamTypeDescriptor" lazy="false" discriminator-value="edfi.CertificationExamTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CertificationExamTypeDescriptor" >
          <key>
            <column name="CertificationExamTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CertificationExamTypeDescriptorId" column="CertificationExamTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CertificationFieldDescriptorAggregate.EdFi.CertificationFieldDescriptor" lazy="false" discriminator-value="edfi.CertificationFieldDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CertificationFieldDescriptor" >
          <key>
            <column name="CertificationFieldDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CertificationFieldDescriptorId" column="CertificationFieldDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CertificationLevelDescriptorAggregate.EdFi.CertificationLevelDescriptor" lazy="false" discriminator-value="edfi.CertificationLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CertificationLevelDescriptor" >
          <key>
            <column name="CertificationLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CertificationLevelDescriptorId" column="CertificationLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CertificationRouteDescriptorAggregate.EdFi.CertificationRouteDescriptor" lazy="false" discriminator-value="edfi.CertificationRouteDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CertificationRouteDescriptor" >
          <key>
            <column name="CertificationRouteDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CertificationRouteDescriptorId" column="CertificationRouteDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CertificationStandardDescriptorAggregate.EdFi.CertificationStandardDescriptor" lazy="false" discriminator-value="edfi.CertificationStandardDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CertificationStandardDescriptor" >
          <key>
            <column name="CertificationStandardDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CertificationStandardDescriptorId" column="CertificationStandardDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CharterApprovalAgencyTypeDescriptorAggregate.EdFi.CharterApprovalAgencyTypeDescriptor" lazy="false" discriminator-value="edfi.CharterApprovalAgencyTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CharterApprovalAgencyTypeDescriptor" >
          <key>
            <column name="CharterApprovalAgencyTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CharterApprovalAgencyTypeDescriptorId" column="CharterApprovalAgencyTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CharterStatusDescriptorAggregate.EdFi.CharterStatusDescriptor" lazy="false" discriminator-value="edfi.CharterStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CharterStatusDescriptor" >
          <key>
            <column name="CharterStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CharterStatusDescriptorId" column="CharterStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CitizenshipStatusDescriptorAggregate.EdFi.CitizenshipStatusDescriptor" lazy="false" discriminator-value="edfi.CitizenshipStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CitizenshipStatusDescriptor" >
          <key>
            <column name="CitizenshipStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ClassroomPositionDescriptorAggregate.EdFi.ClassroomPositionDescriptor" lazy="false" discriminator-value="edfi.ClassroomPositionDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ClassroomPositionDescriptor" >
          <key>
            <column name="ClassroomPositionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ClassroomPositionDescriptorId" column="ClassroomPositionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CohortScopeDescriptorAggregate.EdFi.CohortScopeDescriptor" lazy="false" discriminator-value="edfi.CohortScopeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CohortScopeDescriptor" >
          <key>
            <column name="CohortScopeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CohortScopeDescriptorId" column="CohortScopeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CohortTypeDescriptorAggregate.EdFi.CohortTypeDescriptor" lazy="false" discriminator-value="edfi.CohortTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CohortTypeDescriptor" >
          <key>
            <column name="CohortTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CohortTypeDescriptorId" column="CohortTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CohortYearTypeDescriptorAggregate.EdFi.CohortYearTypeDescriptor" lazy="false" discriminator-value="edfi.CohortYearTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CohortYearTypeDescriptor" >
          <key>
            <column name="CohortYearTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CohortYearTypeDescriptorId" column="CohortYearTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CompetencyLevelDescriptorAggregate.EdFi.CompetencyLevelDescriptor" lazy="false" discriminator-value="edfi.CompetencyLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CompetencyLevelDescriptor" >
          <key>
            <column name="CompetencyLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ContactIdentificationSystemDescriptorAggregate.EdFi.ContactIdentificationSystemDescriptor" lazy="false" discriminator-value="edfi.ContactIdentificationSystemDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ContactIdentificationSystemDescriptor" >
          <key>
            <column name="ContactIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ContactIdentificationSystemDescriptorId" column="ContactIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ContactTypeDescriptorAggregate.EdFi.ContactTypeDescriptor" lazy="false" discriminator-value="edfi.ContactTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ContactTypeDescriptor" >
          <key>
            <column name="ContactTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ContactTypeDescriptorId" column="ContactTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ContentClassDescriptorAggregate.EdFi.ContentClassDescriptor" lazy="false" discriminator-value="edfi.ContentClassDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ContentClassDescriptor" >
          <key>
            <column name="ContentClassDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ContentClassDescriptorId" column="ContentClassDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ContinuationOfServicesReasonDescriptorAggregate.EdFi.ContinuationOfServicesReasonDescriptor" lazy="false" discriminator-value="edfi.ContinuationOfServicesReasonDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ContinuationOfServicesReasonDescriptor" >
          <key>
            <column name="ContinuationOfServicesReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ContinuationOfServicesReasonDescriptorId" column="ContinuationOfServicesReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CostRateDescriptorAggregate.EdFi.CostRateDescriptor" lazy="false" discriminator-value="edfi.CostRateDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CostRateDescriptor" >
          <key>
            <column name="CostRateDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CostRateDescriptorId" column="CostRateDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CoteachingStyleObservedDescriptorAggregate.EdFi.CoteachingStyleObservedDescriptor" lazy="false" discriminator-value="edfi.CoteachingStyleObservedDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CoteachingStyleObservedDescriptor" >
          <key>
            <column name="CoteachingStyleObservedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CoteachingStyleObservedDescriptorId" column="CoteachingStyleObservedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CountryDescriptorAggregate.EdFi.CountryDescriptor" lazy="false" discriminator-value="edfi.CountryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CountryDescriptor" >
          <key>
            <column name="CountryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CourseAttemptResultDescriptorAggregate.EdFi.CourseAttemptResultDescriptor" lazy="false" discriminator-value="edfi.CourseAttemptResultDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CourseAttemptResultDescriptor" >
          <key>
            <column name="CourseAttemptResultDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseAttemptResultDescriptorId" column="CourseAttemptResultDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CourseDefinedByDescriptorAggregate.EdFi.CourseDefinedByDescriptor" lazy="false" discriminator-value="edfi.CourseDefinedByDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CourseDefinedByDescriptor" >
          <key>
            <column name="CourseDefinedByDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseDefinedByDescriptorId" column="CourseDefinedByDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CourseGPAApplicabilityDescriptorAggregate.EdFi.CourseGPAApplicabilityDescriptor" lazy="false" discriminator-value="edfi.CourseGPAApplicabilityDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CourseGPAApplicabilityDescriptor" >
          <key>
            <column name="CourseGPAApplicabilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseGPAApplicabilityDescriptorId" column="CourseGPAApplicabilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CourseIdentificationSystemDescriptorAggregate.EdFi.CourseIdentificationSystemDescriptor" lazy="false" discriminator-value="edfi.CourseIdentificationSystemDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CourseIdentificationSystemDescriptor" >
          <key>
            <column name="CourseIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseIdentificationSystemDescriptorId" column="CourseIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CourseLevelCharacteristicDescriptorAggregate.EdFi.CourseLevelCharacteristicDescriptor" lazy="false" discriminator-value="edfi.CourseLevelCharacteristicDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CourseLevelCharacteristicDescriptor" >
          <key>
            <column name="CourseLevelCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CourseRepeatCodeDescriptorAggregate.EdFi.CourseRepeatCodeDescriptor" lazy="false" discriminator-value="edfi.CourseRepeatCodeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CourseRepeatCodeDescriptor" >
          <key>
            <column name="CourseRepeatCodeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CourseRepeatCodeDescriptorId" column="CourseRepeatCodeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CredentialEventTypeDescriptorAggregate.EdFi.CredentialEventTypeDescriptor" lazy="false" discriminator-value="edfi.CredentialEventTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CredentialEventTypeDescriptor" >
          <key>
            <column name="CredentialEventTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CredentialEventTypeDescriptorId" column="CredentialEventTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CredentialFieldDescriptorAggregate.EdFi.CredentialFieldDescriptor" lazy="false" discriminator-value="edfi.CredentialFieldDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CredentialFieldDescriptor" >
          <key>
            <column name="CredentialFieldDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CredentialFieldDescriptorId" column="CredentialFieldDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CredentialStatusDescriptorAggregate.EdFi.CredentialStatusDescriptor" lazy="false" discriminator-value="edfi.CredentialStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CredentialStatusDescriptor" >
          <key>
            <column name="CredentialStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CredentialStatusDescriptorId" column="CredentialStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CredentialTypeDescriptorAggregate.EdFi.CredentialTypeDescriptor" lazy="false" discriminator-value="edfi.CredentialTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CredentialTypeDescriptor" >
          <key>
            <column name="CredentialTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CredentialTypeDescriptorId" column="CredentialTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CreditCategoryDescriptorAggregate.EdFi.CreditCategoryDescriptor" lazy="false" discriminator-value="edfi.CreditCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CreditCategoryDescriptor" >
          <key>
            <column name="CreditCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CreditCategoryDescriptorId" column="CreditCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CreditTypeDescriptorAggregate.EdFi.CreditTypeDescriptor" lazy="false" discriminator-value="edfi.CreditTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CreditTypeDescriptor" >
          <key>
            <column name="CreditTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CrisisTypeDescriptorAggregate.EdFi.CrisisTypeDescriptor" lazy="false" discriminator-value="edfi.CrisisTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CrisisTypeDescriptor" >
          <key>
            <column name="CrisisTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CrisisTypeDescriptorId" column="CrisisTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CTEProgramServiceDescriptorAggregate.EdFi.CTEProgramServiceDescriptor" lazy="false" discriminator-value="edfi.CTEProgramServiceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CTEProgramServiceDescriptor" >
          <key>
            <column name="CTEProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CTEProgramServiceDescriptorId" column="CTEProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CurriculumUsedDescriptorAggregate.EdFi.CurriculumUsedDescriptor" lazy="false" discriminator-value="edfi.CurriculumUsedDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CurriculumUsedDescriptor" >
          <key>
            <column name="CurriculumUsedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="CurriculumUsedDescriptorId" column="CurriculumUsedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DegreeDescriptorAggregate.EdFi.DegreeDescriptor" lazy="false" discriminator-value="edfi.DegreeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DegreeDescriptor" >
          <key>
            <column name="DegreeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DegreeDescriptorId" column="DegreeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DeliveryMethodDescriptorAggregate.EdFi.DeliveryMethodDescriptor" lazy="false" discriminator-value="edfi.DeliveryMethodDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DeliveryMethodDescriptor" >
          <key>
            <column name="DeliveryMethodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DiagnosisDescriptorAggregate.EdFi.DiagnosisDescriptor" lazy="false" discriminator-value="edfi.DiagnosisDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DiagnosisDescriptor" >
          <key>
            <column name="DiagnosisDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DiplomaLevelDescriptorAggregate.EdFi.DiplomaLevelDescriptor" lazy="false" discriminator-value="edfi.DiplomaLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DiplomaLevelDescriptor" >
          <key>
            <column name="DiplomaLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DiplomaLevelDescriptorId" column="DiplomaLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DiplomaTypeDescriptorAggregate.EdFi.DiplomaTypeDescriptor" lazy="false" discriminator-value="edfi.DiplomaTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DiplomaTypeDescriptor" >
          <key>
            <column name="DiplomaTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DiplomaTypeDescriptorId" column="DiplomaTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DisabilityDescriptorAggregate.EdFi.DisabilityDescriptor" lazy="false" discriminator-value="edfi.DisabilityDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DisabilityDescriptor" >
          <key>
            <column name="DisabilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DisabilityDesignationDescriptorAggregate.EdFi.DisabilityDesignationDescriptor" lazy="false" discriminator-value="edfi.DisabilityDesignationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DisabilityDesignationDescriptor" >
          <key>
            <column name="DisabilityDesignationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DisabilityDeterminationSourceTypeDescriptorAggregate.EdFi.DisabilityDeterminationSourceTypeDescriptor" lazy="false" discriminator-value="edfi.DisabilityDeterminationSourceTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DisabilityDeterminationSourceTypeDescriptor" >
          <key>
            <column name="DisabilityDeterminationSourceTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DisciplineActionLengthDifferenceReasonDescriptorAggregate.EdFi.DisciplineActionLengthDifferenceReasonDescriptor" lazy="false" discriminator-value="edfi.DisciplineActionLengthDifferenceReasonDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DisciplineActionLengthDifferenceReasonDescriptor" >
          <key>
            <column name="DisciplineActionLengthDifferenceReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisciplineActionLengthDifferenceReasonDescriptorId" column="DisciplineActionLengthDifferenceReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DisciplineDescriptorAggregate.EdFi.DisciplineDescriptor" lazy="false" discriminator-value="edfi.DisciplineDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DisciplineDescriptor" >
          <key>
            <column name="DisciplineDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisciplineDescriptorId" column="DisciplineDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentParticipationCodeDescriptorAggregate.EdFi.DisciplineIncidentParticipationCodeDescriptor" lazy="false" discriminator-value="edfi.DisciplineIncidentParticipationCodeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DisciplineIncidentParticipationCodeDescriptor" >
          <key>
            <column name="DisciplineIncidentParticipationCodeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DisplacedStudentStatusDescriptorAggregate.EdFi.DisplacedStudentStatusDescriptor" lazy="false" discriminator-value="edfi.DisplacedStudentStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DisplacedStudentStatusDescriptor" >
          <key>
            <column name="DisplacedStudentStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DisplacedStudentStatusDescriptorId" column="DisplacedStudentStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DualCreditInstitutionDescriptorAggregate.EdFi.DualCreditInstitutionDescriptor" lazy="false" discriminator-value="edfi.DualCreditInstitutionDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DualCreditInstitutionDescriptor" >
          <key>
            <column name="DualCreditInstitutionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DualCreditInstitutionDescriptorId" column="DualCreditInstitutionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.DualCreditTypeDescriptorAggregate.EdFi.DualCreditTypeDescriptor" lazy="false" discriminator-value="edfi.DualCreditTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="DualCreditTypeDescriptor" >
          <key>
            <column name="DualCreditTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="DualCreditTypeDescriptorId" column="DualCreditTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EconomicDisadvantageDescriptorAggregate.EdFi.EconomicDisadvantageDescriptor" lazy="false" discriminator-value="edfi.EconomicDisadvantageDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EconomicDisadvantageDescriptor" >
          <key>
            <column name="EconomicDisadvantageDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EconomicDisadvantageDescriptorId" column="EconomicDisadvantageDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EducationalEnvironmentDescriptorAggregate.EdFi.EducationalEnvironmentDescriptor" lazy="false" discriminator-value="edfi.EducationalEnvironmentDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EducationalEnvironmentDescriptor" >
          <key>
            <column name="EducationalEnvironmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAssociationTypeDescriptorAggregate.EdFi.EducationOrganizationAssociationTypeDescriptor" lazy="false" discriminator-value="edfi.EducationOrganizationAssociationTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EducationOrganizationAssociationTypeDescriptor" >
          <key>
            <column name="EducationOrganizationAssociationTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationOrganizationAssociationTypeDescriptorId" column="EducationOrganizationAssociationTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EducationOrganizationCategoryDescriptorAggregate.EdFi.EducationOrganizationCategoryDescriptor" lazy="false" discriminator-value="edfi.EducationOrganizationCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EducationOrganizationCategoryDescriptor" >
          <key>
            <column name="EducationOrganizationCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationOrganizationCategoryDescriptorId" column="EducationOrganizationCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EducationOrganizationIdentificationSystemDescriptorAggregate.EdFi.EducationOrganizationIdentificationSystemDescriptor" lazy="false" discriminator-value="edfi.EducationOrganizationIdentificationSystemDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EducationOrganizationIdentificationSystemDescriptor" >
          <key>
            <column name="EducationOrganizationIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationOrganizationIdentificationSystemDescriptorId" column="EducationOrganizationIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EducationPlanDescriptorAggregate.EdFi.EducationPlanDescriptor" lazy="false" discriminator-value="edfi.EducationPlanDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EducationPlanDescriptor" >
          <key>
            <column name="EducationPlanDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducationPlanDescriptorId" column="EducationPlanDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EducatorRoleDescriptorAggregate.EdFi.EducatorRoleDescriptor" lazy="false" discriminator-value="edfi.EducatorRoleDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EducatorRoleDescriptor" >
          <key>
            <column name="EducatorRoleDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EducatorRoleDescriptorId" column="EducatorRoleDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ElectronicMailTypeDescriptorAggregate.EdFi.ElectronicMailTypeDescriptor" lazy="false" discriminator-value="edfi.ElectronicMailTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ElectronicMailTypeDescriptor" >
          <key>
            <column name="ElectronicMailTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EligibilityDelayReasonDescriptorAggregate.EdFi.EligibilityDelayReasonDescriptor" lazy="false" discriminator-value="edfi.EligibilityDelayReasonDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EligibilityDelayReasonDescriptor" >
          <key>
            <column name="EligibilityDelayReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EligibilityDelayReasonDescriptorId" column="EligibilityDelayReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EligibilityEvaluationTypeDescriptorAggregate.EdFi.EligibilityEvaluationTypeDescriptor" lazy="false" discriminator-value="edfi.EligibilityEvaluationTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EligibilityEvaluationTypeDescriptor" >
          <key>
            <column name="EligibilityEvaluationTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EligibilityEvaluationTypeDescriptorId" column="EligibilityEvaluationTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EmploymentStatusDescriptorAggregate.EdFi.EmploymentStatusDescriptor" lazy="false" discriminator-value="edfi.EmploymentStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EmploymentStatusDescriptor" >
          <key>
            <column name="EmploymentStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EnglishLanguageExamDescriptorAggregate.EdFi.EnglishLanguageExamDescriptor" lazy="false" discriminator-value="edfi.EnglishLanguageExamDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EnglishLanguageExamDescriptor" >
          <key>
            <column name="EnglishLanguageExamDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EnglishLanguageExamDescriptorId" column="EnglishLanguageExamDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EnrollmentTypeDescriptorAggregate.EdFi.EnrollmentTypeDescriptor" lazy="false" discriminator-value="edfi.EnrollmentTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EnrollmentTypeDescriptor" >
          <key>
            <column name="EnrollmentTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EnrollmentTypeDescriptorId" column="EnrollmentTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EntryGradeLevelReasonDescriptorAggregate.EdFi.EntryGradeLevelReasonDescriptor" lazy="false" discriminator-value="edfi.EntryGradeLevelReasonDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EntryGradeLevelReasonDescriptor" >
          <key>
            <column name="EntryGradeLevelReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EntryGradeLevelReasonDescriptorId" column="EntryGradeLevelReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EntryTypeDescriptorAggregate.EdFi.EntryTypeDescriptor" lazy="false" discriminator-value="edfi.EntryTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EntryTypeDescriptor" >
          <key>
            <column name="EntryTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EntryTypeDescriptorId" column="EntryTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EPPDegreeTypeDescriptorAggregate.EdFi.EPPDegreeTypeDescriptor" lazy="false" discriminator-value="edfi.EPPDegreeTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EPPDegreeTypeDescriptor" >
          <key>
            <column name="EPPDegreeTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EPPDegreeTypeDescriptorId" column="EPPDegreeTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EPPProgramPathwayDescriptorAggregate.EdFi.EPPProgramPathwayDescriptor" lazy="false" discriminator-value="edfi.EPPProgramPathwayDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EPPProgramPathwayDescriptor" >
          <key>
            <column name="EPPProgramPathwayDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EPPProgramPathwayDescriptorId" column="EPPProgramPathwayDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EvaluationDelayReasonDescriptorAggregate.EdFi.EvaluationDelayReasonDescriptor" lazy="false" discriminator-value="edfi.EvaluationDelayReasonDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EvaluationDelayReasonDescriptor" >
          <key>
            <column name="EvaluationDelayReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EvaluationDelayReasonDescriptorId" column="EvaluationDelayReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EvaluationElementRatingLevelDescriptorAggregate.EdFi.EvaluationElementRatingLevelDescriptor" lazy="false" discriminator-value="edfi.EvaluationElementRatingLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EvaluationElementRatingLevelDescriptor" >
          <key>
            <column name="EvaluationElementRatingLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EvaluationElementRatingLevelDescriptorId" column="EvaluationElementRatingLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EvaluationPeriodDescriptorAggregate.EdFi.EvaluationPeriodDescriptor" lazy="false" discriminator-value="edfi.EvaluationPeriodDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EvaluationPeriodDescriptor" >
          <key>
            <column name="EvaluationPeriodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EvaluationRatingLevelDescriptorAggregate.EdFi.EvaluationRatingLevelDescriptor" lazy="false" discriminator-value="edfi.EvaluationRatingLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EvaluationRatingLevelDescriptor" >
          <key>
            <column name="EvaluationRatingLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EvaluationRatingLevelDescriptorId" column="EvaluationRatingLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EvaluationRatingStatusDescriptorAggregate.EdFi.EvaluationRatingStatusDescriptor" lazy="false" discriminator-value="edfi.EvaluationRatingStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EvaluationRatingStatusDescriptor" >
          <key>
            <column name="EvaluationRatingStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EvaluationRatingStatusDescriptorId" column="EvaluationRatingStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EvaluationTypeDescriptorAggregate.EdFi.EvaluationTypeDescriptor" lazy="false" discriminator-value="edfi.EvaluationTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EvaluationTypeDescriptor" >
          <key>
            <column name="EvaluationTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EvaluationTypeDescriptorId" column="EvaluationTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EventCircumstanceDescriptorAggregate.EdFi.EventCircumstanceDescriptor" lazy="false" discriminator-value="edfi.EventCircumstanceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EventCircumstanceDescriptor" >
          <key>
            <column name="EventCircumstanceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="EventCircumstanceDescriptorId" column="EventCircumstanceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ExitWithdrawTypeDescriptorAggregate.EdFi.ExitWithdrawTypeDescriptor" lazy="false" discriminator-value="edfi.ExitWithdrawTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ExitWithdrawTypeDescriptor" >
          <key>
            <column name="ExitWithdrawTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ExitWithdrawTypeDescriptorId" column="ExitWithdrawTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.FederalLocaleCodeDescriptorAggregate.EdFi.FederalLocaleCodeDescriptor" lazy="false" discriminator-value="edfi.FederalLocaleCodeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="FederalLocaleCodeDescriptor" >
          <key>
            <column name="FederalLocaleCodeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="FederalLocaleCodeDescriptorId" column="FederalLocaleCodeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.FieldworkTypeDescriptorAggregate.EdFi.FieldworkTypeDescriptor" lazy="false" discriminator-value="edfi.FieldworkTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="FieldworkTypeDescriptor" >
          <key>
            <column name="FieldworkTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="FieldworkTypeDescriptorId" column="FieldworkTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.FinancialCollectionDescriptorAggregate.EdFi.FinancialCollectionDescriptor" lazy="false" discriminator-value="edfi.FinancialCollectionDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="FinancialCollectionDescriptor" >
          <key>
            <column name="FinancialCollectionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="FinancialCollectionDescriptorId" column="FinancialCollectionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.FundingSourceDescriptorAggregate.EdFi.FundingSourceDescriptor" lazy="false" discriminator-value="edfi.FundingSourceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="FundingSourceDescriptor" >
          <key>
            <column name="FundingSourceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="FundingSourceDescriptorId" column="FundingSourceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.GoalTypeDescriptorAggregate.EdFi.GoalTypeDescriptor" lazy="false" discriminator-value="edfi.GoalTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="GoalTypeDescriptor" >
          <key>
            <column name="GoalTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GoalTypeDescriptorId" column="GoalTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.GradebookEntryTypeDescriptorAggregate.EdFi.GradebookEntryTypeDescriptor" lazy="false" discriminator-value="edfi.GradebookEntryTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="GradebookEntryTypeDescriptor" >
          <key>
            <column name="GradebookEntryTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradebookEntryTypeDescriptorId" column="GradebookEntryTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.GradeLevelDescriptorAggregate.EdFi.GradeLevelDescriptor" lazy="false" discriminator-value="edfi.GradeLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="GradeLevelDescriptor" >
          <key>
            <column name="GradeLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.GradePointAverageTypeDescriptorAggregate.EdFi.GradePointAverageTypeDescriptor" lazy="false" discriminator-value="edfi.GradePointAverageTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="GradePointAverageTypeDescriptor" >
          <key>
            <column name="GradePointAverageTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradePointAverageTypeDescriptorId" column="GradePointAverageTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.GradeTypeDescriptorAggregate.EdFi.GradeTypeDescriptor" lazy="false" discriminator-value="edfi.GradeTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="GradeTypeDescriptor" >
          <key>
            <column name="GradeTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.GradingPeriodDescriptorAggregate.EdFi.GradingPeriodDescriptor" lazy="false" discriminator-value="edfi.GradingPeriodDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="GradingPeriodDescriptor" >
          <key>
            <column name="GradingPeriodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.GraduationPlanTypeDescriptorAggregate.EdFi.GraduationPlanTypeDescriptor" lazy="false" discriminator-value="edfi.GraduationPlanTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="GraduationPlanTypeDescriptor" >
          <key>
            <column name="GraduationPlanTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.GunFreeSchoolsActReportingStatusDescriptorAggregate.EdFi.GunFreeSchoolsActReportingStatusDescriptor" lazy="false" discriminator-value="edfi.GunFreeSchoolsActReportingStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="GunFreeSchoolsActReportingStatusDescriptor" >
          <key>
            <column name="GunFreeSchoolsActReportingStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="GunFreeSchoolsActReportingStatusDescriptorId" column="GunFreeSchoolsActReportingStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.HireStatusDescriptorAggregate.EdFi.HireStatusDescriptor" lazy="false" discriminator-value="edfi.HireStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="HireStatusDescriptor" >
          <key>
            <column name="HireStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="HireStatusDescriptorId" column="HireStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.HiringSourceDescriptorAggregate.EdFi.HiringSourceDescriptor" lazy="false" discriminator-value="edfi.HiringSourceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="HiringSourceDescriptor" >
          <key>
            <column name="HiringSourceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="HiringSourceDescriptorId" column="HiringSourceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.HomelessPrimaryNighttimeResidenceDescriptorAggregate.EdFi.HomelessPrimaryNighttimeResidenceDescriptor" lazy="false" discriminator-value="edfi.HomelessPrimaryNighttimeResidenceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="HomelessPrimaryNighttimeResidenceDescriptor" >
          <key>
            <column name="HomelessPrimaryNighttimeResidenceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="HomelessPrimaryNighttimeResidenceDescriptorId" column="HomelessPrimaryNighttimeResidenceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.HomelessProgramServiceDescriptorAggregate.EdFi.HomelessProgramServiceDescriptor" lazy="false" discriminator-value="edfi.HomelessProgramServiceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="HomelessProgramServiceDescriptor" >
          <key>
            <column name="HomelessProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="HomelessProgramServiceDescriptorId" column="HomelessProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.IDEAPartDescriptorAggregate.EdFi.IDEAPartDescriptor" lazy="false" discriminator-value="edfi.IDEAPartDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="IDEAPartDescriptor" >
          <key>
            <column name="IDEAPartDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IDEAPartDescriptorId" column="IDEAPartDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.IdentificationDocumentUseDescriptorAggregate.EdFi.IdentificationDocumentUseDescriptor" lazy="false" discriminator-value="edfi.IdentificationDocumentUseDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="IdentificationDocumentUseDescriptor" >
          <key>
            <column name="IdentificationDocumentUseDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ImmunizationTypeDescriptorAggregate.EdFi.ImmunizationTypeDescriptor" lazy="false" discriminator-value="edfi.ImmunizationTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ImmunizationTypeDescriptor" >
          <key>
            <column name="ImmunizationTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ImmunizationTypeDescriptorId" column="ImmunizationTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.IncidentLocationDescriptorAggregate.EdFi.IncidentLocationDescriptor" lazy="false" discriminator-value="edfi.IncidentLocationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="IncidentLocationDescriptor" >
          <key>
            <column name="IncidentLocationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IncidentLocationDescriptorId" column="IncidentLocationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.IndicatorDescriptorAggregate.EdFi.IndicatorDescriptor" lazy="false" discriminator-value="edfi.IndicatorDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="IndicatorDescriptor" >
          <key>
            <column name="IndicatorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IndicatorDescriptorId" column="IndicatorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.IndicatorGroupDescriptorAggregate.EdFi.IndicatorGroupDescriptor" lazy="false" discriminator-value="edfi.IndicatorGroupDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="IndicatorGroupDescriptor" >
          <key>
            <column name="IndicatorGroupDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IndicatorGroupDescriptorId" column="IndicatorGroupDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.IndicatorLevelDescriptorAggregate.EdFi.IndicatorLevelDescriptor" lazy="false" discriminator-value="edfi.IndicatorLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="IndicatorLevelDescriptor" >
          <key>
            <column name="IndicatorLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="IndicatorLevelDescriptorId" column="IndicatorLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.InstitutionTelephoneNumberTypeDescriptorAggregate.EdFi.InstitutionTelephoneNumberTypeDescriptor" lazy="false" discriminator-value="edfi.InstitutionTelephoneNumberTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="InstitutionTelephoneNumberTypeDescriptor" >
          <key>
            <column name="InstitutionTelephoneNumberTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InstitutionTelephoneNumberTypeDescriptorId" column="InstitutionTelephoneNumberTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.InstructionalSettingDescriptorAggregate.EdFi.InstructionalSettingDescriptor" lazy="false" discriminator-value="edfi.InstructionalSettingDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="InstructionalSettingDescriptor" >
          <key>
            <column name="InstructionalSettingDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InstructionalSettingDescriptorId" column="InstructionalSettingDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.InteractivityStyleDescriptorAggregate.EdFi.InteractivityStyleDescriptor" lazy="false" discriminator-value="edfi.InteractivityStyleDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="InteractivityStyleDescriptor" >
          <key>
            <column name="InteractivityStyleDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InteractivityStyleDescriptorId" column="InteractivityStyleDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.InternetAccessDescriptorAggregate.EdFi.InternetAccessDescriptor" lazy="false" discriminator-value="edfi.InternetAccessDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="InternetAccessDescriptor" >
          <key>
            <column name="InternetAccessDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InternetAccessDescriptorId" column="InternetAccessDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.InternetAccessTypeInResidenceDescriptorAggregate.EdFi.InternetAccessTypeInResidenceDescriptor" lazy="false" discriminator-value="edfi.InternetAccessTypeInResidenceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="InternetAccessTypeInResidenceDescriptor" >
          <key>
            <column name="InternetAccessTypeInResidenceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InternetAccessTypeInResidenceDescriptorId" column="InternetAccessTypeInResidenceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.InternetPerformanceInResidenceDescriptorAggregate.EdFi.InternetPerformanceInResidenceDescriptor" lazy="false" discriminator-value="edfi.InternetPerformanceInResidenceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="InternetPerformanceInResidenceDescriptor" >
          <key>
            <column name="InternetPerformanceInResidenceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InternetPerformanceInResidenceDescriptorId" column="InternetPerformanceInResidenceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.InterventionClassDescriptorAggregate.EdFi.InterventionClassDescriptor" lazy="false" discriminator-value="edfi.InterventionClassDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="InterventionClassDescriptor" >
          <key>
            <column name="InterventionClassDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.InterventionEffectivenessRatingDescriptorAggregate.EdFi.InterventionEffectivenessRatingDescriptor" lazy="false" discriminator-value="edfi.InterventionEffectivenessRatingDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="InterventionEffectivenessRatingDescriptor" >
          <key>
            <column name="InterventionEffectivenessRatingDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="InterventionEffectivenessRatingDescriptorId" column="InterventionEffectivenessRatingDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LanguageDescriptorAggregate.EdFi.LanguageDescriptor" lazy="false" discriminator-value="edfi.LanguageDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LanguageDescriptor" >
          <key>
            <column name="LanguageDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LanguageInstructionProgramServiceDescriptorAggregate.EdFi.LanguageInstructionProgramServiceDescriptor" lazy="false" discriminator-value="edfi.LanguageInstructionProgramServiceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LanguageInstructionProgramServiceDescriptor" >
          <key>
            <column name="LanguageInstructionProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LanguageInstructionProgramServiceDescriptorId" column="LanguageInstructionProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LanguageUseDescriptorAggregate.EdFi.LanguageUseDescriptor" lazy="false" discriminator-value="edfi.LanguageUseDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LanguageUseDescriptor" >
          <key>
            <column name="LanguageUseDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LearningStandardCategoryDescriptorAggregate.EdFi.LearningStandardCategoryDescriptor" lazy="false" discriminator-value="edfi.LearningStandardCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LearningStandardCategoryDescriptor" >
          <key>
            <column name="LearningStandardCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LearningStandardCategoryDescriptorId" column="LearningStandardCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LearningStandardEquivalenceStrengthDescriptorAggregate.EdFi.LearningStandardEquivalenceStrengthDescriptor" lazy="false" discriminator-value="edfi.LearningStandardEquivalenceStrengthDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LearningStandardEquivalenceStrengthDescriptor" >
          <key>
            <column name="LearningStandardEquivalenceStrengthDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LearningStandardEquivalenceStrengthDescriptorId" column="LearningStandardEquivalenceStrengthDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LearningStandardScopeDescriptorAggregate.EdFi.LearningStandardScopeDescriptor" lazy="false" discriminator-value="edfi.LearningStandardScopeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LearningStandardScopeDescriptor" >
          <key>
            <column name="LearningStandardScopeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LearningStandardScopeDescriptorId" column="LearningStandardScopeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LengthOfContractDescriptorAggregate.EdFi.LengthOfContractDescriptor" lazy="false" discriminator-value="edfi.LengthOfContractDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LengthOfContractDescriptor" >
          <key>
            <column name="LengthOfContractDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LengthOfContractDescriptorId" column="LengthOfContractDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LevelOfEducationDescriptorAggregate.EdFi.LevelOfEducationDescriptor" lazy="false" discriminator-value="edfi.LevelOfEducationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LevelOfEducationDescriptor" >
          <key>
            <column name="LevelOfEducationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LevelOfEducationDescriptorId" column="LevelOfEducationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LicenseStatusDescriptorAggregate.EdFi.LicenseStatusDescriptor" lazy="false" discriminator-value="edfi.LicenseStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LicenseStatusDescriptor" >
          <key>
            <column name="LicenseStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LicenseStatusDescriptorId" column="LicenseStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LicenseTypeDescriptorAggregate.EdFi.LicenseTypeDescriptor" lazy="false" discriminator-value="edfi.LicenseTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LicenseTypeDescriptor" >
          <key>
            <column name="LicenseTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LicenseTypeDescriptorId" column="LicenseTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LimitedEnglishProficiencyDescriptorAggregate.EdFi.LimitedEnglishProficiencyDescriptor" lazy="false" discriminator-value="edfi.LimitedEnglishProficiencyDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LimitedEnglishProficiencyDescriptor" >
          <key>
            <column name="LimitedEnglishProficiencyDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LimitedEnglishProficiencyDescriptorId" column="LimitedEnglishProficiencyDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LocaleDescriptorAggregate.EdFi.LocaleDescriptor" lazy="false" discriminator-value="edfi.LocaleDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LocaleDescriptor" >
          <key>
            <column name="LocaleDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyCategoryDescriptorAggregate.EdFi.LocalEducationAgencyCategoryDescriptor" lazy="false" discriminator-value="edfi.LocalEducationAgencyCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LocalEducationAgencyCategoryDescriptor" >
          <key>
            <column name="LocalEducationAgencyCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="LocalEducationAgencyCategoryDescriptorId" column="LocalEducationAgencyCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.MagnetSpecialProgramEmphasisSchoolDescriptorAggregate.EdFi.MagnetSpecialProgramEmphasisSchoolDescriptor" lazy="false" discriminator-value="edfi.MagnetSpecialProgramEmphasisSchoolDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="MagnetSpecialProgramEmphasisSchoolDescriptor" >
          <key>
            <column name="MagnetSpecialProgramEmphasisSchoolDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MagnetSpecialProgramEmphasisSchoolDescriptorId" column="MagnetSpecialProgramEmphasisSchoolDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.MediumOfInstructionDescriptorAggregate.EdFi.MediumOfInstructionDescriptor" lazy="false" discriminator-value="edfi.MediumOfInstructionDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="MediumOfInstructionDescriptor" >
          <key>
            <column name="MediumOfInstructionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MediumOfInstructionDescriptorId" column="MediumOfInstructionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.MethodCreditEarnedDescriptorAggregate.EdFi.MethodCreditEarnedDescriptor" lazy="false" discriminator-value="edfi.MethodCreditEarnedDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="MethodCreditEarnedDescriptor" >
          <key>
            <column name="MethodCreditEarnedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MethodCreditEarnedDescriptorId" column="MethodCreditEarnedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.MigrantEducationProgramServiceDescriptorAggregate.EdFi.MigrantEducationProgramServiceDescriptor" lazy="false" discriminator-value="edfi.MigrantEducationProgramServiceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="MigrantEducationProgramServiceDescriptor" >
          <key>
            <column name="MigrantEducationProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MigrantEducationProgramServiceDescriptorId" column="MigrantEducationProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ModelEntityDescriptorAggregate.EdFi.ModelEntityDescriptor" lazy="false" discriminator-value="edfi.ModelEntityDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ModelEntityDescriptor" >
          <key>
            <column name="ModelEntityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ModelEntityDescriptorId" column="ModelEntityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.MonitoredDescriptorAggregate.EdFi.MonitoredDescriptor" lazy="false" discriminator-value="edfi.MonitoredDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="MonitoredDescriptor" >
          <key>
            <column name="MonitoredDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="MonitoredDescriptorId" column="MonitoredDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.NeglectedOrDelinquentProgramDescriptorAggregate.EdFi.NeglectedOrDelinquentProgramDescriptor" lazy="false" discriminator-value="edfi.NeglectedOrDelinquentProgramDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="NeglectedOrDelinquentProgramDescriptor" >
          <key>
            <column name="NeglectedOrDelinquentProgramDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="NeglectedOrDelinquentProgramDescriptorId" column="NeglectedOrDelinquentProgramDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.NeglectedOrDelinquentProgramServiceDescriptorAggregate.EdFi.NeglectedOrDelinquentProgramServiceDescriptor" lazy="false" discriminator-value="edfi.NeglectedOrDelinquentProgramServiceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="NeglectedOrDelinquentProgramServiceDescriptor" >
          <key>
            <column name="NeglectedOrDelinquentProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="NeglectedOrDelinquentProgramServiceDescriptorId" column="NeglectedOrDelinquentProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.NetworkPurposeDescriptorAggregate.EdFi.NetworkPurposeDescriptor" lazy="false" discriminator-value="edfi.NetworkPurposeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="NetworkPurposeDescriptor" >
          <key>
            <column name="NetworkPurposeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="NetworkPurposeDescriptorId" column="NetworkPurposeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.NonMedicalImmunizationExemptionDescriptorAggregate.EdFi.NonMedicalImmunizationExemptionDescriptor" lazy="false" discriminator-value="edfi.NonMedicalImmunizationExemptionDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="NonMedicalImmunizationExemptionDescriptor" >
          <key>
            <column name="NonMedicalImmunizationExemptionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="NonMedicalImmunizationExemptionDescriptorId" column="NonMedicalImmunizationExemptionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ObjectiveRatingLevelDescriptorAggregate.EdFi.ObjectiveRatingLevelDescriptor" lazy="false" discriminator-value="edfi.ObjectiveRatingLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ObjectiveRatingLevelDescriptor" >
          <key>
            <column name="ObjectiveRatingLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ObjectiveRatingLevelDescriptorId" column="ObjectiveRatingLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionEventStatusDescriptorAggregate.EdFi.OpenStaffPositionEventStatusDescriptor" lazy="false" discriminator-value="edfi.OpenStaffPositionEventStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="OpenStaffPositionEventStatusDescriptor" >
          <key>
            <column name="OpenStaffPositionEventStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OpenStaffPositionEventStatusDescriptorId" column="OpenStaffPositionEventStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionEventTypeDescriptorAggregate.EdFi.OpenStaffPositionEventTypeDescriptor" lazy="false" discriminator-value="edfi.OpenStaffPositionEventTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="OpenStaffPositionEventTypeDescriptor" >
          <key>
            <column name="OpenStaffPositionEventTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OpenStaffPositionEventTypeDescriptorId" column="OpenStaffPositionEventTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionReasonDescriptorAggregate.EdFi.OpenStaffPositionReasonDescriptor" lazy="false" discriminator-value="edfi.OpenStaffPositionReasonDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="OpenStaffPositionReasonDescriptor" >
          <key>
            <column name="OpenStaffPositionReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OpenStaffPositionReasonDescriptorId" column="OpenStaffPositionReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.OperationalStatusDescriptorAggregate.EdFi.OperationalStatusDescriptor" lazy="false" discriminator-value="edfi.OperationalStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="OperationalStatusDescriptor" >
          <key>
            <column name="OperationalStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OperationalStatusDescriptorId" column="OperationalStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.OtherNameTypeDescriptorAggregate.EdFi.OtherNameTypeDescriptor" lazy="false" discriminator-value="edfi.OtherNameTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="OtherNameTypeDescriptor" >
          <key>
            <column name="OtherNameTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ParticipationDescriptorAggregate.EdFi.ParticipationDescriptor" lazy="false" discriminator-value="edfi.ParticipationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ParticipationDescriptor" >
          <key>
            <column name="ParticipationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ParticipationDescriptorId" column="ParticipationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ParticipationStatusDescriptorAggregate.EdFi.ParticipationStatusDescriptor" lazy="false" discriminator-value="edfi.ParticipationStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ParticipationStatusDescriptor" >
          <key>
            <column name="ParticipationStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ParticipationStatusDescriptorId" column="ParticipationStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PathMilestoneStatusDescriptorAggregate.EdFi.PathMilestoneStatusDescriptor" lazy="false" discriminator-value="edfi.PathMilestoneStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PathMilestoneStatusDescriptor" >
          <key>
            <column name="PathMilestoneStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PathMilestoneStatusDescriptorId" column="PathMilestoneStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PathMilestoneTypeDescriptorAggregate.EdFi.PathMilestoneTypeDescriptor" lazy="false" discriminator-value="edfi.PathMilestoneTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PathMilestoneTypeDescriptor" >
          <key>
            <column name="PathMilestoneTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PathMilestoneTypeDescriptorId" column="PathMilestoneTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PathPhaseStatusDescriptorAggregate.EdFi.PathPhaseStatusDescriptor" lazy="false" discriminator-value="edfi.PathPhaseStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PathPhaseStatusDescriptor" >
          <key>
            <column name="PathPhaseStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PathPhaseStatusDescriptorId" column="PathPhaseStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PerformanceBaseConversionDescriptorAggregate.EdFi.PerformanceBaseConversionDescriptor" lazy="false" discriminator-value="edfi.PerformanceBaseConversionDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PerformanceBaseConversionDescriptor" >
          <key>
            <column name="PerformanceBaseConversionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PerformanceBaseConversionDescriptorId" column="PerformanceBaseConversionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationRatingLevelDescriptorAggregate.EdFi.PerformanceEvaluationRatingLevelDescriptor" lazy="false" discriminator-value="edfi.PerformanceEvaluationRatingLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PerformanceEvaluationRatingLevelDescriptor" >
          <key>
            <column name="PerformanceEvaluationRatingLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PerformanceEvaluationRatingLevelDescriptorId" column="PerformanceEvaluationRatingLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationTypeDescriptorAggregate.EdFi.PerformanceEvaluationTypeDescriptor" lazy="false" discriminator-value="edfi.PerformanceEvaluationTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PerformanceEvaluationTypeDescriptor" >
          <key>
            <column name="PerformanceEvaluationTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PerformanceLevelDescriptorAggregate.EdFi.PerformanceLevelDescriptor" lazy="false" discriminator-value="edfi.PerformanceLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PerformanceLevelDescriptor" >
          <key>
            <column name="PerformanceLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PersonalInformationVerificationDescriptorAggregate.EdFi.PersonalInformationVerificationDescriptor" lazy="false" discriminator-value="edfi.PersonalInformationVerificationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PersonalInformationVerificationDescriptor" >
          <key>
            <column name="PersonalInformationVerificationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PlatformTypeDescriptorAggregate.EdFi.PlatformTypeDescriptor" lazy="false" discriminator-value="edfi.PlatformTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PlatformTypeDescriptor" >
          <key>
            <column name="PlatformTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PlatformTypeDescriptorId" column="PlatformTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PopulationServedDescriptorAggregate.EdFi.PopulationServedDescriptor" lazy="false" discriminator-value="edfi.PopulationServedDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PopulationServedDescriptor" >
          <key>
            <column name="PopulationServedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PostingResultDescriptorAggregate.EdFi.PostingResultDescriptor" lazy="false" discriminator-value="edfi.PostingResultDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PostingResultDescriptor" >
          <key>
            <column name="PostingResultDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PostingResultDescriptorId" column="PostingResultDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PostSecondaryEventCategoryDescriptorAggregate.EdFi.PostSecondaryEventCategoryDescriptor" lazy="false" discriminator-value="edfi.PostSecondaryEventCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PostSecondaryEventCategoryDescriptor" >
          <key>
            <column name="PostSecondaryEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PostSecondaryEventCategoryDescriptorId" column="PostSecondaryEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PostSecondaryInstitutionLevelDescriptorAggregate.EdFi.PostSecondaryInstitutionLevelDescriptor" lazy="false" discriminator-value="edfi.PostSecondaryInstitutionLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PostSecondaryInstitutionLevelDescriptor" >
          <key>
            <column name="PostSecondaryInstitutionLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PostSecondaryInstitutionLevelDescriptorId" column="PostSecondaryInstitutionLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PreviousCareerDescriptorAggregate.EdFi.PreviousCareerDescriptor" lazy="false" discriminator-value="edfi.PreviousCareerDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PreviousCareerDescriptor" >
          <key>
            <column name="PreviousCareerDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PreviousCareerDescriptorId" column="PreviousCareerDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PrimaryLearningDeviceAccessDescriptorAggregate.EdFi.PrimaryLearningDeviceAccessDescriptor" lazy="false" discriminator-value="edfi.PrimaryLearningDeviceAccessDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PrimaryLearningDeviceAccessDescriptor" >
          <key>
            <column name="PrimaryLearningDeviceAccessDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PrimaryLearningDeviceAccessDescriptorId" column="PrimaryLearningDeviceAccessDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PrimaryLearningDeviceAwayFromSchoolDescriptorAggregate.EdFi.PrimaryLearningDeviceAwayFromSchoolDescriptor" lazy="false" discriminator-value="edfi.PrimaryLearningDeviceAwayFromSchoolDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PrimaryLearningDeviceAwayFromSchoolDescriptor" >
          <key>
            <column name="PrimaryLearningDeviceAwayFromSchoolDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PrimaryLearningDeviceAwayFromSchoolDescriptorId" column="PrimaryLearningDeviceAwayFromSchoolDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PrimaryLearningDeviceProviderDescriptorAggregate.EdFi.PrimaryLearningDeviceProviderDescriptor" lazy="false" discriminator-value="edfi.PrimaryLearningDeviceProviderDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PrimaryLearningDeviceProviderDescriptor" >
          <key>
            <column name="PrimaryLearningDeviceProviderDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PrimaryLearningDeviceProviderDescriptorId" column="PrimaryLearningDeviceProviderDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProfessionalDevelopmentOfferedByDescriptorAggregate.EdFi.ProfessionalDevelopmentOfferedByDescriptor" lazy="false" discriminator-value="edfi.ProfessionalDevelopmentOfferedByDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProfessionalDevelopmentOfferedByDescriptor" >
          <key>
            <column name="ProfessionalDevelopmentOfferedByDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProfessionalDevelopmentOfferedByDescriptorId" column="ProfessionalDevelopmentOfferedByDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProficiencyDescriptorAggregate.EdFi.ProficiencyDescriptor" lazy="false" discriminator-value="edfi.ProficiencyDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProficiencyDescriptor" >
          <key>
            <column name="ProficiencyDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProficiencyDescriptorId" column="ProficiencyDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProgramAssignmentDescriptorAggregate.EdFi.ProgramAssignmentDescriptor" lazy="false" discriminator-value="edfi.ProgramAssignmentDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProgramAssignmentDescriptor" >
          <key>
            <column name="ProgramAssignmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProgramCharacteristicDescriptorAggregate.EdFi.ProgramCharacteristicDescriptor" lazy="false" discriminator-value="edfi.ProgramCharacteristicDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProgramCharacteristicDescriptor" >
          <key>
            <column name="ProgramCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramCharacteristicDescriptorId" column="ProgramCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationPeriodDescriptorAggregate.EdFi.ProgramEvaluationPeriodDescriptor" lazy="false" discriminator-value="edfi.ProgramEvaluationPeriodDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProgramEvaluationPeriodDescriptor" >
          <key>
            <column name="ProgramEvaluationPeriodDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationTypeDescriptorAggregate.EdFi.ProgramEvaluationTypeDescriptor" lazy="false" discriminator-value="edfi.ProgramEvaluationTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProgramEvaluationTypeDescriptor" >
          <key>
            <column name="ProgramEvaluationTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProgramSponsorDescriptorAggregate.EdFi.ProgramSponsorDescriptor" lazy="false" discriminator-value="edfi.ProgramSponsorDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProgramSponsorDescriptor" >
          <key>
            <column name="ProgramSponsorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramSponsorDescriptorId" column="ProgramSponsorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProgramTypeDescriptorAggregate.EdFi.ProgramTypeDescriptor" lazy="false" discriminator-value="edfi.ProgramTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProgramTypeDescriptor" >
          <key>
            <column name="ProgramTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProgressDescriptorAggregate.EdFi.ProgressDescriptor" lazy="false" discriminator-value="edfi.ProgressDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProgressDescriptor" >
          <key>
            <column name="ProgressDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgressDescriptorId" column="ProgressDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProgressLevelDescriptorAggregate.EdFi.ProgressLevelDescriptor" lazy="false" discriminator-value="edfi.ProgressLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProgressLevelDescriptor" >
          <key>
            <column name="ProgressLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProgressLevelDescriptorId" column="ProgressLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProviderCategoryDescriptorAggregate.EdFi.ProviderCategoryDescriptor" lazy="false" discriminator-value="edfi.ProviderCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProviderCategoryDescriptor" >
          <key>
            <column name="ProviderCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProviderCategoryDescriptorId" column="ProviderCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProviderProfitabilityDescriptorAggregate.EdFi.ProviderProfitabilityDescriptor" lazy="false" discriminator-value="edfi.ProviderProfitabilityDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProviderProfitabilityDescriptor" >
          <key>
            <column name="ProviderProfitabilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProviderProfitabilityDescriptorId" column="ProviderProfitabilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ProviderStatusDescriptorAggregate.EdFi.ProviderStatusDescriptor" lazy="false" discriminator-value="edfi.ProviderStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ProviderStatusDescriptor" >
          <key>
            <column name="ProviderStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ProviderStatusDescriptorId" column="ProviderStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PublicationStatusDescriptorAggregate.EdFi.PublicationStatusDescriptor" lazy="false" discriminator-value="edfi.PublicationStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PublicationStatusDescriptor" >
          <key>
            <column name="PublicationStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QuantitativeMeasureDatatypeDescriptorAggregate.EdFi.QuantitativeMeasureDatatypeDescriptor" lazy="false" discriminator-value="edfi.QuantitativeMeasureDatatypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="QuantitativeMeasureDatatypeDescriptor" >
          <key>
            <column name="QuantitativeMeasureDatatypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="QuantitativeMeasureDatatypeDescriptorId" column="QuantitativeMeasureDatatypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QuantitativeMeasureTypeDescriptorAggregate.EdFi.QuantitativeMeasureTypeDescriptor" lazy="false" discriminator-value="edfi.QuantitativeMeasureTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="QuantitativeMeasureTypeDescriptor" >
          <key>
            <column name="QuantitativeMeasureTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="QuantitativeMeasureTypeDescriptorId" column="QuantitativeMeasureTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.QuestionFormDescriptorAggregate.EdFi.QuestionFormDescriptor" lazy="false" discriminator-value="edfi.QuestionFormDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="QuestionFormDescriptor" >
          <key>
            <column name="QuestionFormDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="QuestionFormDescriptorId" column="QuestionFormDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.RaceDescriptorAggregate.EdFi.RaceDescriptor" lazy="false" discriminator-value="edfi.RaceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="RaceDescriptor" >
          <key>
            <column name="RaceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RaceDescriptorId" column="RaceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.RatingLevelDescriptorAggregate.EdFi.RatingLevelDescriptor" lazy="false" discriminator-value="edfi.RatingLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="RatingLevelDescriptor" >
          <key>
            <column name="RatingLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RatingLevelDescriptorId" column="RatingLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ReasonExitedDescriptorAggregate.EdFi.ReasonExitedDescriptor" lazy="false" discriminator-value="edfi.ReasonExitedDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ReasonExitedDescriptor" >
          <key>
            <column name="ReasonExitedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ReasonExitedDescriptorId" column="ReasonExitedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ReasonNotTestedDescriptorAggregate.EdFi.ReasonNotTestedDescriptor" lazy="false" discriminator-value="edfi.ReasonNotTestedDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ReasonNotTestedDescriptor" >
          <key>
            <column name="ReasonNotTestedDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ReasonNotTestedDescriptorId" column="ReasonNotTestedDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.RecognitionTypeDescriptorAggregate.EdFi.RecognitionTypeDescriptor" lazy="false" discriminator-value="edfi.RecognitionTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="RecognitionTypeDescriptor" >
          <key>
            <column name="RecognitionTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RecognitionTypeDescriptorId" column="RecognitionTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendeeTypeDescriptorAggregate.EdFi.RecruitmentEventAttendeeTypeDescriptor" lazy="false" discriminator-value="edfi.RecruitmentEventAttendeeTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="RecruitmentEventAttendeeTypeDescriptor" >
          <key>
            <column name="RecruitmentEventAttendeeTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RecruitmentEventAttendeeTypeDescriptorId" column="RecruitmentEventAttendeeTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.RecruitmentEventTypeDescriptorAggregate.EdFi.RecruitmentEventTypeDescriptor" lazy="false" discriminator-value="edfi.RecruitmentEventTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="RecruitmentEventTypeDescriptor" >
          <key>
            <column name="RecruitmentEventTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RecruitmentEventTypeDescriptorId" column="RecruitmentEventTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.RelationDescriptorAggregate.EdFi.RelationDescriptor" lazy="false" discriminator-value="edfi.RelationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="RelationDescriptor" >
          <key>
            <column name="RelationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RelationDescriptorId" column="RelationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.RepeatIdentifierDescriptorAggregate.EdFi.RepeatIdentifierDescriptor" lazy="false" discriminator-value="edfi.RepeatIdentifierDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="RepeatIdentifierDescriptor" >
          <key>
            <column name="RepeatIdentifierDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RepeatIdentifierDescriptorId" column="RepeatIdentifierDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ReporterDescriptionDescriptorAggregate.EdFi.ReporterDescriptionDescriptor" lazy="false" discriminator-value="edfi.ReporterDescriptionDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ReporterDescriptionDescriptor" >
          <key>
            <column name="ReporterDescriptionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ReporterDescriptionDescriptorId" column="ReporterDescriptionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ReportingTagDescriptorAggregate.EdFi.ReportingTagDescriptor" lazy="false" discriminator-value="edfi.ReportingTagDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ReportingTagDescriptor" >
          <key>
            <column name="ReportingTagDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ResidencyStatusDescriptorAggregate.EdFi.ResidencyStatusDescriptor" lazy="false" discriminator-value="edfi.ResidencyStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ResidencyStatusDescriptor" >
          <key>
            <column name="ResidencyStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResidencyStatusDescriptorId" column="ResidencyStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ResponseIndicatorDescriptorAggregate.EdFi.ResponseIndicatorDescriptor" lazy="false" discriminator-value="edfi.ResponseIndicatorDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ResponseIndicatorDescriptor" >
          <key>
            <column name="ResponseIndicatorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResponseIndicatorDescriptorId" column="ResponseIndicatorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ResponsibilityDescriptorAggregate.EdFi.ResponsibilityDescriptor" lazy="false" discriminator-value="edfi.ResponsibilityDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ResponsibilityDescriptor" >
          <key>
            <column name="ResponsibilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResponsibilityDescriptorId" column="ResponsibilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.RestraintEventReasonDescriptorAggregate.EdFi.RestraintEventReasonDescriptor" lazy="false" discriminator-value="edfi.RestraintEventReasonDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="RestraintEventReasonDescriptor" >
          <key>
            <column name="RestraintEventReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RestraintEventReasonDescriptorId" column="RestraintEventReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ResultDatatypeTypeDescriptorAggregate.EdFi.ResultDatatypeTypeDescriptor" lazy="false" discriminator-value="edfi.ResultDatatypeTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ResultDatatypeTypeDescriptor" >
          <key>
            <column name="ResultDatatypeTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.RetestIndicatorDescriptorAggregate.EdFi.RetestIndicatorDescriptor" lazy="false" discriminator-value="edfi.RetestIndicatorDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="RetestIndicatorDescriptor" >
          <key>
            <column name="RetestIndicatorDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RetestIndicatorDescriptorId" column="RetestIndicatorDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.RubricRatingLevelDescriptorAggregate.EdFi.RubricRatingLevelDescriptor" lazy="false" discriminator-value="edfi.RubricRatingLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="RubricRatingLevelDescriptor" >
          <key>
            <column name="RubricRatingLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="RubricRatingLevelDescriptorId" column="RubricRatingLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SalaryTypeDescriptorAggregate.EdFi.SalaryTypeDescriptor" lazy="false" discriminator-value="edfi.SalaryTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SalaryTypeDescriptor" >
          <key>
            <column name="SalaryTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SalaryTypeDescriptorId" column="SalaryTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SchoolCategoryDescriptorAggregate.EdFi.SchoolCategoryDescriptor" lazy="false" discriminator-value="edfi.SchoolCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SchoolCategoryDescriptor" >
          <key>
            <column name="SchoolCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolCategoryDescriptorId" column="SchoolCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SchoolChoiceBasisDescriptorAggregate.EdFi.SchoolChoiceBasisDescriptor" lazy="false" discriminator-value="edfi.SchoolChoiceBasisDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SchoolChoiceBasisDescriptor" >
          <key>
            <column name="SchoolChoiceBasisDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolChoiceBasisDescriptorId" column="SchoolChoiceBasisDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SchoolChoiceImplementStatusDescriptorAggregate.EdFi.SchoolChoiceImplementStatusDescriptor" lazy="false" discriminator-value="edfi.SchoolChoiceImplementStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SchoolChoiceImplementStatusDescriptor" >
          <key>
            <column name="SchoolChoiceImplementStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolChoiceImplementStatusDescriptorId" column="SchoolChoiceImplementStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SchoolFoodServiceProgramServiceDescriptorAggregate.EdFi.SchoolFoodServiceProgramServiceDescriptor" lazy="false" discriminator-value="edfi.SchoolFoodServiceProgramServiceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SchoolFoodServiceProgramServiceDescriptor" >
          <key>
            <column name="SchoolFoodServiceProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolFoodServiceProgramServiceDescriptorId" column="SchoolFoodServiceProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SchoolTypeDescriptorAggregate.EdFi.SchoolTypeDescriptor" lazy="false" discriminator-value="edfi.SchoolTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SchoolTypeDescriptor" >
          <key>
            <column name="SchoolTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolTypeDescriptorId" column="SchoolTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.Section504DisabilityDescriptorAggregate.EdFi.Section504DisabilityDescriptor" lazy="false" discriminator-value="edfi.Section504DisabilityDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="Section504DisabilityDescriptor" >
          <key>
            <column name="Section504DisabilityDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="Section504DisabilityDescriptorId" column="Section504DisabilityDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SectionCharacteristicDescriptorAggregate.EdFi.SectionCharacteristicDescriptor" lazy="false" discriminator-value="edfi.SectionCharacteristicDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SectionCharacteristicDescriptor" >
          <key>
            <column name="SectionCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SectionCharacteristicDescriptorId" column="SectionCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SectionTypeDescriptorAggregate.EdFi.SectionTypeDescriptor" lazy="false" discriminator-value="edfi.SectionTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SectionTypeDescriptor" >
          <key>
            <column name="SectionTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SectionTypeDescriptorId" column="SectionTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SeparationDescriptorAggregate.EdFi.SeparationDescriptor" lazy="false" discriminator-value="edfi.SeparationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SeparationDescriptor" >
          <key>
            <column name="SeparationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SeparationDescriptorId" column="SeparationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SeparationReasonDescriptorAggregate.EdFi.SeparationReasonDescriptor" lazy="false" discriminator-value="edfi.SeparationReasonDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SeparationReasonDescriptor" >
          <key>
            <column name="SeparationReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SeparationReasonDescriptorId" column="SeparationReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.ServiceDescriptorAggregate.EdFi.ServiceDescriptor" lazy="false" discriminator-value="edfi.ServiceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="ServiceDescriptor" >
          <key>
            <column name="ServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SexDescriptorAggregate.EdFi.SexDescriptor" lazy="false" discriminator-value="edfi.SexDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SexDescriptor" >
          <key>
            <column name="SexDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SexDescriptorId" column="SexDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SourceSystemDescriptorAggregate.EdFi.SourceSystemDescriptor" lazy="false" discriminator-value="edfi.SourceSystemDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SourceSystemDescriptor" >
          <key>
            <column name="SourceSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SpecialEducationExitReasonDescriptorAggregate.EdFi.SpecialEducationExitReasonDescriptor" lazy="false" discriminator-value="edfi.SpecialEducationExitReasonDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SpecialEducationExitReasonDescriptor" >
          <key>
            <column name="SpecialEducationExitReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SpecialEducationExitReasonDescriptorId" column="SpecialEducationExitReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SpecialEducationProgramServiceDescriptorAggregate.EdFi.SpecialEducationProgramServiceDescriptor" lazy="false" discriminator-value="edfi.SpecialEducationProgramServiceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SpecialEducationProgramServiceDescriptor" >
          <key>
            <column name="SpecialEducationProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SpecialEducationProgramServiceDescriptorId" column="SpecialEducationProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SpecialEducationSettingDescriptorAggregate.EdFi.SpecialEducationSettingDescriptor" lazy="false" discriminator-value="edfi.SpecialEducationSettingDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SpecialEducationSettingDescriptor" >
          <key>
            <column name="SpecialEducationSettingDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SpecialEducationSettingDescriptorId" column="SpecialEducationSettingDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StaffClassificationDescriptorAggregate.EdFi.StaffClassificationDescriptor" lazy="false" discriminator-value="edfi.StaffClassificationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StaffClassificationDescriptor" >
          <key>
            <column name="StaffClassificationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StaffIdentificationSystemDescriptorAggregate.EdFi.StaffIdentificationSystemDescriptor" lazy="false" discriminator-value="edfi.StaffIdentificationSystemDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StaffIdentificationSystemDescriptor" >
          <key>
            <column name="StaffIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StaffIdentificationSystemDescriptorId" column="StaffIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StaffLeaveEventCategoryDescriptorAggregate.EdFi.StaffLeaveEventCategoryDescriptor" lazy="false" discriminator-value="edfi.StaffLeaveEventCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StaffLeaveEventCategoryDescriptor" >
          <key>
            <column name="StaffLeaveEventCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StaffLeaveEventCategoryDescriptorId" column="StaffLeaveEventCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StaffToCandidateRelationshipDescriptorAggregate.EdFi.StaffToCandidateRelationshipDescriptor" lazy="false" discriminator-value="edfi.StaffToCandidateRelationshipDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StaffToCandidateRelationshipDescriptor" >
          <key>
            <column name="StaffToCandidateRelationshipDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StaffToCandidateRelationshipDescriptorId" column="StaffToCandidateRelationshipDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StateAbbreviationDescriptorAggregate.EdFi.StateAbbreviationDescriptor" lazy="false" discriminator-value="edfi.StateAbbreviationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StateAbbreviationDescriptor" >
          <key>
            <column name="StateAbbreviationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentCharacteristicDescriptorAggregate.EdFi.StudentCharacteristicDescriptor" lazy="false" discriminator-value="edfi.StudentCharacteristicDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentCharacteristicDescriptor" >
          <key>
            <column name="StudentCharacteristicDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StudentCharacteristicDescriptorId" column="StudentCharacteristicDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentIdentificationSystemDescriptorAggregate.EdFi.StudentIdentificationSystemDescriptor" lazy="false" discriminator-value="edfi.StudentIdentificationSystemDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentIdentificationSystemDescriptor" >
          <key>
            <column name="StudentIdentificationSystemDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="StudentIdentificationSystemDescriptorId" column="StudentIdentificationSystemDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SubmissionStatusDescriptorAggregate.EdFi.SubmissionStatusDescriptor" lazy="false" discriminator-value="edfi.SubmissionStatusDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SubmissionStatusDescriptor" >
          <key>
            <column name="SubmissionStatusDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SubmissionStatusDescriptorId" column="SubmissionStatusDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SupporterMilitaryConnectionDescriptorAggregate.EdFi.SupporterMilitaryConnectionDescriptor" lazy="false" discriminator-value="edfi.SupporterMilitaryConnectionDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SupporterMilitaryConnectionDescriptor" >
          <key>
            <column name="SupporterMilitaryConnectionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SupporterMilitaryConnectionDescriptorId" column="SupporterMilitaryConnectionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SurveyCategoryDescriptorAggregate.EdFi.SurveyCategoryDescriptor" lazy="false" discriminator-value="edfi.SurveyCategoryDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SurveyCategoryDescriptor" >
          <key>
            <column name="SurveyCategoryDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SurveyCategoryDescriptorId" column="SurveyCategoryDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SurveyLevelDescriptorAggregate.EdFi.SurveyLevelDescriptor" lazy="false" discriminator-value="edfi.SurveyLevelDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="SurveyLevelDescriptor" >
          <key>
            <column name="SurveyLevelDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="SurveyLevelDescriptorId" column="SurveyLevelDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TeachingCredentialBasisDescriptorAggregate.EdFi.TeachingCredentialBasisDescriptor" lazy="false" discriminator-value="edfi.TeachingCredentialBasisDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TeachingCredentialBasisDescriptor" >
          <key>
            <column name="TeachingCredentialBasisDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TeachingCredentialBasisDescriptorId" column="TeachingCredentialBasisDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TeachingCredentialDescriptorAggregate.EdFi.TeachingCredentialDescriptor" lazy="false" discriminator-value="edfi.TeachingCredentialDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TeachingCredentialDescriptor" >
          <key>
            <column name="TeachingCredentialDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TeachingCredentialDescriptorId" column="TeachingCredentialDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TechnicalSkillsAssessmentDescriptorAggregate.EdFi.TechnicalSkillsAssessmentDescriptor" lazy="false" discriminator-value="edfi.TechnicalSkillsAssessmentDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TechnicalSkillsAssessmentDescriptor" >
          <key>
            <column name="TechnicalSkillsAssessmentDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TechnicalSkillsAssessmentDescriptorId" column="TechnicalSkillsAssessmentDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TelephoneNumberTypeDescriptorAggregate.EdFi.TelephoneNumberTypeDescriptor" lazy="false" discriminator-value="edfi.TelephoneNumberTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TelephoneNumberTypeDescriptor" >
          <key>
            <column name="TelephoneNumberTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TermDescriptorAggregate.EdFi.TermDescriptor" lazy="false" discriminator-value="edfi.TermDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TermDescriptor" >
          <key>
            <column name="TermDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TermDescriptorId" column="TermDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TitleIPartAParticipantDescriptorAggregate.EdFi.TitleIPartAParticipantDescriptor" lazy="false" discriminator-value="edfi.TitleIPartAParticipantDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TitleIPartAParticipantDescriptor" >
          <key>
            <column name="TitleIPartAParticipantDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TitleIPartAParticipantDescriptorId" column="TitleIPartAParticipantDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TitleIPartAProgramServiceDescriptorAggregate.EdFi.TitleIPartAProgramServiceDescriptor" lazy="false" discriminator-value="edfi.TitleIPartAProgramServiceDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TitleIPartAProgramServiceDescriptor" >
          <key>
            <column name="TitleIPartAProgramServiceDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TitleIPartAProgramServiceDescriptorId" column="TitleIPartAProgramServiceDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TitleIPartASchoolDesignationDescriptorAggregate.EdFi.TitleIPartASchoolDesignationDescriptor" lazy="false" discriminator-value="edfi.TitleIPartASchoolDesignationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TitleIPartASchoolDesignationDescriptor" >
          <key>
            <column name="TitleIPartASchoolDesignationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TitleIPartASchoolDesignationDescriptorId" column="TitleIPartASchoolDesignationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TransportationPublicExpenseEligibilityTypeDescriptorAggregate.EdFi.TransportationPublicExpenseEligibilityTypeDescriptor" lazy="false" discriminator-value="edfi.TransportationPublicExpenseEligibilityTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TransportationPublicExpenseEligibilityTypeDescriptor" >
          <key>
            <column name="TransportationPublicExpenseEligibilityTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TransportationPublicExpenseEligibilityTypeDescriptorId" column="TransportationPublicExpenseEligibilityTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TransportationTypeDescriptorAggregate.EdFi.TransportationTypeDescriptor" lazy="false" discriminator-value="edfi.TransportationTypeDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TransportationTypeDescriptor" >
          <key>
            <column name="TransportationTypeDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TransportationTypeDescriptorId" column="TransportationTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TravelDayofWeekDescriptorAggregate.EdFi.TravelDayofWeekDescriptor" lazy="false" discriminator-value="edfi.TravelDayofWeekDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TravelDayofWeekDescriptor" >
          <key>
            <column name="TravelDayofWeekDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TravelDayofWeekDescriptorId" column="TravelDayofWeekDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TravelDirectionDescriptorAggregate.EdFi.TravelDirectionDescriptor" lazy="false" discriminator-value="edfi.TravelDirectionDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TravelDirectionDescriptor" >
          <key>
            <column name="TravelDirectionDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TravelDirectionDescriptorId" column="TravelDirectionDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.TribalAffiliationDescriptorAggregate.EdFi.TribalAffiliationDescriptor" lazy="false" discriminator-value="edfi.TribalAffiliationDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="TribalAffiliationDescriptor" >
          <key>
            <column name="TribalAffiliationDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.VisaDescriptorAggregate.EdFi.VisaDescriptor" lazy="false" discriminator-value="edfi.VisaDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="VisaDescriptor" >
          <key>
            <column name="VisaDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="VisaDescriptorId" column="VisaDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.WeaponDescriptorAggregate.EdFi.WeaponDescriptor" lazy="false" discriminator-value="edfi.WeaponDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="WeaponDescriptor" >
          <key>
            <column name="WeaponDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="WeaponDescriptorId" column="WeaponDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.WithdrawReasonDescriptorAggregate.EdFi.WithdrawReasonDescriptor" lazy="false" discriminator-value="edfi.WithdrawReasonDescriptor" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="WithdrawReasonDescriptor" >
          <key>
            <column name="WithdrawReasonDescriptorId" />
          </key>

          <!-- PK properties -->
          <property name="WithdrawReasonDescriptorId" column="WithdrawReasonDescriptorId" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.DescriptorMappingAggregate.EdFi.DescriptorMappingReferenceData" table="DescriptorMapping" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="MappedNamespace" column="MappedNamespace" type="string"  length="255"  />
            <key-property name="MappedValue" column="MappedValue" type="string"  length="50"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="Value" column="Value" type="string"  length="50"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DescriptorMappingAggregate.EdFi.DescriptorMapping" table="DescriptorMapping" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MappedNamespace" column="MappedNamespace" type="string" length="255" />
      <key-property name="MappedValue" column="MappedValue" type="string" length="50" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="Value" column="Value" type="string" length="50" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="DescriptorMappingModelEntities" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="MappedNamespace" />
        <column name="MappedValue" />
        <column name="Namespace" />
        <column name="Value" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DescriptorMappingAggregate.EdFi.DescriptorMappingModelEntity" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DescriptorMappingAggregate.EdFi.DescriptorMappingModelEntity" table="DescriptorMappingModelEntity" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ModelEntityDescriptorId" column="ModelEntityDescriptorId" type="int" />
      <key-many-to-one name="DescriptorMapping">
        <column name="MappedNamespace" />
        <column name="MappedValue" />
        <column name="Namespace" />
        <column name="Value" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionReferenceData" table="DisciplineAction" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="DisciplineActionIdentifier" column="DisciplineActionIdentifier" type="string"  length="36"  />
            <key-property name="DisciplineDate" column="DisciplineDate" type="date"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineAction" table="DisciplineAction" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineActionIdentifier" column="DisciplineActionIdentifier" type="string" length="36" />
      <key-property name="DisciplineDate" column="DisciplineDate" type="date" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ActualDisciplineActionLength" column="ActualDisciplineActionLength" type="decimal" />
    <property name="AssignmentSchoolId" column="AssignmentSchoolId" type="long" />
    <property name="DisciplineActionLength" column="DisciplineActionLength" type="decimal" />
    <property name="DisciplineActionLengthDifferenceReasonDescriptorId" column="DisciplineActionLengthDifferenceReasonDescriptorId" type="int" />
    <property name="IEPPlacementMeetingIndicator" column="IEPPlacementMeetingIndicator" type="bool" />
    <property name="RelatedToZeroTolerancePolicy" column="RelatedToZeroTolerancePolicy" type="bool" />
    <property name="ResponsibilitySchoolId" column="ResponsibilitySchoolId" type="long" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="AssignmentSchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssignmentSchoolId" />
    </many-to-one>
    <many-to-one name="ResponsibilitySchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ResponsibilitySchoolId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="DisciplineActionDisciplines" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionDiscipline" />
    </set>

    <set name="DisciplineActionStaffs" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionStaff" />
    </set>

    <set name="DisciplineActionStudentDisciplineIncidentBehaviorAssociations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionStudentDisciplineIncidentBehaviorAssociation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionDiscipline" table="DisciplineActionDiscipline" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineDescriptorId" column="DisciplineDescriptorId" type="int" />
      <key-many-to-one name="DisciplineAction">
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionStaff" table="DisciplineActionStaff" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="DisciplineAction">
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineActionAggregate.EdFi.DisciplineActionStudentDisciplineIncidentBehaviorAssociation" table="DisciplineActionStudentDisciplineIncidentBehaviorAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int" />
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="36" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-many-to-one name="DisciplineAction">
        <column name="DisciplineActionIdentifier" />
        <column name="DisciplineDate" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StudentDisciplineIncidentBehaviorAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentBehaviorAssociationAggregate.EdFi.StudentDisciplineIncidentBehaviorAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BehaviorDescriptorId" />
      <column name="IncidentIdentifier" />
      <column name="SchoolId" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentReferenceData" table="DisciplineIncident" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string"  length="36"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncident" table="DisciplineIncident" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="36" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CaseNumber" column="CaseNumber" type="string" length="20" />
    <property name="IncidentCost" column="IncidentCost" type="Currency" />
    <property name="IncidentDate" column="IncidentDate" type="date" not-null="true" />
    <property name="IncidentDescription" column="IncidentDescription" type="string" length="1024" />
    <property name="IncidentLocationDescriptorId" column="IncidentLocationDescriptorId" type="int" />
    <property name="IncidentTime" column="IncidentTime" type="TimeAsTimeSpan" />
    <property name="ReportedToLawEnforcement" column="ReportedToLawEnforcement" type="bool" />
    <property name="ReporterDescriptionDescriptorId" column="ReporterDescriptionDescriptorId" type="int" />
    <property name="ReporterName" column="ReporterName" type="string" length="75" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="DisciplineIncidentBehaviors" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentBehavior" />
    </set>

    <set name="DisciplineIncidentExternalParticipants" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentExternalParticipant" />
    </set>

    <set name="DisciplineIncidentWeapons" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentWeapon" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentBehavior" table="DisciplineIncidentBehavior" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int" />
      <key-many-to-one name="DisciplineIncident">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BehaviorDetailedDescription" column="BehaviorDetailedDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentExternalParticipant" table="DisciplineIncidentExternalParticipant" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" />
      <key-property name="FirstName" column="FirstName" type="string" length="75" />
      <key-property name="LastSurname" column="LastSurname" type="string" length="75" />
      <key-many-to-one name="DisciplineIncident">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentWeapon" table="DisciplineIncidentWeapon" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="WeaponDescriptorId" column="WeaponDescriptorId" type="int" />
      <key-many-to-one name="DisciplineIncident">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentReferenceData" table="EducationContent" lazy="true" >
        <id name="ContentIdentifier" column="ContentIdentifier" type="string"  length="225" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContent" table="EducationContent" lazy="false" discriminator-value="null">
    <id name="ContentIdentifier" column="ContentIdentifier" type="string" length="225">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AdditionalAuthorsIndicator" column="AdditionalAuthorsIndicator" type="bool" />
    <property name="ContentClassDescriptorId" column="ContentClassDescriptorId" type="int" />
    <property name="Cost" column="Cost" type="Currency" />
    <property name="CostRateDescriptorId" column="CostRateDescriptorId" type="int" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="InteractivityStyleDescriptorId" column="InteractivityStyleDescriptorId" type="int" />
    <property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
    <property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Publisher" column="Publisher" type="string" length="50" />
    <property name="ShortDescription" column="ShortDescription" type="string" length="75" />
    <property name="TimeRequired" column="TimeRequired" type="string" length="30" />
    <property name="UseRightsURL" column="UseRightsURL" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="10" />

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="EducationContentAppropriateGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAppropriateGradeLevel" />
    </set>

    <set name="EducationContentAppropriateSexes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAppropriateSex" />
    </set>

    <set name="EducationContentAuthors" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAuthor" />
    </set>

    <set name="EducationContentDerivativeSourceEducationContents" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceEducationContent" />
    </set>

    <set name="EducationContentDerivativeSourceLearningResourceMetadataURIs" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceLearningResourceMetadataURI" />
    </set>

    <set name="EducationContentDerivativeSourceURIs" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceURI" />
    </set>

    <set name="EducationContentLanguages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ContentIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentLanguage" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAppropriateGradeLevel" table="EducationContentAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAppropriateSex" table="EducationContentAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentAuthor" table="EducationContentAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="255" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceEducationContent" table="EducationContentDerivativeSourceEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DerivativeSourceContentIdentifier" column="DerivativeSourceContentIdentifier" type="string" length="225" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="DerivativeSourceEducationContentReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="DerivativeSourceContentIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceLearningResourceMetadataURI" table="EducationContentDerivativeSourceLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DerivativeSourceLearningResourceMetadataURI" column="DerivativeSourceLearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentDerivativeSourceURI" table="EducationContentDerivativeSourceURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DerivativeSourceURI" column="DerivativeSourceURI" type="string" length="255" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentLanguage" table="EducationContentLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="EducationContent">
        <column name="ContentIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" table="EducationOrganization" lazy="true" >
        <id name="EducationOrganizationId" column="EducationOrganizationId" type="long" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganization" table="EducationOrganization" lazy="false" abstract="true" discriminator-value="null">
    <id name="EducationOrganizationId" column="EducationOrganizationId" type="long">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="NameOfInstitution" column="NameOfInstitution" type="string" length="75" not-null="true" />
    <property name="OperationalStatusDescriptorId" column="OperationalStatusDescriptorId" type="int" />
    <property name="ShortNameOfInstitution" column="ShortNameOfInstitution" type="string" length="75" />
    <property name="WebSite" column="WebSite" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="EducationOrganizationAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationAddress" />
    </set>

    <set name="EducationOrganizationCategories" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationCategory" />
    </set>

    <set name="EducationOrganizationIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIdentificationCode" />
    </set>

    <set name="EducationOrganizationIndicators" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicator" />
    </set>

    <set name="EducationOrganizationInstitutionTelephones" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationInstitutionTelephone" />
    </set>

    <set name="EducationOrganizationInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationInternationalAddress" />
    </set>

    <!-- Derived classes -->
    <subclass name="EdFi.Ods.Entities.NHibernate.CommunityOrganizationAggregate.EdFi.CommunityOrganization" lazy="false" discriminator-value="edfi.CommunityOrganization" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CommunityOrganization" >
          <key>
            <column name="CommunityOrganizationId" />
          </key>

          <!-- PK properties -->
          <property name="CommunityOrganizationId" column="CommunityOrganizationId" type="long" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.CommunityProviderAggregate.EdFi.CommunityProvider" lazy="false" discriminator-value="edfi.CommunityProvider" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="CommunityProvider" >
          <key>
            <column name="CommunityProviderId" />
          </key>

          <!-- PK properties -->
          <property name="CommunityProviderId" column="CommunityProviderId" type="long" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="CommunityOrganizationId" column="CommunityOrganizationId" type="long" />
          <property name="LicenseExemptIndicator" column="LicenseExemptIndicator" type="bool" />
          <property name="ProviderCategoryDescriptorId" column="ProviderCategoryDescriptorId" type="int" not-null="true" />
          <property name="ProviderProfitabilityDescriptorId" column="ProviderProfitabilityDescriptorId" type="int" />
          <property name="ProviderStatusDescriptorId" column="ProviderStatusDescriptorId" type="int" not-null="true" />
          <property name="SchoolIndicator" column="SchoolIndicator" type="bool" />

          <!-- Aggregate references -->
          <many-to-one name="CommunityOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="CommunityOrganizationId" />
          </many-to-one>


          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EducationOrganizationNetworkAggregate.EdFi.EducationOrganizationNetwork" lazy="false" discriminator-value="edfi.EducationOrganizationNetwork" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EducationOrganizationNetwork" >
          <key>
            <column name="EducationOrganizationNetworkId" />
          </key>

          <!-- PK properties -->
          <property name="EducationOrganizationNetworkId" column="EducationOrganizationNetworkId" type="long" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="NetworkPurposeDescriptorId" column="NetworkPurposeDescriptorId" type="int" not-null="true" />

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.EducationServiceCenterAggregate.EdFi.EducationServiceCenter" lazy="false" discriminator-value="edfi.EducationServiceCenter" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="EducationServiceCenter" >
          <key>
            <column name="EducationServiceCenterId" />
          </key>

          <!-- PK properties -->
          <property name="EducationServiceCenterId" column="EducationServiceCenterId" type="long" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="StateEducationAgencyId" column="StateEducationAgencyId" type="long" />

          <!-- Aggregate references -->
          <many-to-one name="StateEducationAgencyReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="StateEducationAgencyId" />
          </many-to-one>


          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyAggregate.EdFi.LocalEducationAgency" lazy="false" discriminator-value="edfi.LocalEducationAgency" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="LocalEducationAgency" >
          <key>
            <column name="LocalEducationAgencyId" />
          </key>

          <!-- PK properties -->
          <property name="LocalEducationAgencyId" column="LocalEducationAgencyId" type="long" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="CharterStatusDescriptorId" column="CharterStatusDescriptorId" type="int" />
          <property name="EducationServiceCenterId" column="EducationServiceCenterId" type="long" />
          <property name="FederalLocaleCodeDescriptorId" column="FederalLocaleCodeDescriptorId" type="int" />
          <property name="LocalEducationAgencyCategoryDescriptorId" column="LocalEducationAgencyCategoryDescriptorId" type="int" not-null="true" />
          <property name="ParentLocalEducationAgencyId" column="ParentLocalEducationAgencyId" type="long" />
          <property name="StateEducationAgencyId" column="StateEducationAgencyId" type="long" />

          <!-- Aggregate references -->
          <many-to-one name="EducationServiceCenterReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="EducationServiceCenterId" />
          </many-to-one>

          <many-to-one name="ParentLocalEducationAgencyReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="ParentLocalEducationAgencyId" />
          </many-to-one>

          <many-to-one name="StateEducationAgencyReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="StateEducationAgencyId" />
          </many-to-one>


          <!-- Collections -->
          <set name="LocalEducationAgencyAccountabilities" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="LocalEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyAccountability" />
          </set>

          <set name="LocalEducationAgencyFederalFunds" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="LocalEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyFederalFunds" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.OrganizationDepartmentAggregate.EdFi.OrganizationDepartment" lazy="false" discriminator-value="edfi.OrganizationDepartment" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="OrganizationDepartment" >
          <key>
            <column name="OrganizationDepartmentId" />
          </key>

          <!-- PK properties -->
          <property name="OrganizationDepartmentId" column="OrganizationDepartmentId" type="long" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
          <property name="ParentEducationOrganizationId" column="ParentEducationOrganizationId" type="long" />

          <!-- Aggregate references -->
          <many-to-one name="ParentEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="ParentEducationOrganizationId" />
          </many-to-one>


          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitution" lazy="false" discriminator-value="edfi.PostSecondaryInstitution" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="PostSecondaryInstitution" >
          <key>
            <column name="PostSecondaryInstitutionId" />
          </key>

          <!-- PK properties -->
          <property name="PostSecondaryInstitutionId" column="PostSecondaryInstitutionId" type="long" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AdministrativeFundingControlDescriptorId" column="AdministrativeFundingControlDescriptorId" type="int" />
          <property name="FederalLocaleCodeDescriptorId" column="FederalLocaleCodeDescriptorId" type="int" />
          <property name="PostSecondaryInstitutionLevelDescriptorId" column="PostSecondaryInstitutionLevelDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="PostSecondaryInstitutionMediumOfInstructions" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="PostSecondaryInstitutionId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionMediumOfInstruction" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.SchoolAggregate.EdFi.School" lazy="false" discriminator-value="edfi.School" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="School" >
          <key>
            <column name="SchoolId" />
          </key>

          <!-- PK properties -->
          <property name="SchoolId" column="SchoolId" type="long" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AccreditationStatusDescriptorId" column="AccreditationStatusDescriptorId" type="int" />
          <property name="AdministrativeFundingControlDescriptorId" column="AdministrativeFundingControlDescriptorId" type="int" />
          <property name="CharterApprovalAgencyTypeDescriptorId" column="CharterApprovalAgencyTypeDescriptorId" type="int" />
          <property name="CharterApprovalSchoolYear" column="CharterApprovalSchoolYear" type="short" />
          <property name="CharterStatusDescriptorId" column="CharterStatusDescriptorId" type="int" />
          <property name="FederalLocaleCodeDescriptorId" column="FederalLocaleCodeDescriptorId" type="int" />
          <property name="ImprovingSchool" column="ImprovingSchool" type="bool" />
          <property name="InternetAccessDescriptorId" column="InternetAccessDescriptorId" type="int" />
          <property name="LocalEducationAgencyId" column="LocalEducationAgencyId" type="long" />
          <property name="MagnetSpecialProgramEmphasisSchoolDescriptorId" column="MagnetSpecialProgramEmphasisSchoolDescriptorId" type="int" />
          <property name="PostSecondaryInstitutionId" column="PostSecondaryInstitutionId" type="long" />
          <property name="SchoolTypeDescriptorId" column="SchoolTypeDescriptorId" type="int" />
          <property name="TitleIPartASchoolDesignationDescriptorId" column="TitleIPartASchoolDesignationDescriptorId" type="int" />

          <!-- Aggregate references -->
          <many-to-one name="CharterApprovalSchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="CharterApprovalSchoolYear" />
          </many-to-one>

          <many-to-one name="LocalEducationAgencyReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="LocalEducationAgencyId" />
          </many-to-one>

          <many-to-one name="PostSecondaryInstitutionReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
              <column name="PostSecondaryInstitutionId" />
          </many-to-one>


          <!-- Collections -->
          <set name="SchoolCategories" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.SchoolAggregate.EdFi.SchoolCategory" />
          </set>

          <set name="SchoolGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="SchoolId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.SchoolAggregate.EdFi.SchoolGradeLevel" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StateEducationAgencyAggregate.EdFi.StateEducationAgency" lazy="false" discriminator-value="edfi.StateEducationAgency" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StateEducationAgency" >
          <key>
            <column name="StateEducationAgencyId" />
          </key>

          <!-- PK properties -->
          <property name="StateEducationAgencyId" column="StateEducationAgencyId" type="long" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="FederalLocaleCodeDescriptorId" column="FederalLocaleCodeDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StateEducationAgencyAccountabilities" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="StateEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StateEducationAgencyAggregate.EdFi.StateEducationAgencyAccountability" />
          </set>

          <set name="StateEducationAgencyFederalFunds" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="StateEducationAgencyId" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StateEducationAgencyAggregate.EdFi.StateEducationAgencyFederalFunds" />
          </set>

      </join>
    </subclass>
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationAddress" table="EducationOrganizationAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="EducationOrganizationAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationAddressPeriod" table="EducationOrganizationAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="EducationOrganizationAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationCategory" table="EducationOrganizationCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationCategoryDescriptorId" column="EducationOrganizationCategoryDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIdentificationCode" table="EducationOrganizationIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationIdentificationSystemDescriptorId" column="EducationOrganizationIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicator" table="EducationOrganizationIndicator" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IndicatorDescriptorId" column="IndicatorDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="IndicatorGroupDescriptorId" column="IndicatorGroupDescriptorId" type="int" />
    <property name="IndicatorLevelDescriptorId" column="IndicatorLevelDescriptorId" type="int" />
    <property name="IndicatorValue" column="IndicatorValue" type="string" length="60" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="EducationOrganizationIndicatorPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="IndicatorDescriptorId" />
        <column name="EducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationIndicatorPeriod" table="EducationOrganizationIndicatorPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="EducationOrganizationIndicator">
        <column name="IndicatorDescriptorId" />
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationInstitutionTelephone" table="EducationOrganizationInstitutionTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="InstitutionTelephoneNumberTypeDescriptorId" column="InstitutionTelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationInternationalAddress" table="EducationOrganizationInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="EducationOrganization">
        <column name="EducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationIdentityAggregate.EdFi.EducationOrganizationIdentityReferenceData" table="EducationOrganizationIdentity" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EducationOrganizationIdentificationSystemDescriptorId" column="EducationOrganizationIdentificationSystemDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationIdentityAggregate.EdFi.EducationOrganizationIdentity" table="EducationOrganizationIdentity" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EducationOrganizationIdentificationSystemDescriptorId" column="EducationOrganizationIdentificationSystemDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationInterventionPrescriptionAssociationAggregate.EdFi.EducationOrganizationInterventionPrescriptionAssociationReferenceData" table="EducationOrganizationInterventionPrescriptionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="long"  />
            <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationInterventionPrescriptionAssociationAggregate.EdFi.EducationOrganizationInterventionPrescriptionAssociation" table="EducationOrganizationInterventionPrescriptionAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="long" />
      <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="InterventionPrescriptionReferenceData" class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="InterventionPrescriptionEducationOrganizationId" />
      <column name="InterventionPrescriptionIdentificationCode" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationNetworkAssociationAggregate.EdFi.EducationOrganizationNetworkAssociationReferenceData" table="EducationOrganizationNetworkAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationNetworkId" column="EducationOrganizationNetworkId" type="long"  />
            <key-property name="MemberEducationOrganizationId" column="MemberEducationOrganizationId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationNetworkAssociationAggregate.EdFi.EducationOrganizationNetworkAssociation" table="EducationOrganizationNetworkAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationNetworkId" column="EducationOrganizationNetworkId" type="long" />
      <key-property name="MemberEducationOrganizationId" column="MemberEducationOrganizationId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationNetworkReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationNetworkId" />
    </many-to-one>
    <many-to-one name="MemberEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="MemberEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationPeerAssociationAggregate.EdFi.EducationOrganizationPeerAssociationReferenceData" table="EducationOrganizationPeerAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="PeerEducationOrganizationId" column="PeerEducationOrganizationId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducationOrganizationPeerAssociationAggregate.EdFi.EducationOrganizationPeerAssociation" table="EducationOrganizationPeerAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="PeerEducationOrganizationId" column="PeerEducationOrganizationId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="PeerEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PeerEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EducatorPreparationProgramAggregate.EdFi.EducatorPreparationProgramReferenceData" table="EducatorPreparationProgram" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="255"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducatorPreparationProgramAggregate.EdFi.EducatorPreparationProgram" table="EducatorPreparationProgram" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="255" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AccreditationStatusDescriptorId" column="AccreditationStatusDescriptorId" type="int" />
    <property name="ProgramId" column="ProgramId" type="string" length="20" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="EducatorPreparationProgramGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EducatorPreparationProgramAggregate.EdFi.EducatorPreparationProgramGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EducatorPreparationProgramAggregate.EdFi.EducatorPreparationProgramGradeLevel" table="EducatorPreparationProgramGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="EducatorPreparationProgram">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EvaluationAggregate.EdFi.EvaluationReferenceData" table="Evaluation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="EvaluationTitle" column="EvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationAggregate.EdFi.Evaluation" table="Evaluation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EvaluationDescription" column="EvaluationDescription" type="string" length="255" />
    <property name="EvaluationTypeDescriptorId" column="EvaluationTypeDescriptorId" type="int" />
    <property name="InterRaterReliabilityScore" column="InterRaterReliabilityScore" type="int" />
    <property name="MaxNumericRating" column="MaxNumericRating" type="decimal" />
    <property name="MinNumericRating" column="MinNumericRating" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="PerformanceEvaluationReferenceData" class="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationAggregate.EdFi.PerformanceEvaluationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="EvaluationRatingLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="SchoolYear" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EvaluationAggregate.EdFi.EvaluationRatingLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationAggregate.EdFi.EvaluationRatingLevel" table="EvaluationRatingLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EvaluationRatingLevelDescriptorId" column="EvaluationRatingLevelDescriptorId" type="int" />
      <key-many-to-one name="Evaluation">
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="SchoolYear" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxNumericRating" column="MaxNumericRating" type="decimal" />
    <property name="MinNumericRating" column="MinNumericRating" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EvaluationElementAggregate.EdFi.EvaluationElementReferenceData" table="EvaluationElement" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string"  length="255"  />
            <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string"  length="50"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="EvaluationTitle" column="EvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationElementAggregate.EdFi.EvaluationElement" table="EvaluationElement" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string" length="255" />
      <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string" length="50" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EvaluationTypeDescriptorId" column="EvaluationTypeDescriptorId" type="int" />
    <property name="MaxNumericRating" column="MaxNumericRating" type="decimal" />
    <property name="MinNumericRating" column="MinNumericRating" type="decimal" />
    <property name="SortOrder" column="SortOrder" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveAggregate.EdFi.EvaluationObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="EvaluationElementRatingLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationElementTitle" />
        <column name="EvaluationObjectiveTitle" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="SchoolYear" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EvaluationElementAggregate.EdFi.EvaluationElementRatingLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationElementAggregate.EdFi.EvaluationElementRatingLevel" table="EvaluationElementRatingLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EvaluationRatingLevelDescriptorId" column="EvaluationRatingLevelDescriptorId" type="int" />
      <key-many-to-one name="EvaluationElement">
        <column name="EducationOrganizationId" />
        <column name="EvaluationElementTitle" />
        <column name="EvaluationObjectiveTitle" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="SchoolYear" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxNumericRating" column="MaxNumericRating" type="decimal" />
    <property name="MinNumericRating" column="MinNumericRating" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EvaluationElementRatingAggregate.EdFi.EvaluationElementRatingReferenceData" table="EvaluationElementRating" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationDate" column="EvaluationDate" type="UtcDateTime"  />
            <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string"  length="255"  />
            <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string"  length="50"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="EvaluationTitle" column="EvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationElementRatingAggregate.EdFi.EvaluationElementRating" table="EvaluationElementRating" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationDate" column="EvaluationDate" type="UtcDateTime" />
      <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string" length="255" />
      <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string" length="50" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AreaOfRefinement" column="AreaOfRefinement" type="string" length="1024" />
    <property name="AreaOfReinforcement" column="AreaOfReinforcement" type="string" length="1024" />
    <property name="Comments" column="Comments" type="string" length="1024" />
    <property name="EvaluationElementRatingLevelDescriptorId" column="EvaluationElementRatingLevelDescriptorId" type="int" />
    <property name="Feedback" column="Feedback" type="string" length="2048" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationElementReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationElementAggregate.EdFi.EvaluationElementReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationElementTitle" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="EvaluationObjectiveRatingReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveRatingAggregate.EdFi.EvaluationObjectiveRatingReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationDate" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="PersonId" />
      <column name="SchoolYear" />
      <column name="SourceSystemDescriptorId" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="EvaluationElementRatingResults" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationDate" />
        <column name="EvaluationElementTitle" />
        <column name="EvaluationObjectiveTitle" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EvaluationElementRatingAggregate.EdFi.EvaluationElementRatingResult" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationElementRatingAggregate.EdFi.EvaluationElementRatingResult" table="EvaluationElementRatingResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="NumericRating" column="NumericRating" type="decimal" />
      <key-property name="RatingResultTitle" column="RatingResultTitle" type="string" length="50" />
      <key-many-to-one name="EvaluationElementRating">
        <column name="EducationOrganizationId" />
        <column name="EvaluationDate" />
        <column name="EvaluationElementTitle" />
        <column name="EvaluationObjectiveTitle" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveAggregate.EdFi.EvaluationObjectiveReferenceData" table="EvaluationObjective" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string"  length="50"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="EvaluationTitle" column="EvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveAggregate.EdFi.EvaluationObjective" table="EvaluationObjective" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string" length="50" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EvaluationObjectiveDescription" column="EvaluationObjectiveDescription" type="string" length="255" />
    <property name="EvaluationTypeDescriptorId" column="EvaluationTypeDescriptorId" type="int" />
    <property name="MaxNumericRating" column="MaxNumericRating" type="decimal" />
    <property name="MinNumericRating" column="MinNumericRating" type="decimal" />
    <property name="SortOrder" column="SortOrder" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationAggregate.EdFi.EvaluationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="EvaluationObjectiveRatingLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationObjectiveTitle" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="SchoolYear" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveAggregate.EdFi.EvaluationObjectiveRatingLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveAggregate.EdFi.EvaluationObjectiveRatingLevel" table="EvaluationObjectiveRatingLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EvaluationRatingLevelDescriptorId" column="EvaluationRatingLevelDescriptorId" type="int" />
      <key-many-to-one name="EvaluationObjective">
        <column name="EducationOrganizationId" />
        <column name="EvaluationObjectiveTitle" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="SchoolYear" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxNumericRating" column="MaxNumericRating" type="decimal" />
    <property name="MinNumericRating" column="MinNumericRating" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveRatingAggregate.EdFi.EvaluationObjectiveRatingReferenceData" table="EvaluationObjectiveRating" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationDate" column="EvaluationDate" type="UtcDateTime"  />
            <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string"  length="50"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="EvaluationTitle" column="EvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveRatingAggregate.EdFi.EvaluationObjectiveRating" table="EvaluationObjectiveRating" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationDate" column="EvaluationDate" type="UtcDateTime" />
      <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string" length="50" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="Comments" column="Comments" type="string" length="1024" />
    <property name="ObjectiveRatingLevelDescriptorId" column="ObjectiveRatingLevelDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveAggregate.EdFi.EvaluationObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="EvaluationRatingReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationRatingAggregate.EdFi.EvaluationRatingReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationDate" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="PersonId" />
      <column name="SchoolYear" />
      <column name="SourceSystemDescriptorId" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="EvaluationObjectiveRatingResults" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationDate" />
        <column name="EvaluationObjectiveTitle" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveRatingAggregate.EdFi.EvaluationObjectiveRatingResult" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveRatingAggregate.EdFi.EvaluationObjectiveRatingResult" table="EvaluationObjectiveRatingResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="NumericRating" column="NumericRating" type="decimal" />
      <key-property name="RatingResultTitle" column="RatingResultTitle" type="string" length="50" />
      <key-many-to-one name="EvaluationObjectiveRating">
        <column name="EducationOrganizationId" />
        <column name="EvaluationDate" />
        <column name="EvaluationObjectiveTitle" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EvaluationRatingAggregate.EdFi.EvaluationRatingReferenceData" table="EvaluationRating" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationDate" column="EvaluationDate" type="UtcDateTime"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="EvaluationTitle" column="EvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationRatingAggregate.EdFi.EvaluationRating" table="EvaluationRating" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationDate" column="EvaluationDate" type="UtcDateTime" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ActualDuration" column="ActualDuration" type="int" />
    <property name="Comments" column="Comments" type="string" length="1024" />
    <property name="EvaluationRatingLevelDescriptorId" column="EvaluationRatingLevelDescriptorId" type="int" />
    <property name="EvaluationRatingStatusDescriptorId" column="EvaluationRatingStatusDescriptorId" type="int" />
    <property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
    <property name="SchoolId" column="SchoolId" type="long" />
    <property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
    <property name="SessionName" column="SessionName" type="string" length="120" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationAggregate.EdFi.EvaluationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="PerformanceEvaluationRatingReferenceData" class="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationRatingAggregate.EdFi.PerformanceEvaluationRatingReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="PersonId" />
      <column name="SchoolYear" />
      <column name="SourceSystemDescriptorId" />
      <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="EvaluationRatingResults" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationDate" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EvaluationRatingAggregate.EdFi.EvaluationRatingResult" />
    </set>

    <set name="EvaluationRatingReviewers" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationDate" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EvaluationRatingAggregate.EdFi.EvaluationRatingReviewer" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationRatingAggregate.EdFi.EvaluationRatingResult" table="EvaluationRatingResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="NumericRating" column="NumericRating" type="decimal" />
      <key-property name="RatingResultTitle" column="RatingResultTitle" type="string" length="50" />
      <key-many-to-one name="EvaluationRating">
        <column name="EducationOrganizationId" />
        <column name="EvaluationDate" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationRatingAggregate.EdFi.EvaluationRatingReviewer" table="EvaluationRatingReviewer" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="FirstName" column="FirstName" type="string" length="75" />
      <key-property name="LastSurname" column="LastSurname" type="string" length="75" />
      <key-many-to-one name="EvaluationRating">
        <column name="EducationOrganizationId" />
        <column name="EvaluationDate" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ReviewerPersonId" column="ReviewerPersonId" type="string" length="32" />
    <property name="ReviewerSourceSystemDescriptorId" column="ReviewerSourceSystemDescriptorId" type="int" />

    <!-- One-to-one child mappings -->
    <set name="EvaluationRatingReviewerReceivedTraining" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="FirstName" />
        <column name="LastSurname" />
        <column name="EducationOrganizationId" />
        <column name="EvaluationDate" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.EvaluationRatingAggregate.EdFi.EvaluationRatingReviewerReceivedTraining" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="ReviewerPersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ReviewerPersonId" />
      <column name="ReviewerSourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationRatingAggregate.EdFi.EvaluationRatingReviewerReceivedTraining" table="EvaluationRatingReviewerReceivedTraining" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="EvaluationRatingReviewer">
        <column name="FirstName" />
        <column name="LastSurname" />
        <column name="EducationOrganizationId" />
        <column name="EvaluationDate" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="EvaluationTitle" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="InterRaterReliabilityScore" column="InterRaterReliabilityScore" type="int" />
    <property name="ReceivedTrainingDate" column="ReceivedTrainingDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.EvaluationRubricDimensionAggregate.EdFi.EvaluationRubricDimensionReferenceData" table="EvaluationRubricDimension" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EvaluationRubricRating" column="EvaluationRubricRating" type="int"  />
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long"  />
            <key-property name="ProgramEvaluationElementTitle" column="ProgramEvaluationElementTitle" type="string"  length="50"  />
            <key-property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int"  />
            <key-property name="ProgramEvaluationTitle" column="ProgramEvaluationTitle" type="string"  length="50"  />
            <key-property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.EvaluationRubricDimensionAggregate.EdFi.EvaluationRubricDimension" table="EvaluationRubricDimension" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EvaluationRubricRating" column="EvaluationRubricRating" type="int" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramEvaluationElementTitle" column="ProgramEvaluationElementTitle" type="string" length="50" />
      <key-property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int" />
      <key-property name="ProgramEvaluationTitle" column="ProgramEvaluationTitle" type="string" length="50" />
      <key-property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EvaluationCriterionDescription" column="EvaluationCriterionDescription" type="string" length="1024" not-null="true" />
    <property name="EvaluationRubricRatingLevelDescriptorId" column="EvaluationRubricRatingLevelDescriptorId" type="int" />
    <property name="RubricDimensionSortOrder" column="RubricDimensionSortOrder" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ProgramEvaluationElementReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramEvaluationElementAggregate.EdFi.ProgramEvaluationElementReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramEvaluationElementTitle" />
      <column name="ProgramEvaluationPeriodDescriptorId" />
      <column name="ProgramEvaluationTitle" />
      <column name="ProgramEvaluationTypeDescriptorId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.FeederSchoolAssociationAggregate.EdFi.FeederSchoolAssociationReferenceData" table="FeederSchoolAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="FeederSchoolId" column="FeederSchoolId" type="long"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.FeederSchoolAssociationAggregate.EdFi.FeederSchoolAssociation" table="FeederSchoolAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="FeederSchoolId" column="FeederSchoolId" type="long" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="FeederRelationshipDescription" column="FeederRelationshipDescription" type="string" length="1024" />

    <!-- Aggregate references -->
    <many-to-one name="FeederSchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="FeederSchoolId" />
    </many-to-one>
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.FieldworkExperienceAggregate.EdFi.FieldworkExperienceReferenceData" table="FieldworkExperience" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="FieldworkIdentifier" column="FieldworkIdentifier" type="string"  length="64"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.FieldworkExperienceAggregate.EdFi.FieldworkExperience" table="FieldworkExperience" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="FieldworkIdentifier" column="FieldworkIdentifier" type="string" length="64" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="FieldworkTypeDescriptorId" column="FieldworkTypeDescriptorId" type="int" not-null="true" />
    <property name="HoursCompleted" column="HoursCompleted" type="decimal" />
    <property name="ProgramName" column="ProgramName" type="string" length="255" />
    <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
    <property name="SchoolId" column="SchoolId" type="long" />

    <!-- One-to-one child mappings -->
    <set name="FieldworkExperienceCoteaching" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="FieldworkIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.FieldworkExperienceAggregate.EdFi.FieldworkExperienceCoteaching" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="EducatorPreparationProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.EducatorPreparationProgramAggregate.EdFi.EducatorPreparationProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.FieldworkExperienceAggregate.EdFi.FieldworkExperienceCoteaching" table="FieldworkExperienceCoteaching" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="FieldworkExperience">
        <column name="BeginDate" />
        <column name="FieldworkIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CoteachingBeginDate" column="CoteachingBeginDate" type="date" not-null="true" />
    <property name="CoteachingEndDate" column="CoteachingEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.FieldworkExperienceSectionAssociationAggregate.EdFi.FieldworkExperienceSectionAssociationReferenceData" table="FieldworkExperienceSectionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="FieldworkIdentifier" column="FieldworkIdentifier" type="string"  length="64"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.FieldworkExperienceSectionAssociationAggregate.EdFi.FieldworkExperienceSectionAssociation" table="FieldworkExperienceSectionAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="FieldworkIdentifier" column="FieldworkIdentifier" type="string" length="64" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="FieldworkExperienceReferenceData" class="EdFi.Ods.Entities.NHibernate.FieldworkExperienceAggregate.EdFi.FieldworkExperienceReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="FieldworkIdentifier" />
      <column name="StudentUSI" />
    </many-to-one>
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.FinancialAidAggregate.EdFi.FinancialAidReferenceData" table="FinancialAid" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AidTypeDescriptorId" column="AidTypeDescriptorId" type="int"  />
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.FinancialAidAggregate.EdFi.FinancialAid" table="FinancialAid" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AidTypeDescriptorId" column="AidTypeDescriptorId" type="int" />
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AidAmount" column="AidAmount" type="decimal" />
    <property name="AidConditionDescription" column="AidConditionDescription" type="string" length="1024" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="PellGrantRecipient" column="PellGrantRecipient" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.FunctionDimensionAggregate.EdFi.FunctionDimensionReferenceData" table="FunctionDimension" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Code" column="Code" type="string"  length="16"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.FunctionDimensionAggregate.EdFi.FunctionDimension" table="FunctionDimension" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Code" column="Code" type="string" length="16" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CodeName" column="CodeName" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="FunctionDimensionReportingTags" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Code" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.FunctionDimensionAggregate.EdFi.FunctionDimensionReportingTag" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.FunctionDimensionAggregate.EdFi.FunctionDimensionReportingTag" table="FunctionDimensionReportingTag" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" />
      <key-many-to-one name="FunctionDimension">
        <column name="Code" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.FundDimensionAggregate.EdFi.FundDimensionReferenceData" table="FundDimension" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Code" column="Code" type="string"  length="16"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.FundDimensionAggregate.EdFi.FundDimension" table="FundDimension" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Code" column="Code" type="string" length="16" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CodeName" column="CodeName" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="FundDimensionReportingTags" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Code" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.FundDimensionAggregate.EdFi.FundDimensionReportingTag" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.FundDimensionAggregate.EdFi.FundDimensionReportingTag" table="FundDimensionReportingTag" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" />
      <key-many-to-one name="FundDimension">
        <column name="Code" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationReferenceData" table="GeneralStudentProgramAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociation" table="GeneralStudentProgramAssociation" lazy="false" abstract="true" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="ReasonExitedDescriptorId" column="ReasonExitedDescriptorId" type="int" />
    <property name="ServedOutsideOfRegularSession" column="ServedOutsideOfRegularSession" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="GeneralStudentProgramAssociationProgramParticipationStatuses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationProgramParticipationStatus" />
    </set>

    <!-- Derived classes -->
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociation" lazy="false" discriminator-value="edfi.StudentCTEProgramAssociation" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentCTEProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="NonTraditionalGenderStatus" column="NonTraditionalGenderStatus" type="bool" />
          <property name="PrivateCTEProgram" column="PrivateCTEProgram" type="bool" />
          <property name="TechnicalSkillsAssessmentDescriptorId" column="TechnicalSkillsAssessmentDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentCTEProgramAssociationCTEProgramServices" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociation" lazy="false" discriminator-value="edfi.StudentHomelessProgramAssociation" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentHomelessProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AwaitingFosterCare" column="AwaitingFosterCare" type="bool" />
          <property name="HomelessPrimaryNighttimeResidenceDescriptorId" column="HomelessPrimaryNighttimeResidenceDescriptorId" type="int" />
          <property name="HomelessUnaccompaniedYouth" column="HomelessUnaccompaniedYouth" type="bool" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentHomelessProgramAssociationHomelessProgramServices" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociationHomelessProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociation" lazy="false" discriminator-value="edfi.StudentLanguageInstructionProgramAssociation" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentLanguageInstructionProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="Dosage" column="Dosage" type="int" />
          <property name="EnglishLearnerParticipation" column="EnglishLearnerParticipation" type="bool" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessments" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment" />
          </set>

          <set name="StudentLanguageInstructionProgramAssociationLanguageInstructionProgramServices" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociation" lazy="false" discriminator-value="edfi.StudentMigrantEducationProgramAssociation" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentMigrantEducationProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="ContinuationOfServicesReasonDescriptorId" column="ContinuationOfServicesReasonDescriptorId" type="int" />
          <property name="EligibilityExpirationDate" column="EligibilityExpirationDate" type="date" />
          <property name="LastQualifyingMove" column="LastQualifyingMove" type="date" not-null="true" />
          <property name="PriorityForServices" column="PriorityForServices" type="bool" not-null="true" />
          <property name="QualifyingArrivalDate" column="QualifyingArrivalDate" type="date" />
          <property name="StateResidencyDate" column="StateResidencyDate" type="date" />
          <property name="USInitialEntry" column="USInitialEntry" type="date" />
          <property name="USInitialSchoolEntry" column="USInitialSchoolEntry" type="date" />
          <property name="USMostRecentEntry" column="USMostRecentEntry" type="date" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentMigrantEducationProgramAssociationMigrantEducationProgramServices" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociationMigrantEducationProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociation" lazy="false" discriminator-value="edfi.StudentNeglectedOrDelinquentProgramAssociation" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentNeglectedOrDelinquentProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="ELAProgressLevelDescriptorId" column="ELAProgressLevelDescriptorId" type="int" />
          <property name="MathematicsProgressLevelDescriptorId" column="MathematicsProgressLevelDescriptorId" type="int" />
          <property name="NeglectedOrDelinquentProgramDescriptorId" column="NeglectedOrDelinquentProgramDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramServices" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentProgramAssociationAggregate.EdFi.StudentProgramAssociation" lazy="false" discriminator-value="edfi.StudentProgramAssociation" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentProgramAssociationServices" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentProgramAssociationAggregate.EdFi.StudentProgramAssociationService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentSchoolFoodServiceProgramAssociationAggregate.EdFi.StudentSchoolFoodServiceProgramAssociation" lazy="false" discriminator-value="edfi.StudentSchoolFoodServiceProgramAssociation" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentSchoolFoodServiceProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="DirectCertification" column="DirectCertification" type="bool" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramServices" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSchoolFoodServiceProgramAssociationAggregate.EdFi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentSection504ProgramAssociationAggregate.EdFi.StudentSection504ProgramAssociation" lazy="false" discriminator-value="edfi.StudentSection504ProgramAssociation" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentSection504ProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="AccommodationPlan" column="AccommodationPlan" type="bool" />
          <property name="Section504DisabilityDescriptorId" column="Section504DisabilityDescriptorId" type="int" />
          <property name="Section504Eligibility" column="Section504Eligibility" type="bool" not-null="true" />
          <property name="Section504EligibilityDecisionDate" column="Section504EligibilityDecisionDate" type="date" />
          <property name="Section504MeetingDate" column="Section504MeetingDate" type="date" />

          <!-- Aggregate references -->

          <!-- Collections -->
      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociation" lazy="false" discriminator-value="edfi.StudentSpecialEducationProgramAssociation" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentSpecialEducationProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="IdeaEligibility" column="IdeaEligibility" type="bool" />
          <property name="IEPBeginDate" column="IEPBeginDate" type="date" />
          <property name="IEPEndDate" column="IEPEndDate" type="date" />
          <property name="IEPEvaluationDueDate" column="IEPEvaluationDueDate" type="date" />
          <property name="IEPLastEvaluationDate" column="IEPLastEvaluationDate" type="date" />
          <property name="IEPLastReviewDate" column="IEPLastReviewDate" type="date" />
          <property name="IEPReviewDueDate" column="IEPReviewDueDate" type="date" />
          <property name="MedicallyFragile" column="MedicallyFragile" type="bool" />
          <property name="MultiplyDisabled" column="MultiplyDisabled" type="bool" />
          <property name="ReductionInHoursPerWeekComparedToPeers" column="ReductionInHoursPerWeekComparedToPeers" type="decimal" />
          <property name="SchoolHoursPerWeek" column="SchoolHoursPerWeek" type="decimal" />
          <property name="ShortenedSchoolDayIndicator" column="ShortenedSchoolDayIndicator" type="bool" />
          <property name="SpecialEducationExitDate" column="SpecialEducationExitDate" type="date" />
          <property name="SpecialEducationExitExplained" column="SpecialEducationExitExplained" type="string" length="1024" />
          <property name="SpecialEducationExitReasonDescriptorId" column="SpecialEducationExitReasonDescriptorId" type="int" />
          <property name="SpecialEducationHoursPerWeek" column="SpecialEducationHoursPerWeek" type="decimal" />
          <property name="SpecialEducationSettingDescriptorId" column="SpecialEducationSettingDescriptorId" type="int" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentSpecialEducationProgramAssociationDisabilities" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisability" />
          </set>

          <set name="StudentSpecialEducationProgramAssociationServiceProviders" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationServiceProvider" />
          </set>

          <set name="StudentSpecialEducationProgramAssociationSpecialEducationProgramServices" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramService" />
          </set>

      </join>
    </subclass>
    <subclass name="EdFi.Ods.Entities.NHibernate.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociation" lazy="false" discriminator-value="edfi.StudentTitleIPartAProgramAssociation" persister="EdFi.Ods.Common.Infrastructure.Persisters.DiscriminatedSubclassWithDynamicComponentEntityPersister, EdFi.Ods.Common">
      <join table="StudentTitleIPartAProgramAssociation" >
          <key>
            <column name="BeginDate" />
            <column name="EducationOrganizationId" />
            <column name="ProgramEducationOrganizationId" />
            <column name="ProgramName" />
            <column name="ProgramTypeDescriptorId" />
            <column name="StudentUSI" />
          </key>

          <!-- PK properties -->
          <property name="BeginDate" column="BeginDate" type="date" not-null="true" insert="false" update="false"/>
          <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" not-null="true" insert="false" update="false"/>
          <property name="ProgramName" column="ProgramName" type="string" length="60" not-null="true" insert="false" update="false"/>
          <property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" not-null="true" insert="false" update="false"/>
          <property name="StudentUSI" column="StudentUSI" type="int" not-null="true" insert="false" update="false"/>

          <!-- Properties -->
          <property name="TitleIPartAParticipantDescriptorId" column="TitleIPartAParticipantDescriptorId" type="int" not-null="true" />

          <!-- Aggregate references -->

          <!-- Collections -->
          <set name="StudentTitleIPartAProgramAssociationTitleIPartAProgramServices" cascade="all-delete-orphan" inverse="true" lazy="true">
            <key>
              <column name="BeginDate" />
              <column name="EducationOrganizationId" />
              <column name="ProgramEducationOrganizationId" />
              <column name="ProgramName" />
              <column name="ProgramTypeDescriptorId" />
              <column name="StudentUSI" />
            </key>
            <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationTitleIPartAProgramService" />
          </set>

      </join>
    </subclass>
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationProgramParticipationStatus" table="GeneralStudentProgramAssociationProgramParticipationStatus" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ParticipationStatusDescriptorId" column="ParticipationStatusDescriptorId" type="int" />
      <key-property name="StatusBeginDate" column="StatusBeginDate" type="date" />
      <key-many-to-one name="GeneralStudentProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="StatusEndDate" column="StatusEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GoalAggregate.EdFi.GoalReferenceData" table="Goal" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssignmentDate" column="AssignmentDate" type="date"  />
            <key-property name="GoalTitle" column="GoalTitle" type="string"  length="255"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GoalAggregate.EdFi.Goal" table="Goal" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssignmentDate" column="AssignmentDate" type="date" />
      <key-property name="GoalTitle" column="GoalTitle" type="string" length="255" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="Comments" column="Comments" type="string" length="1024" />
    <property name="CompletedDate" column="CompletedDate" type="date" />
    <property name="CompletedIndicator" column="CompletedIndicator" type="bool" />
    <property name="DueDate" column="DueDate" type="date" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    <property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string" length="255" />
    <property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string" length="50" />
    <property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
    <property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
    <property name="GoalDescription" column="GoalDescription" type="string" length="1024" />
    <property name="GoalTypeDescriptorId" column="GoalTypeDescriptorId" type="int" />
    <property name="ParentAssignmentDate" column="ParentAssignmentDate" type="date" />
    <property name="ParentGoalTitle" column="ParentGoalTitle" type="string" length="255" />
    <property name="ParentPersonId" column="ParentPersonId" type="string" length="32" />
    <property name="ParentSourceSystemDescriptorId" column="ParentSourceSystemDescriptorId" type="int" />
    <property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
    <property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
    <property name="SchoolYear" column="SchoolYear" type="short" />
    <property name="TermDescriptorId" column="TermDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationElementReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationElementAggregate.EdFi.EvaluationElementReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationElementTitle" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="EvaluationObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationObjectiveAggregate.EdFi.EvaluationObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="ParentGoalReferenceData" class="EdFi.Ods.Entities.NHibernate.GoalAggregate.EdFi.GoalReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ParentAssignmentDate" />
      <column name="ParentGoalTitle" />
      <column name="ParentPersonId" />
      <column name="ParentSourceSystemDescriptorId" />
    </many-to-one>
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GradeAggregate.EdFi.GradeReferenceData" table="Grade" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int"  />
            <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int"  />
            <key-property name="GradingPeriodName" column="GradingPeriodName" type="string"  length="60"  />
            <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradeAggregate.EdFi.Grade" table="Grade" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int" />
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodName" column="GradingPeriodName" type="string" length="60" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CurrentGradeAsOfDate" column="CurrentGradeAsOfDate" type="date" />
    <property name="CurrentGradeIndicator" column="CurrentGradeIndicator" type="bool" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="GradeEarnedDescription" column="GradeEarnedDescription" type="string" length="64" />
    <property name="LetterGradeEarned" column="LetterGradeEarned" type="string" length="20" />
    <property name="NumericGradeEarned" column="NumericGradeEarned" type="decimal" />
    <property name="PerformanceBaseConversionDescriptorId" column="PerformanceBaseConversionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodName" />
      <column name="SchoolId" />
      <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="StudentSectionAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="GradeLearningStandardGrades" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="GradeTypeDescriptorId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolYear" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GradeAggregate.EdFi.GradeLearningStandardGrade" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradeAggregate.EdFi.GradeLearningStandardGrade" table="GradeLearningStandardGrade" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="Grade">
        <column name="BeginDate" />
        <column name="GradeTypeDescriptorId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolYear" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="LetterGradeEarned" column="LetterGradeEarned" type="string" length="20" />
    <property name="NumericGradeEarned" column="NumericGradeEarned" type="decimal" />
    <property name="PerformanceBaseConversionDescriptorId" column="PerformanceBaseConversionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntryReferenceData" table="GradebookEntry" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="GradebookEntryIdentifier" column="GradebookEntryIdentifier" type="string"  length="60"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntry" table="GradebookEntry" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradebookEntryIdentifier" column="GradebookEntryIdentifier" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="DateAssigned" column="DateAssigned" type="date" not-null="true" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="DueDate" column="DueDate" type="date" />
    <property name="DueTime" column="DueTime" type="TimeAsTimeSpan" />
    <property name="GradebookEntryTypeDescriptorId" column="GradebookEntryTypeDescriptorId" type="int" />
    <property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
    <property name="GradingPeriodName" column="GradingPeriodName" type="string" length="60" />
    <property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
    <property name="MaxPoints" column="MaxPoints" type="decimal" />
    <property name="SchoolId" column="SchoolId" type="long" />
    <property name="SchoolYear" column="SchoolYear" type="short" />
    <property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
    <property name="SessionName" column="SessionName" type="string" length="120" />
    <property name="SourceSectionIdentifier" column="SourceSectionIdentifier" type="string" length="255" not-null="true" />
    <property name="Title" column="Title" type="string" length="100" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodName" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="GradebookEntryLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="GradebookEntryIdentifier" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntryLearningStandard" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntryLearningStandard" table="GradebookEntryLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="GradebookEntry">
        <column name="GradebookEntryIdentifier" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" table="GradingPeriod" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int"  />
            <key-property name="GradingPeriodName" column="GradingPeriodName" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriod" table="GradingPeriod" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodName" column="GradingPeriodName" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" not-null="true" />
    <property name="PeriodSequence" column="PeriodSequence" type="int" />
    <property name="TotalInstructionalDays" column="TotalInstructionalDays" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanReferenceData" table="GraduationPlan" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int"  />
            <key-property name="GraduationSchoolYear" column="GraduationSchoolYear" type="short"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlan" table="GraduationPlan" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int" />
      <key-property name="GraduationSchoolYear" column="GraduationSchoolYear" type="short" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="IndividualPlan" column="IndividualPlan" type="bool" />
    <property name="TotalRequiredCreditConversion" column="TotalRequiredCreditConversion" type="decimal" />
    <property name="TotalRequiredCredits" column="TotalRequiredCredits" type="decimal" not-null="true" />
    <property name="TotalRequiredCreditTypeDescriptorId" column="TotalRequiredCreditTypeDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="GraduationSchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GraduationSchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="GraduationPlanCreditsByCourses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourse" />
    </set>

    <set name="GraduationPlanCreditsByCreditCategories" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCreditCategory" />
    </set>

    <set name="GraduationPlanCreditsBySubjects" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsBySubject" />
    </set>

    <set name="GraduationPlanRequiredAssessments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessment" />
    </set>

    <set name="GraduationPlanRequiredCertifications" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredCertification" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourse" table="GraduationPlanCreditsByCourse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseSetName" column="CourseSetName" type="string" length="120" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CreditConversion" column="CreditConversion" type="decimal" />
    <property name="Credits" column="Credits" type="decimal" not-null="true" />
    <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" />
    <property name="WhenTakenGradeLevelDescriptorId" column="WhenTakenGradeLevelDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="GraduationPlanCreditsByCourseCourses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="CourseSetName" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseCourse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCourseCourse" table="GraduationPlanCreditsByCourseCourse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseCode" column="CourseCode" type="string" length="120" />
      <key-property name="CourseEducationOrganizationId" column="CourseEducationOrganizationId" type="long" />
      <key-many-to-one name="GraduationPlanCreditsByCourse">
        <column name="CourseSetName" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="CourseReferenceData" class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CourseCode" />
      <column name="CourseEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsByCreditCategory" table="GraduationPlanCreditsByCreditCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CreditCategoryDescriptorId" column="CreditCategoryDescriptorId" type="int" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CreditConversion" column="CreditConversion" type="decimal" />
    <property name="Credits" column="Credits" type="decimal" not-null="true" />
    <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanCreditsBySubject" table="GraduationPlanCreditsBySubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CreditConversion" column="CreditConversion" type="decimal" />
    <property name="Credits" column="Credits" type="decimal" not-null="true" />
    <property name="CreditTypeDescriptorId" column="CreditTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessment" table="GraduationPlanRequiredAssessment" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- One-to-one child mappings -->
    <set name="GraduationPlanRequiredAssessmentPerformanceLevel" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentPerformanceLevel" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="GraduationPlanRequiredAssessmentScores" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentScore" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentPerformanceLevel" table="GraduationPlanRequiredAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="GraduationPlanRequiredAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" not-null="true" />
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" not-null="true" />
    <property name="PerformanceLevelIndicatorName" column="PerformanceLevelIndicatorName" type="string" length="60" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredAssessmentScore" table="GraduationPlanRequiredAssessmentScore" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="GraduationPlanRequiredAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanRequiredCertification" table="GraduationPlanRequiredCertification" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CertificationTitle" column="CertificationTitle" type="string" length="64" />
      <key-many-to-one name="GraduationPlan">
        <column name="EducationOrganizationId" />
        <column name="GraduationPlanTypeDescriptorId" />
        <column name="GraduationSchoolYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CertificationIdentifier" column="CertificationIdentifier" type="string" length="120" />
    <property name="CertificationRouteDescriptorId" column="CertificationRouteDescriptorId" type="int" />
    <property name="Namespace" column="Namespace" type="string" length="255" />

    <!-- Aggregate references -->
    <many-to-one name="CertificationReferenceData" class="EdFi.Ods.Entities.NHibernate.CertificationAggregate.EdFi.CertificationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CertificationIdentifier" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionReferenceData" table="Intervention" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.Intervention" table="Intervention" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" />
    <property name="MaxDosage" column="MaxDosage" type="int" />
    <property name="MinDosage" column="MinDosage" type="int" />
    <property name="Namespace" column="Namespace" type="string" length="255" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="InterventionAppropriateGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionAppropriateGradeLevel" />
    </set>

    <set name="InterventionAppropriateSexes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionAppropriateSex" />
    </set>

    <set name="InterventionDiagnoses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionDiagnosis" />
    </set>

    <set name="InterventionEducationContents" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionEducationContent" />
    </set>

    <set name="InterventionInterventionPrescriptions" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionInterventionPrescription" />
    </set>

    <set name="InterventionLearningResourceMetadataURIs" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionLearningResourceMetadataURI" />
    </set>

    <set name="InterventionMeetingTimes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionMeetingTime" />
    </set>

    <set name="InterventionPopulationServeds" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionPopulationServed" />
    </set>

    <set name="InterventionStaffs" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionStaff" />
    </set>

    <set name="InterventionURIs" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionURI" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionAppropriateGradeLevel" table="InterventionAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionAppropriateSex" table="InterventionAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionDiagnosis" table="InterventionDiagnosis" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionEducationContent" table="InterventionEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentIdentifier" column="ContentIdentifier" type="string" length="225" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationContentReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ContentIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionInterventionPrescription" table="InterventionInterventionPrescription" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="long" />
      <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="120" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="InterventionPrescriptionReferenceData" class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="InterventionPrescriptionEducationOrganizationId" />
      <column name="InterventionPrescriptionIdentificationCode" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionLearningResourceMetadataURI" table="InterventionLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionMeetingTime" table="InterventionMeetingTime" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EndTime" column="EndTime" type="TimeAsTimeSpan" />
      <key-property name="StartTime" column="StartTime" type="TimeAsTimeSpan" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionPopulationServed" table="InterventionPopulationServed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionStaff" table="InterventionStaff" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionURI" table="InterventionURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="URI" column="URI" type="string" length="255" />
      <key-many-to-one name="Intervention">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionReferenceData" table="InterventionPrescription" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescription" table="InterventionPrescription" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" />
    <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" />
    <property name="MaxDosage" column="MaxDosage" type="int" />
    <property name="MinDosage" column="MinDosage" type="int" />
    <property name="Namespace" column="Namespace" type="string" length="255" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="InterventionPrescriptionAppropriateGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateGradeLevel" />
    </set>

    <set name="InterventionPrescriptionAppropriateSexes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateSex" />
    </set>

    <set name="InterventionPrescriptionDiagnoses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionDiagnosis" />
    </set>

    <set name="InterventionPrescriptionEducationContents" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionEducationContent" />
    </set>

    <set name="InterventionPrescriptionLearningResourceMetadataURIs" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionLearningResourceMetadataURI" />
    </set>

    <set name="InterventionPrescriptionPopulationServeds" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionPopulationServed" />
    </set>

    <set name="InterventionPrescriptionURIs" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionURI" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateGradeLevel" table="InterventionPrescriptionAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionAppropriateSex" table="InterventionPrescriptionAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionDiagnosis" table="InterventionPrescriptionDiagnosis" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionEducationContent" table="InterventionPrescriptionEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentIdentifier" column="ContentIdentifier" type="string" length="225" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationContentReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ContentIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionLearningResourceMetadataURI" table="InterventionPrescriptionLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionPopulationServed" table="InterventionPrescriptionPopulationServed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionURI" table="InterventionPrescriptionURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="URI" column="URI" type="string" length="255" />
      <key-many-to-one name="InterventionPrescription">
        <column name="EducationOrganizationId" />
        <column name="InterventionPrescriptionIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyReferenceData" table="InterventionStudy" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="InterventionStudyIdentificationCode" column="InterventionStudyIdentificationCode" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudy" table="InterventionStudy" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="InterventionStudyIdentificationCode" column="InterventionStudyIdentificationCode" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="DeliveryMethodDescriptorId" column="DeliveryMethodDescriptorId" type="int" not-null="true" />
    <property name="InterventionClassDescriptorId" column="InterventionClassDescriptorId" type="int" not-null="true" />
    <property name="InterventionPrescriptionEducationOrganizationId" column="InterventionPrescriptionEducationOrganizationId" type="long" not-null="true" />
    <property name="InterventionPrescriptionIdentificationCode" column="InterventionPrescriptionIdentificationCode" type="string" length="120" not-null="true" />
    <property name="Participants" column="Participants" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="InterventionPrescriptionReferenceData" class="EdFi.Ods.Entities.NHibernate.InterventionPrescriptionAggregate.EdFi.InterventionPrescriptionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="InterventionPrescriptionEducationOrganizationId" />
      <column name="InterventionPrescriptionIdentificationCode" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="InterventionStudyAppropriateGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateGradeLevel" />
    </set>

    <set name="InterventionStudyAppropriateSexes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateSex" />
    </set>

    <set name="InterventionStudyEducationContents" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyEducationContent" />
    </set>

    <set name="InterventionStudyInterventionEffectivenesses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyInterventionEffectiveness" />
    </set>

    <set name="InterventionStudyLearningResourceMetadataURIs" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyLearningResourceMetadataURI" />
    </set>

    <set name="InterventionStudyPopulationServeds" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyPopulationServed" />
    </set>

    <set name="InterventionStudyStateAbbreviations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyStateAbbreviation" />
    </set>

    <set name="InterventionStudyURIs" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyURI" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateGradeLevel" table="InterventionStudyAppropriateGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyAppropriateSex" table="InterventionStudyAppropriateSex" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SexDescriptorId" column="SexDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyEducationContent" table="InterventionStudyEducationContent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentIdentifier" column="ContentIdentifier" type="string" length="225" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationContentReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationContentAggregate.EdFi.EducationContentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ContentIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyInterventionEffectiveness" table="InterventionStudyInterventionEffectiveness" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ImprovementIndex" column="ImprovementIndex" type="int" />
    <property name="InterventionEffectivenessRatingDescriptorId" column="InterventionEffectivenessRatingDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyLearningResourceMetadataURI" table="InterventionStudyLearningResourceMetadataURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningResourceMetadataURI" column="LearningResourceMetadataURI" type="string" length="255" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyPopulationServed" table="InterventionStudyPopulationServed" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyStateAbbreviation" table="InterventionStudyStateAbbreviation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.InterventionStudyAggregate.EdFi.InterventionStudyURI" table="InterventionStudyURI" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="URI" column="URI" type="string" length="255" />
      <key-many-to-one name="InterventionStudy">
        <column name="EducationOrganizationId" />
        <column name="InterventionStudyIdentificationCode" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" table="LearningStandard" lazy="true" >
        <id name="LearningStandardId" column="LearningStandardId" type="string"  length="60" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandard" table="LearningStandard" lazy="false" discriminator-value="null">
    <id name="LearningStandardId" column="LearningStandardId" type="string" length="60">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CourseTitle" column="CourseTitle" type="string" length="120" />
    <property name="Description" column="Description" type="string" length="1024" not-null="true" />
    <property name="LearningStandardCategoryDescriptorId" column="LearningStandardCategoryDescriptorId" type="int" />
    <property name="LearningStandardItemCode" column="LearningStandardItemCode" type="string" length="120" />
    <property name="LearningStandardScopeDescriptorId" column="LearningStandardScopeDescriptorId" type="int" />
    <property name="Namespace" column="Namespace" type="string" length="255" not-null="true" />
    <property name="ParentLearningStandardId" column="ParentLearningStandardId" type="string" length="60" />
    <property name="SuccessCriteria" column="SuccessCriteria" type="string" length="150" />
    <property name="URI" column="URI" type="string" length="255" />

    <!-- One-to-one child mappings -->
    <set name="LearningStandardContentStandard" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardContentStandard" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="ParentLearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ParentLearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="LearningStandardAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardAcademicSubject" />
    </set>

    <set name="LearningStandardGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardGradeLevel" />
    </set>

    <set name="LearningStandardIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardIdentificationCode" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardAcademicSubject" table="LearningStandardAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardContentStandard" table="LearningStandardContentStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="MandatingEducationOrganizationId" column="MandatingEducationOrganizationId" type="long" />
    <property name="PublicationDate" column="PublicationDate" type="date" />
    <property name="PublicationStatusDescriptorId" column="PublicationStatusDescriptorId" type="int" />
    <property name="PublicationYear" column="PublicationYear" type="short" />
    <property name="Title" column="Title" type="string" length="100" not-null="true" />
    <property name="URI" column="URI" type="string" length="255" />
    <property name="Version" column="Version" type="string" length="50" />

    <!-- Aggregate references -->
    <many-to-one name="MandatingEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="MandatingEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="LearningStandardContentStandardAuthors" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LearningStandardId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardContentStandardAuthor" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardContentStandardAuthor" table="LearningStandardContentStandardAuthor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Author" column="Author" type="string" length="255" />
      <key-many-to-one name="LearningStandardContentStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardGradeLevel" table="LearningStandardGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardIdentificationCode" table="LearningStandardIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContentStandardName" column="ContentStandardName" type="string" length="65" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="120" />
      <key-many-to-one name="LearningStandard">
        <column name="LearningStandardId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LearningStandardEquivalenceAssociationAggregate.EdFi.LearningStandardEquivalenceAssociationReferenceData" table="LearningStandardEquivalenceAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SourceLearningStandardId" column="SourceLearningStandardId" type="string"  length="60"  />
            <key-property name="TargetLearningStandardId" column="TargetLearningStandardId" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LearningStandardEquivalenceAssociationAggregate.EdFi.LearningStandardEquivalenceAssociation" table="LearningStandardEquivalenceAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SourceLearningStandardId" column="SourceLearningStandardId" type="string" length="60" />
      <key-property name="TargetLearningStandardId" column="TargetLearningStandardId" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EffectiveDate" column="EffectiveDate" type="date" />
    <property name="LearningStandardEquivalenceStrengthDescription" column="LearningStandardEquivalenceStrengthDescription" type="string" length="255" />
    <property name="LearningStandardEquivalenceStrengthDescriptorId" column="LearningStandardEquivalenceStrengthDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SourceLearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SourceLearningStandardId" />
    </many-to-one>
    <many-to-one name="TargetLearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="TargetLearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LocalAccountAggregate.EdFi.LocalAccountReferenceData" table="LocalAccount" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalAccountAggregate.EdFi.LocalAccount" table="LocalAccount" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AccountName" column="AccountName" type="string" length="100" />
    <property name="ChartOfAccountEducationOrganizationId" column="ChartOfAccountEducationOrganizationId" type="long" not-null="true" />
    <property name="ChartOfAccountIdentifier" column="ChartOfAccountIdentifier" type="string" length="50" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="ChartOfAccountReferenceData" class="EdFi.Ods.Entities.NHibernate.ChartOfAccountAggregate.EdFi.ChartOfAccountReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ChartOfAccountIdentifier" />
      <column name="ChartOfAccountEducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="LocalAccountReportingTags" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.LocalAccountAggregate.EdFi.LocalAccountReportingTag" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalAccountAggregate.EdFi.LocalAccountReportingTag" table="LocalAccountReportingTag" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" />
      <key-many-to-one name="LocalAccount">
        <column name="AccountIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="TagValue" column="TagValue" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LocalActualAggregate.EdFi.LocalActualReferenceData" table="LocalActual" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="AsOfDate" column="AsOfDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalActualAggregate.EdFi.LocalActual" table="LocalActual" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="Amount" column="Amount" type="Currency" not-null="true" />
    <property name="FinancialCollectionDescriptorId" column="FinancialCollectionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="LocalAccountReferenceData" class="EdFi.Ods.Entities.NHibernate.LocalAccountAggregate.EdFi.LocalAccountReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AccountIdentifier" />
      <column name="EducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LocalBudgetAggregate.EdFi.LocalBudgetReferenceData" table="LocalBudget" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="AsOfDate" column="AsOfDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalBudgetAggregate.EdFi.LocalBudget" table="LocalBudget" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="Amount" column="Amount" type="Currency" not-null="true" />
    <property name="FinancialCollectionDescriptorId" column="FinancialCollectionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="LocalAccountReferenceData" class="EdFi.Ods.Entities.NHibernate.LocalAccountAggregate.EdFi.LocalAccountReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AccountIdentifier" />
      <column name="EducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LocalContractedStaffAggregate.EdFi.LocalContractedStaffReferenceData" table="LocalContractedStaff" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="AsOfDate" column="AsOfDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalContractedStaffAggregate.EdFi.LocalContractedStaff" table="LocalContractedStaff" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="Amount" column="Amount" type="Currency" not-null="true" />
    <property name="FinancialCollectionDescriptorId" column="FinancialCollectionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="LocalAccountReferenceData" class="EdFi.Ods.Entities.NHibernate.LocalAccountAggregate.EdFi.LocalAccountReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AccountIdentifier" />
      <column name="EducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyAccountability" table="LocalEducationAgencyAccountability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="LocalEducationAgency">
        <column name="LocalEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="GunFreeSchoolsActReportingStatusDescriptorId" column="GunFreeSchoolsActReportingStatusDescriptorId" type="int" />
    <property name="SchoolChoiceImplementStatusDescriptorId" column="SchoolChoiceImplementStatusDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalEducationAgencyAggregate.EdFi.LocalEducationAgencyFederalFunds" table="LocalEducationAgencyFederalFunds" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-many-to-one name="LocalEducationAgency">
        <column name="LocalEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="InnovativeDollarsSpent" column="InnovativeDollarsSpent" type="Currency" />
    <property name="InnovativeDollarsSpentStrategicPriorities" column="InnovativeDollarsSpentStrategicPriorities" type="Currency" />
    <property name="InnovativeProgramsFundsReceived" column="InnovativeProgramsFundsReceived" type="Currency" />
    <property name="SchoolImprovementAllocation" column="SchoolImprovementAllocation" type="Currency" />
    <property name="SchoolImprovementReservedFundsPercentage" column="SchoolImprovementReservedFundsPercentage" type="decimal" />
    <property name="StateAssessmentAdministrationFunding" column="StateAssessmentAdministrationFunding" type="decimal" />
    <property name="SupplementalEducationalServicesFundsSpent" column="SupplementalEducationalServicesFundsSpent" type="Currency" />
    <property name="SupplementalEducationalServicesPerPupilExpenditure" column="SupplementalEducationalServicesPerPupilExpenditure" type="Currency" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LocalEncumbranceAggregate.EdFi.LocalEncumbranceReferenceData" table="LocalEncumbrance" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="AsOfDate" column="AsOfDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalEncumbranceAggregate.EdFi.LocalEncumbrance" table="LocalEncumbrance" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="Amount" column="Amount" type="Currency" not-null="true" />
    <property name="FinancialCollectionDescriptorId" column="FinancialCollectionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="LocalAccountReferenceData" class="EdFi.Ods.Entities.NHibernate.LocalAccountAggregate.EdFi.LocalAccountReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AccountIdentifier" />
      <column name="EducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LocalPayrollAggregate.EdFi.LocalPayrollReferenceData" table="LocalPayroll" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AccountIdentifier" column="AccountIdentifier" type="string"  length="50"  />
            <key-property name="AsOfDate" column="AsOfDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocalPayrollAggregate.EdFi.LocalPayroll" table="LocalPayroll" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccountIdentifier" column="AccountIdentifier" type="string" length="50" />
      <key-property name="AsOfDate" column="AsOfDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="Amount" column="Amount" type="Currency" not-null="true" />
    <property name="FinancialCollectionDescriptorId" column="FinancialCollectionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="LocalAccountReferenceData" class="EdFi.Ods.Entities.NHibernate.LocalAccountAggregate.EdFi.LocalAccountReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AccountIdentifier" />
      <column name="EducationOrganizationId" />
      <column name="FiscalYear" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.LocationAggregate.EdFi.LocationReferenceData" table="Location" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ClassroomIdentificationCode" column="ClassroomIdentificationCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.LocationAggregate.EdFi.Location" table="Location" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassroomIdentificationCode" column="ClassroomIdentificationCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="MaximumNumberOfSeats" column="MaximumNumberOfSeats" type="int" />
    <property name="OptimalNumberOfSeats" column="OptimalNumberOfSeats" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ObjectDimensionAggregate.EdFi.ObjectDimensionReferenceData" table="ObjectDimension" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Code" column="Code" type="string"  length="16"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectDimensionAggregate.EdFi.ObjectDimension" table="ObjectDimension" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Code" column="Code" type="string" length="16" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CodeName" column="CodeName" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ObjectDimensionReportingTags" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Code" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ObjectDimensionAggregate.EdFi.ObjectDimensionReportingTag" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectDimensionAggregate.EdFi.ObjectDimensionReportingTag" table="ObjectDimensionReportingTag" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" />
      <key-many-to-one name="ObjectDimension">
        <column name="Code" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentReferenceData" table="ObjectiveAssessment" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="IdentificationCode" column="IdentificationCode" type="string"  length="120"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessment" table="ObjectiveAssessment" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="120" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="MaxRawScore" column="MaxRawScore" type="decimal" />
    <property name="Nomenclature" column="Nomenclature" type="string" length="100" />
    <property name="ParentIdentificationCode" column="ParentIdentificationCode" type="string" length="120" />
    <property name="PercentOfAssessment" column="PercentOfAssessment" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="ParentObjectiveAssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="ParentIdentificationCode" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ObjectiveAssessmentAssessmentItems" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentAssessmentItem" />
    </set>

    <set name="ObjectiveAssessmentLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningStandard" />
    </set>

    <set name="ObjectiveAssessmentPerformanceLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentPerformanceLevel" />
    </set>

    <set name="ObjectiveAssessmentScores" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentScore" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentAssessmentItem" table="ObjectiveAssessmentAssessmentItem" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentItemIdentificationCode" column="AssessmentItemIdentificationCode" type="string" length="120" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AssessmentItemReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="AssessmentItemIdentificationCode" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentLearningStandard" table="ObjectiveAssessmentLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentPerformanceLevel" table="ObjectiveAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="PerformanceLevelIndicatorName" column="PerformanceLevelIndicatorName" type="string" length="60" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentScore" table="ObjectiveAssessmentScore" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="ObjectiveAssessment">
        <column name="AssessmentIdentifier" />
        <column name="IdentificationCode" />
        <column name="Namespace" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaximumScore" column="MaximumScore" type="string" length="35" />
    <property name="MinimumScore" column="MinimumScore" type="string" length="35" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionReferenceData" table="OpenStaffPosition" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="RequisitionNumber" column="RequisitionNumber" type="string"  length="20"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPosition" table="OpenStaffPosition" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="RequisitionNumber" column="RequisitionNumber" type="string" length="20" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="DatePosted" column="DatePosted" type="date" not-null="true" />
    <property name="DatePostingRemoved" column="DatePostingRemoved" type="date" />
    <property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" not-null="true" />
    <property name="FullTimeEquivalency" column="FullTimeEquivalency" type="decimal" />
    <property name="FundingSourceDescriptorId" column="FundingSourceDescriptorId" type="int" />
    <property name="HighNeedAcademicSubject" column="HighNeedAcademicSubject" type="bool" />
    <property name="IsActive" column="IsActive" type="bool" />
    <property name="MaxSalary" column="MaxSalary" type="decimal" />
    <property name="MinSalary" column="MinSalary" type="decimal" />
    <property name="OpenStaffPositionReasonDescriptorId" column="OpenStaffPositionReasonDescriptorId" type="int" />
    <property name="PositionControlNumber" column="PositionControlNumber" type="string" length="20" />
    <property name="PositionTitle" column="PositionTitle" type="string" length="100" />
    <property name="PostingResultDescriptorId" column="PostingResultDescriptorId" type="int" />
    <property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int" />
    <property name="SchoolYear" column="SchoolYear" type="short" />
    <property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int" not-null="true" />
    <property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    <property name="TotalBudgeted" column="TotalBudgeted" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="OpenStaffPositionAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionAcademicSubject" />
    </set>

    <set name="OpenStaffPositionInstructionalGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionInstructionalGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionAcademicSubject" table="OpenStaffPositionAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="OpenStaffPosition">
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionInstructionalGradeLevel" table="OpenStaffPositionInstructionalGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="OpenStaffPosition">
        <column name="EducationOrganizationId" />
        <column name="RequisitionNumber" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionEventAggregate.EdFi.OpenStaffPositionEventReferenceData" table="OpenStaffPositionEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="OpenStaffPositionEventTypeDescriptorId" column="OpenStaffPositionEventTypeDescriptorId" type="int"  />
            <key-property name="RequisitionNumber" column="RequisitionNumber" type="string"  length="20"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.OpenStaffPositionEventAggregate.EdFi.OpenStaffPositionEvent" table="OpenStaffPositionEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="OpenStaffPositionEventTypeDescriptorId" column="OpenStaffPositionEventTypeDescriptorId" type="int" />
      <key-property name="RequisitionNumber" column="RequisitionNumber" type="string" length="20" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="OpenStaffPositionEventStatusDescriptorId" column="OpenStaffPositionEventStatusDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="OpenStaffPositionReferenceData" class="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="RequisitionNumber" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.OperationalUnitDimensionAggregate.EdFi.OperationalUnitDimensionReferenceData" table="OperationalUnitDimension" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Code" column="Code" type="string"  length="16"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.OperationalUnitDimensionAggregate.EdFi.OperationalUnitDimension" table="OperationalUnitDimension" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Code" column="Code" type="string" length="16" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CodeName" column="CodeName" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="OperationalUnitDimensionReportingTags" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Code" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.OperationalUnitDimensionAggregate.EdFi.OperationalUnitDimensionReportingTag" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.OperationalUnitDimensionAggregate.EdFi.OperationalUnitDimensionReportingTag" table="OperationalUnitDimensionReportingTag" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" />
      <key-many-to-one name="OperationalUnitDimension">
        <column name="Code" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PathAggregate.EdFi.PathReferenceData" table="Path" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="PathName" column="PathName" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PathAggregate.EdFi.Path" table="Path" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="PathName" column="PathName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int" />
    <property name="GraduationSchoolYear" column="GraduationSchoolYear" type="short" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="GraduationPlanReferenceData" class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="GraduationPlanTypeDescriptorId" />
      <column name="GraduationSchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PathMilestoneAggregate.EdFi.PathMilestoneReferenceData" table="PathMilestone" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="PathMilestoneName" column="PathMilestoneName" type="string"  length="60"  />
            <key-property name="PathMilestoneTypeDescriptorId" column="PathMilestoneTypeDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PathMilestoneAggregate.EdFi.PathMilestone" table="PathMilestone" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PathMilestoneName" column="PathMilestoneName" type="string" length="60" />
      <key-property name="PathMilestoneTypeDescriptorId" column="PathMilestoneTypeDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="PathMilestoneCode" column="PathMilestoneCode" type="string" length="60" />
    <property name="PathMilestoneDescription" column="PathMilestoneDescription" type="string" length="1024" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PathPhaseAggregate.EdFi.PathPhaseReferenceData" table="PathPhase" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="PathName" column="PathName" type="string"  length="60"  />
            <key-property name="PathPhaseName" column="PathPhaseName" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PathPhaseAggregate.EdFi.PathPhase" table="PathPhase" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="PathName" column="PathName" type="string" length="60" />
      <key-property name="PathPhaseName" column="PathPhaseName" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="PathPhaseSequence" column="PathPhaseSequence" type="int" />
    <property name="PhasePathDescription" column="PhasePathDescription" type="string" length="1024" />

    <!-- Aggregate references -->
    <many-to-one name="PathReferenceData" class="EdFi.Ods.Entities.NHibernate.PathAggregate.EdFi.PathReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="PathName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="PathPhasePathMilestones" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="PathName" />
        <column name="PathPhaseName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.PathPhaseAggregate.EdFi.PathPhasePathMilestone" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PathPhaseAggregate.EdFi.PathPhasePathMilestone" table="PathPhasePathMilestone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PathMilestoneName" column="PathMilestoneName" type="string" length="60" />
      <key-property name="PathMilestoneTypeDescriptorId" column="PathMilestoneTypeDescriptorId" type="int" />
      <key-many-to-one name="PathPhase">
        <column name="EducationOrganizationId" />
        <column name="PathName" />
        <column name="PathPhaseName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="PathMilestoneReferenceData" class="EdFi.Ods.Entities.NHibernate.PathMilestoneAggregate.EdFi.PathMilestoneReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PathMilestoneName" />
      <column name="PathMilestoneTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationAggregate.EdFi.PerformanceEvaluationReferenceData" table="PerformanceEvaluation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationAggregate.EdFi.PerformanceEvaluation" table="PerformanceEvaluation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="PerformanceEvaluationDescription" column="PerformanceEvaluationDescription" type="string" length="255" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="PerformanceEvaluationGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="SchoolYear" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationAggregate.EdFi.PerformanceEvaluationGradeLevel" />
    </set>

    <set name="PerformanceEvaluationRatingLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="SchoolYear" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationAggregate.EdFi.PerformanceEvaluationRatingLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationAggregate.EdFi.PerformanceEvaluationGradeLevel" table="PerformanceEvaluationGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="PerformanceEvaluation">
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="SchoolYear" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationAggregate.EdFi.PerformanceEvaluationRatingLevel" table="PerformanceEvaluationRatingLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EvaluationRatingLevelDescriptorId" column="EvaluationRatingLevelDescriptorId" type="int" />
      <key-many-to-one name="PerformanceEvaluation">
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="SchoolYear" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxNumericRating" column="MaxNumericRating" type="decimal" />
    <property name="MinNumericRating" column="MinNumericRating" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationRatingAggregate.EdFi.PerformanceEvaluationRatingReferenceData" table="PerformanceEvaluationRating" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationRatingAggregate.EdFi.PerformanceEvaluationRating" table="PerformanceEvaluationRating" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ActualDate" column="ActualDate" type="date" not-null="true" />
    <property name="ActualDuration" column="ActualDuration" type="int" />
    <property name="ActualTime" column="ActualTime" type="TimeAsTimeSpan" />
    <property name="Announced" column="Announced" type="bool" />
    <property name="Comments" column="Comments" type="string" length="1024" />
    <property name="CoteachingStyleObservedDescriptorId" column="CoteachingStyleObservedDescriptorId" type="int" />
    <property name="PerformanceEvaluationRatingLevelDescriptorId" column="PerformanceEvaluationRatingLevelDescriptorId" type="int" />
    <property name="ScheduleDate" column="ScheduleDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="PerformanceEvaluationReferenceData" class="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationAggregate.EdFi.PerformanceEvaluationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="PerformanceEvaluationRatingResults" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationRatingAggregate.EdFi.PerformanceEvaluationRatingResult" />
    </set>

    <set name="PerformanceEvaluationRatingReviewers" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationRatingAggregate.EdFi.PerformanceEvaluationRatingReviewer" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationRatingAggregate.EdFi.PerformanceEvaluationRatingResult" table="PerformanceEvaluationRatingResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="NumericRating" column="NumericRating" type="decimal" />
      <key-property name="RatingResultTitle" column="RatingResultTitle" type="string" length="50" />
      <key-many-to-one name="PerformanceEvaluationRating">
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationRatingAggregate.EdFi.PerformanceEvaluationRatingReviewer" table="PerformanceEvaluationRatingReviewer" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="FirstName" column="FirstName" type="string" length="75" />
      <key-property name="LastSurname" column="LastSurname" type="string" length="75" />
      <key-many-to-one name="PerformanceEvaluationRating">
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ReviewerPersonId" column="ReviewerPersonId" type="string" length="32" />
    <property name="ReviewerSourceSystemDescriptorId" column="ReviewerSourceSystemDescriptorId" type="int" />

    <!-- One-to-one child mappings -->
    <set name="PerformanceEvaluationRatingReviewerReceivedTraining" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="FirstName" />
        <column name="LastSurname" />
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationRatingAggregate.EdFi.PerformanceEvaluationRatingReviewerReceivedTraining" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="ReviewerPersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ReviewerPersonId" />
      <column name="ReviewerSourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PerformanceEvaluationRatingAggregate.EdFi.PerformanceEvaluationRatingReviewerReceivedTraining" table="PerformanceEvaluationRatingReviewerReceivedTraining" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="PerformanceEvaluationRatingReviewer">
        <column name="FirstName" />
        <column name="LastSurname" />
        <column name="EducationOrganizationId" />
        <column name="EvaluationPeriodDescriptorId" />
        <column name="PerformanceEvaluationTitle" />
        <column name="PerformanceEvaluationTypeDescriptorId" />
        <column name="PersonId" />
        <column name="SchoolYear" />
        <column name="SourceSystemDescriptorId" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="InterRaterReliabilityScore" column="InterRaterReliabilityScore" type="int" />
    <property name="ReceivedTrainingDate" column="ReceivedTrainingDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" table="Person" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.Person" table="Person" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PostSecondaryEventAggregate.EdFi.PostSecondaryEventReferenceData" table="PostSecondaryEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="PostSecondaryEventCategoryDescriptorId" column="PostSecondaryEventCategoryDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PostSecondaryEventAggregate.EdFi.PostSecondaryEvent" table="PostSecondaryEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="PostSecondaryEventCategoryDescriptorId" column="PostSecondaryEventCategoryDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="PostSecondaryInstitutionId" column="PostSecondaryInstitutionId" type="long" />

    <!-- Aggregate references -->
    <many-to-one name="PostSecondaryInstitutionReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PostSecondaryInstitutionId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PostSecondaryInstitutionAggregate.EdFi.PostSecondaryInstitutionMediumOfInstruction" table="PostSecondaryInstitutionMediumOfInstruction" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MediumOfInstructionDescriptorId" column="MediumOfInstructionDescriptorId" type="int" />
      <key-many-to-one name="PostSecondaryInstitution">
        <column name="PostSecondaryInstitutionId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ProfessionalDevelopmentEventAggregate.EdFi.ProfessionalDevelopmentEventReferenceData" table="ProfessionalDevelopmentEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="ProfessionalDevelopmentTitle" column="ProfessionalDevelopmentTitle" type="string"  length="60"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProfessionalDevelopmentEventAggregate.EdFi.ProfessionalDevelopmentEvent" table="ProfessionalDevelopmentEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="ProfessionalDevelopmentTitle" column="ProfessionalDevelopmentTitle" type="string" length="60" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="MultipleSession" column="MultipleSession" type="bool" />
    <property name="ProfessionalDevelopmentOfferedByDescriptorId" column="ProfessionalDevelopmentOfferedByDescriptorId" type="int" not-null="true" />
    <property name="ProfessionalDevelopmentReason" column="ProfessionalDevelopmentReason" type="string" length="60" />
    <property name="Required" column="Required" type="bool" />
    <property name="TotalHours" column="TotalHours" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ProfessionalDevelopmentEventAttendanceAggregate.EdFi.ProfessionalDevelopmentEventAttendanceReferenceData" table="ProfessionalDevelopmentEventAttendance" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AttendanceDate" column="AttendanceDate" type="date"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="ProfessionalDevelopmentTitle" column="ProfessionalDevelopmentTitle" type="string"  length="60"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProfessionalDevelopmentEventAttendanceAggregate.EdFi.ProfessionalDevelopmentEventAttendance" table="ProfessionalDevelopmentEventAttendance" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceDate" column="AttendanceDate" type="date" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="ProfessionalDevelopmentTitle" column="ProfessionalDevelopmentTitle" type="string" length="60" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" not-null="true" />
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />

    <!-- Aggregate references -->
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>
    <many-to-one name="ProfessionalDevelopmentEventReferenceData" class="EdFi.Ods.Entities.NHibernate.ProfessionalDevelopmentEventAggregate.EdFi.ProfessionalDevelopmentEventReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="ProfessionalDevelopmentTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" table="Program" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.Program" table="Program" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ProgramId" column="ProgramId" type="string" length="20" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ProgramCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramCharacteristic" />
    </set>

    <set name="ProgramLearningStandards" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramLearningStandard" />
    </set>

    <set name="ProgramSponsors" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramSponsor" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramCharacteristic" table="ProgramCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramCharacteristicDescriptorId" column="ProgramCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramLearningStandard" table="ProgramLearningStandard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LearningStandardId" column="LearningStandardId" type="string" length="60" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="LearningStandardReferenceData" class="EdFi.Ods.Entities.NHibernate.LearningStandardAggregate.EdFi.LearningStandardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LearningStandardId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramSponsor" table="ProgramSponsor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramSponsorDescriptorId" column="ProgramSponsorDescriptorId" type="int" />
      <key-many-to-one name="Program">
        <column name="EducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ProgramDimensionAggregate.EdFi.ProgramDimensionReferenceData" table="ProgramDimension" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Code" column="Code" type="string"  length="16"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramDimensionAggregate.EdFi.ProgramDimension" table="ProgramDimension" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Code" column="Code" type="string" length="16" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CodeName" column="CodeName" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ProgramDimensionReportingTags" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Code" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramDimensionAggregate.EdFi.ProgramDimensionReportingTag" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramDimensionAggregate.EdFi.ProgramDimensionReportingTag" table="ProgramDimensionReportingTag" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" />
      <key-many-to-one name="ProgramDimension">
        <column name="Code" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationAggregate.EdFi.ProgramEvaluationReferenceData" table="ProgramEvaluation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long"  />
            <key-property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int"  />
            <key-property name="ProgramEvaluationTitle" column="ProgramEvaluationTitle" type="string"  length="50"  />
            <key-property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationAggregate.EdFi.ProgramEvaluation" table="ProgramEvaluation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int" />
      <key-property name="ProgramEvaluationTitle" column="ProgramEvaluationTitle" type="string" length="50" />
      <key-property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EvaluationMaxNumericRating" column="EvaluationMaxNumericRating" type="decimal" />
    <property name="EvaluationMinNumericRating" column="EvaluationMinNumericRating" type="decimal" />
    <property name="ProgramEvaluationDescription" column="ProgramEvaluationDescription" type="string" length="255" />

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ProgramEvaluationLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramEvaluationAggregate.EdFi.ProgramEvaluationLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationAggregate.EdFi.ProgramEvaluationLevel" table="ProgramEvaluationLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RatingLevelDescriptorId" column="RatingLevelDescriptorId" type="int" />
      <key-many-to-one name="ProgramEvaluation">
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxNumericRating" column="MaxNumericRating" type="decimal" />
    <property name="MinNumericRating" column="MinNumericRating" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationElementAggregate.EdFi.ProgramEvaluationElementReferenceData" table="ProgramEvaluationElement" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long"  />
            <key-property name="ProgramEvaluationElementTitle" column="ProgramEvaluationElementTitle" type="string"  length="50"  />
            <key-property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int"  />
            <key-property name="ProgramEvaluationTitle" column="ProgramEvaluationTitle" type="string"  length="50"  />
            <key-property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationElementAggregate.EdFi.ProgramEvaluationElement" table="ProgramEvaluationElement" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramEvaluationElementTitle" column="ProgramEvaluationElementTitle" type="string" length="50" />
      <key-property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int" />
      <key-property name="ProgramEvaluationTitle" column="ProgramEvaluationTitle" type="string" length="50" />
      <key-property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ElementMaxNumericRating" column="ElementMaxNumericRating" type="decimal" />
    <property name="ElementMinNumericRating" column="ElementMinNumericRating" type="decimal" />
    <property name="ElementSortOrder" column="ElementSortOrder" type="int" />
    <property name="ProgramEvaluationElementDescription" column="ProgramEvaluationElementDescription" type="string" length="255" />
    <property name="ProgramEvaluationObjectiveTitle" column="ProgramEvaluationObjectiveTitle" type="string" length="50" />

    <!-- Aggregate references -->
    <many-to-one name="ProgramEvaluationReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramEvaluationAggregate.EdFi.ProgramEvaluationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramEvaluationPeriodDescriptorId" />
      <column name="ProgramEvaluationTitle" />
      <column name="ProgramEvaluationTypeDescriptorId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="ProgramEvaluationObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramEvaluationObjectiveAggregate.EdFi.ProgramEvaluationObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramEvaluationObjectiveTitle" />
      <column name="ProgramEvaluationPeriodDescriptorId" />
      <column name="ProgramEvaluationTitle" />
      <column name="ProgramEvaluationTypeDescriptorId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ProgramEvaluationElementProgramEvaluationLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationElementTitle" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramEvaluationElementAggregate.EdFi.ProgramEvaluationElementProgramEvaluationLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationElementAggregate.EdFi.ProgramEvaluationElementProgramEvaluationLevel" table="ProgramEvaluationElementProgramEvaluationLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RatingLevelDescriptorId" column="RatingLevelDescriptorId" type="int" />
      <key-many-to-one name="ProgramEvaluationElement">
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationElementTitle" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxNumericRating" column="MaxNumericRating" type="decimal" />
    <property name="MinNumericRating" column="MinNumericRating" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationObjectiveAggregate.EdFi.ProgramEvaluationObjectiveReferenceData" table="ProgramEvaluationObjective" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long"  />
            <key-property name="ProgramEvaluationObjectiveTitle" column="ProgramEvaluationObjectiveTitle" type="string"  length="50"  />
            <key-property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int"  />
            <key-property name="ProgramEvaluationTitle" column="ProgramEvaluationTitle" type="string"  length="50"  />
            <key-property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationObjectiveAggregate.EdFi.ProgramEvaluationObjective" table="ProgramEvaluationObjective" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramEvaluationObjectiveTitle" column="ProgramEvaluationObjectiveTitle" type="string" length="50" />
      <key-property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int" />
      <key-property name="ProgramEvaluationTitle" column="ProgramEvaluationTitle" type="string" length="50" />
      <key-property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ObjectiveMaxNumericRating" column="ObjectiveMaxNumericRating" type="decimal" />
    <property name="ObjectiveMinNumericRating" column="ObjectiveMinNumericRating" type="decimal" />
    <property name="ObjectiveSortOrder" column="ObjectiveSortOrder" type="int" />
    <property name="ProgramEvaluationObjectiveDescription" column="ProgramEvaluationObjectiveDescription" type="string" length="255" />

    <!-- Aggregate references -->
    <many-to-one name="ProgramEvaluationReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramEvaluationAggregate.EdFi.ProgramEvaluationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramEvaluationPeriodDescriptorId" />
      <column name="ProgramEvaluationTitle" />
      <column name="ProgramEvaluationTypeDescriptorId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ProgramEvaluationObjectiveProgramEvaluationLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationObjectiveTitle" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProgramEvaluationObjectiveAggregate.EdFi.ProgramEvaluationObjectiveProgramEvaluationLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProgramEvaluationObjectiveAggregate.EdFi.ProgramEvaluationObjectiveProgramEvaluationLevel" table="ProgramEvaluationObjectiveProgramEvaluationLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RatingLevelDescriptorId" column="RatingLevelDescriptorId" type="int" />
      <key-many-to-one name="ProgramEvaluationObjective">
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationObjectiveTitle" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxNumericRating" column="MaxNumericRating" type="decimal" />
    <property name="MinNumericRating" column="MinNumericRating" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ProjectDimensionAggregate.EdFi.ProjectDimensionReferenceData" table="ProjectDimension" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Code" column="Code" type="string"  length="16"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProjectDimensionAggregate.EdFi.ProjectDimension" table="ProjectDimension" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Code" column="Code" type="string" length="16" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CodeName" column="CodeName" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="ProjectDimensionReportingTags" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Code" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ProjectDimensionAggregate.EdFi.ProjectDimensionReportingTag" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ProjectDimensionAggregate.EdFi.ProjectDimensionReportingTag" table="ProjectDimensionReportingTag" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" />
      <key-many-to-one name="ProjectDimension">
        <column name="Code" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.QuantitativeMeasureAggregate.EdFi.QuantitativeMeasureReferenceData" table="QuantitativeMeasure" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string"  length="255"  />
            <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string"  length="50"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="EvaluationTitle" column="EvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="QuantitativeMeasureIdentifier" column="QuantitativeMeasureIdentifier" type="string"  length="64"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QuantitativeMeasureAggregate.EdFi.QuantitativeMeasure" table="QuantitativeMeasure" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string" length="255" />
      <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string" length="50" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="QuantitativeMeasureIdentifier" column="QuantitativeMeasureIdentifier" type="string" length="64" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="QuantitativeMeasureDatatypeDescriptorId" column="QuantitativeMeasureDatatypeDescriptorId" type="int" />
    <property name="QuantitativeMeasureTypeDescriptorId" column="QuantitativeMeasureTypeDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationElementReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationElementAggregate.EdFi.EvaluationElementReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationElementTitle" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.QuantitativeMeasureScoreAggregate.EdFi.QuantitativeMeasureScoreReferenceData" table="QuantitativeMeasureScore" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationDate" column="EvaluationDate" type="UtcDateTime"  />
            <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string"  length="255"  />
            <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string"  length="50"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="EvaluationTitle" column="EvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="QuantitativeMeasureIdentifier" column="QuantitativeMeasureIdentifier" type="string"  length="64"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.QuantitativeMeasureScoreAggregate.EdFi.QuantitativeMeasureScore" table="QuantitativeMeasureScore" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationDate" column="EvaluationDate" type="UtcDateTime" />
      <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string" length="255" />
      <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string" length="50" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="QuantitativeMeasureIdentifier" column="QuantitativeMeasureIdentifier" type="string" length="64" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ScoreValue" column="ScoreValue" type="decimal" not-null="true" />
    <property name="StandardError" column="StandardError" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationElementRatingReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationElementRatingAggregate.EdFi.EvaluationElementRatingReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationDate" />
      <column name="EvaluationElementTitle" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="PersonId" />
      <column name="SchoolYear" />
      <column name="SourceSystemDescriptorId" />
      <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="QuantitativeMeasureReferenceData" class="EdFi.Ods.Entities.NHibernate.QuantitativeMeasureAggregate.EdFi.QuantitativeMeasureReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationElementTitle" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="QuantitativeMeasureIdentifier" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAggregate.EdFi.RecruitmentEventReferenceData" table="RecruitmentEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="EventTitle" column="EventTitle" type="string"  length="50"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAggregate.EdFi.RecruitmentEvent" table="RecruitmentEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="EventTitle" column="EventTitle" type="string" length="50" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EventDescription" column="EventDescription" type="string" length="255" />
    <property name="EventLocation" column="EventLocation" type="string" length="255" />
    <property name="RecruitmentEventTypeDescriptorId" column="RecruitmentEventTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceReferenceData" table="RecruitmentEventAttendance" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="EventTitle" column="EventTitle" type="string"  length="50"  />
            <key-property name="RecruitmentEventAttendeeIdentifier" column="RecruitmentEventAttendeeIdentifier" type="string"  length="32"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendance" table="RecruitmentEventAttendance" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="EventTitle" column="EventTitle" type="string" length="50" />
      <key-property name="RecruitmentEventAttendeeIdentifier" column="RecruitmentEventAttendeeIdentifier" type="string" length="32" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="Applied" column="Applied" type="bool" />
    <property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" not-null="true" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenderIdentity" column="GenderIdentity" type="string" length="60" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="Met" column="Met" type="bool" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="Notes" column="Notes" type="string" length="255" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PreferredFirstName" column="PreferredFirstName" type="string" length="75" />
    <property name="PreferredLastSurname" column="PreferredLastSurname" type="string" length="75" />
    <property name="PreScreeningRating" column="PreScreeningRating" type="int" />
    <property name="RecruitmentEventAttendeeTypeDescriptorId" column="RecruitmentEventAttendeeTypeDescriptorId" type="int" />
    <property name="Referral" column="Referral" type="bool" />
    <property name="ReferredBy" column="ReferredBy" type="string" length="50" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />
    <property name="SocialMediaNetworkName" column="SocialMediaNetworkName" type="string" length="50" />
    <property name="SocialMediaUserName" column="SocialMediaUserName" type="string" length="50" />

    <!-- One-to-one child mappings -->
    <set name="RecruitmentEventAttendanceCurrentPosition" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceCurrentPosition" />
    </set>

    <!-- One-to-one child mappings -->
    <set name="RecruitmentEventAttendanceRecruitmentEventAttendeeQualifications" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceRecruitmentEventAttendeeQualifications" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="RecruitmentEventReferenceData" class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAggregate.EdFi.RecruitmentEventReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EventDate" />
      <column name="EventTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="RecruitmentEventAttendanceDisabilities" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceDisability" />
    </set>

    <set name="RecruitmentEventAttendancePersonalIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendancePersonalIdentificationDocument" />
    </set>

    <set name="RecruitmentEventAttendanceRaces" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceRace" />
    </set>

    <set name="RecruitmentEventAttendanceTelephones" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceTelephone" />
    </set>

    <set name="RecruitmentEventAttendanceTouchpoints" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceTouchpoint" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceCurrentPosition" table="RecruitmentEventAttendanceCurrentPosition" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="RecruitmentEventAttendance">
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
    <property name="Location" column="Location" type="string" length="75" not-null="true" />
    <property name="NameOfInstitution" column="NameOfInstitution" type="string" length="75" not-null="true" />
    <property name="PositionTitle" column="PositionTitle" type="string" length="100" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="RecruitmentEventAttendanceCurrentPositionGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceCurrentPositionGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceCurrentPositionGradeLevel" table="RecruitmentEventAttendanceCurrentPositionGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="RecruitmentEventAttendanceCurrentPosition">
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceDisability" table="RecruitmentEventAttendanceDisability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" />
      <key-many-to-one name="RecruitmentEventAttendance">
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" />
    <property name="DisabilityDiagnosis" column="DisabilityDiagnosis" type="string" length="80" />
    <property name="OrderOfDisability" column="OrderOfDisability" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="RecruitmentEventAttendanceDisabilityDesignations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="DisabilityDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceDisabilityDesignation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceDisabilityDesignation" table="RecruitmentEventAttendanceDisabilityDesignation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" />
      <key-many-to-one name="RecruitmentEventAttendanceDisability">
        <column name="DisabilityDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendancePersonalIdentificationDocument" table="RecruitmentEventAttendancePersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="RecruitmentEventAttendance">
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceRace" table="RecruitmentEventAttendanceRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="RecruitmentEventAttendance">
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceRecruitmentEventAttendeeQualifications" table="RecruitmentEventAttendanceRecruitmentEventAttendeeQualifications" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="RecruitmentEventAttendance">
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CapacityToServe" column="CapacityToServe" type="bool" />
    <property name="Eligible" column="Eligible" type="bool" not-null="true" />
    <property name="YearsOfServiceCurrentPlacement" column="YearsOfServiceCurrentPlacement" type="decimal" />
    <property name="YearsOfServiceTotal" column="YearsOfServiceTotal" type="decimal" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceTelephone" table="RecruitmentEventAttendanceTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="RecruitmentEventAttendance">
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RecruitmentEventAttendanceAggregate.EdFi.RecruitmentEventAttendanceTouchpoint" table="RecruitmentEventAttendanceTouchpoint" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TouchpointContent" column="TouchpointContent" type="string" length="255" />
      <key-property name="TouchpointDate" column="TouchpointDate" type="date" />
      <key-many-to-one name="RecruitmentEventAttendance">
        <column name="EducationOrganizationId" />
        <column name="EventDate" />
        <column name="EventTitle" />
        <column name="RecruitmentEventAttendeeIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardReferenceData" table="ReportCard" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int"  />
            <key-property name="GradingPeriodName" column="GradingPeriodName" type="string"  length="60"  />
            <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="long"  />
            <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCard" table="ReportCard" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodName" column="GradingPeriodName" type="string" length="60" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="long" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="NumberOfDaysAbsent" column="NumberOfDaysAbsent" type="decimal" />
    <property name="NumberOfDaysInAttendance" column="NumberOfDaysInAttendance" type="decimal" />
    <property name="NumberOfDaysTardy" column="NumberOfDaysTardy" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodName" />
      <column name="GradingPeriodSchoolId" />
      <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="ReportCardGradePointAverages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardGradePointAverage" />
    </set>

    <set name="ReportCardGrades" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardGrade" />
    </set>

    <set name="ReportCardStudentCompetencyObjectives" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardStudentCompetencyObjective" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardGrade" table="ReportCardGrade" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="GradeTypeDescriptorId" column="GradeTypeDescriptorId" type="int" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="GradeReferenceData" class="EdFi.Ods.Entities.NHibernate.GradeAggregate.EdFi.GradeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="GradeTypeDescriptorId" />
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodName" />
      <column name="GradingPeriodSchoolYear" />
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardGradePointAverage" table="ReportCardGradePointAverage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradePointAverageTypeDescriptorId" column="GradePointAverageTypeDescriptorId" type="int" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="GradePointAverageValue" column="GradePointAverageValue" type="decimal" not-null="true" />
    <property name="IsCumulative" column="IsCumulative" type="bool" />
    <property name="MaxGradePointAverageValue" column="MaxGradePointAverageValue" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardStudentCompetencyObjective" table="ReportCardStudentCompetencyObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Objective" column="Objective" type="string" length="60" />
      <key-property name="ObjectiveEducationOrganizationId" column="ObjectiveEducationOrganizationId" type="long" />
      <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int" />
      <key-many-to-one name="ReportCard">
        <column name="EducationOrganizationId" />
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StudentCompetencyObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodName" />
      <column name="GradingPeriodSchoolId" />
      <column name="GradingPeriodSchoolYear" />
      <column name="Objective" />
      <column name="ObjectiveEducationOrganizationId" />
      <column name="ObjectiveGradeLevelDescriptorId" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEventReferenceData" table="RestraintEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="RestraintEventIdentifier" column="RestraintEventIdentifier" type="string"  length="36"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEvent" table="RestraintEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RestraintEventIdentifier" column="RestraintEventIdentifier" type="string" length="36" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDate" column="EventDate" type="date" not-null="true" />
    <property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="36" />

    <!-- Aggregate references -->
    <many-to-one name="DisciplineIncidentReferenceData" class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="IncidentIdentifier" />
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="RestraintEventPrograms" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEventProgram" />
    </set>

    <set name="RestraintEventReasons" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEventReason" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEventProgram" table="RestraintEventProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="RestraintEvent">
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RestraintEventAggregate.EdFi.RestraintEventReason" table="RestraintEventReason" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RestraintEventReasonDescriptorId" column="RestraintEventReasonDescriptorId" type="int" />
      <key-many-to-one name="RestraintEvent">
        <column name="RestraintEventIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.RubricDimensionAggregate.EdFi.RubricDimensionReferenceData" table="RubricDimension" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string"  length="255"  />
            <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string"  length="50"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="EvaluationTitle" column="EvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="RubricRating" column="RubricRating" type="int"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.RubricDimensionAggregate.EdFi.RubricDimension" table="RubricDimension" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string" length="255" />
      <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string" length="50" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="RubricRating" column="RubricRating" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CriterionDescription" column="CriterionDescription" type="string" length="1024" not-null="true" />
    <property name="DimensionOrder" column="DimensionOrder" type="int" />
    <property name="RubricRatingLevelDescriptorId" column="RubricRatingLevelDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationElementReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationElementAggregate.EdFi.EvaluationElementReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationElementTitle" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SchoolAggregate.EdFi.SchoolCategory" table="SchoolCategory" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolCategoryDescriptorId" column="SchoolCategoryDescriptorId" type="int" />
      <key-many-to-one name="School">
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SchoolAggregate.EdFi.SchoolGradeLevel" table="SchoolGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="School">
        <column name="SchoolId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" table="SchoolYearType" lazy="true" >
        <id name="SchoolYear" column="SchoolYear" type="short" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearType" table="SchoolYearType" lazy="false">
    <id name="SchoolYear" column="SchoolYear" type="short">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CurrentSchoolYear" column="CurrentSchoolYear" type="bool" not-null="true" />
    <property name="SchoolYearDescription" column="SchoolYearDescription" type="string" length="50" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" table="Section" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.Section" table="Section" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AvailableCreditConversion" column="AvailableCreditConversion" type="decimal" />
    <property name="AvailableCredits" column="AvailableCredits" type="decimal" />
    <property name="AvailableCreditTypeDescriptorId" column="AvailableCreditTypeDescriptorId" type="int" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="InstructionLanguageDescriptorId" column="InstructionLanguageDescriptorId" type="int" />
    <property name="LocationClassroomIdentificationCode" column="LocationClassroomIdentificationCode" type="string" length="60" />
    <property name="LocationSchoolId" column="LocationSchoolId" type="long" />
    <property name="MediumOfInstructionDescriptorId" column="MediumOfInstructionDescriptorId" type="int" />
    <property name="OfficialAttendancePeriod" column="OfficialAttendancePeriod" type="bool" />
    <property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
    <property name="SectionName" column="SectionName" type="string" length="100" />
    <property name="SectionTypeDescriptorId" column="SectionTypeDescriptorId" type="int" />
    <property name="SequenceOfCourse" column="SequenceOfCourse" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CourseOfferingReferenceData" class="EdFi.Ods.Entities.NHibernate.CourseOfferingAggregate.EdFi.CourseOfferingReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="LocationReferenceData" class="EdFi.Ods.Entities.NHibernate.LocationAggregate.EdFi.LocationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocationClassroomIdentificationCode" />
      <column name="LocationSchoolId" />
    </many-to-one>
    <many-to-one name="LocationSchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocationSchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="SectionCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionCharacteristic" />
    </set>

    <set name="SectionClassPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionClassPeriod" />
    </set>

    <set name="SectionCourseLevelCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionCourseLevelCharacteristic" />
    </set>

    <set name="SectionOfferedGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionOfferedGradeLevel" />
    </set>

    <set name="SectionPrograms" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionProgram" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionCharacteristic" table="SectionCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SectionCharacteristicDescriptorId" column="SectionCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionClassPeriod" table="SectionClassPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassPeriodName" column="ClassPeriodName" type="string" length="60" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ClassPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ClassPeriodName" />
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionCourseLevelCharacteristic" table="SectionCourseLevelCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseLevelCharacteristicDescriptorId" column="CourseLevelCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionOfferedGradeLevel" table="SectionOfferedGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionProgram" table="SectionProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="Section">
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SectionAttendanceTakenEventAggregate.EdFi.SectionAttendanceTakenEventReferenceData" table="SectionAttendanceTakenEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CalendarCode" column="CalendarCode" type="string"  length="120"  />
            <key-property name="Date" column="Date" type="date"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SectionAttendanceTakenEventAggregate.EdFi.SectionAttendanceTakenEvent" table="SectionAttendanceTakenEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CalendarCode" column="CalendarCode" type="string" length="120" />
      <key-property name="Date" column="Date" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EventDate" column="EventDate" type="date" not-null="true" />
    <property name="StaffUSI" column="StaffUSI" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CalendarDateReferenceData" class="EdFi.Ods.Entities.NHibernate.CalendarDateAggregate.EdFi.CalendarDateReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CalendarCode" />
      <column name="Date" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionReferenceData" table="Session" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.Session" table="Session" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" not-null="true" />
    <property name="TermDescriptorId" column="TermDescriptorId" type="int" not-null="true" />
    <property name="TotalInstructionalDays" column="TotalInstructionalDays" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="SessionAcademicWeeks" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionAcademicWeek" />
    </set>

    <set name="SessionGradingPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionGradingPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionAcademicWeek" table="SessionAcademicWeek" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="WeekIdentifier" column="WeekIdentifier" type="string" length="80" />
      <key-many-to-one name="Session">
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AcademicWeekReferenceData" class="EdFi.Ods.Entities.NHibernate.AcademicWeekAggregate.EdFi.AcademicWeekReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
      <column name="WeekIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionGradingPeriod" table="SessionGradingPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodName" column="GradingPeriodName" type="string" length="60" />
      <key-many-to-one name="Session">
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SessionName" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodName" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SourceDimensionAggregate.EdFi.SourceDimensionReferenceData" table="SourceDimension" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Code" column="Code" type="string"  length="16"  />
            <key-property name="FiscalYear" column="FiscalYear" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SourceDimensionAggregate.EdFi.SourceDimension" table="SourceDimension" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Code" column="Code" type="string" length="16" />
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CodeName" column="CodeName" type="string" length="100" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="SourceDimensionReportingTags" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Code" />
        <column name="FiscalYear" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SourceDimensionAggregate.EdFi.SourceDimensionReportingTag" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SourceDimensionAggregate.EdFi.SourceDimensionReportingTag" table="SourceDimensionReportingTag" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ReportingTagDescriptorId" column="ReportingTagDescriptorId" type="int" />
      <key-many-to-one name="SourceDimension">
        <column name="Code" />
        <column name="FiscalYear" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" table="Staff" lazy="true" >
        <id name="StaffUSI" column="StaffUSI" type="int" >
            <generator class="identity" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.Staff" table="Staff" lazy="false" discriminator-value="null">
    <id name="StaffUSI" column="StaffUSI" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BirthDate" column="BirthDate" type="date" />
    <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenderIdentity" column="GenderIdentity" type="string" length="60" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="HighestCompletedLevelOfEducationDescriptorId" column="HighestCompletedLevelOfEducationDescriptorId" type="int" />
    <property name="HighlyQualifiedTeacher" column="HighlyQualifiedTeacher" type="bool" />
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="LoginId" column="LoginId" type="string" length="120" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="PreferredFirstName" column="PreferredFirstName" type="string" length="75" />
    <property name="PreferredLastSurname" column="PreferredLastSurname" type="string" length="75" />
    <property name="RequisitionNumber" column="RequisitionNumber" type="string" length="20" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    <property name="StaffUniqueId" column="StaffUniqueId" type="string" length="32" not-null="true" />
    <property name="YearsOfPriorProfessionalExperience" column="YearsOfPriorProfessionalExperience" type="decimal" />
    <property name="YearsOfPriorTeachingExperience" column="YearsOfPriorTeachingExperience" type="decimal" />

    <!-- One-to-one child mappings -->
    <set name="StaffEducatorResearch" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffEducatorResearch" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="OpenStaffPositionReferenceData" class="EdFi.Ods.Entities.NHibernate.OpenStaffPositionAggregate.EdFi.OpenStaffPositionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="RequisitionNumber" />
    </many-to-one>
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffAddress" />
    </set>

    <set name="StaffAncestryEthnicOrigins" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffAncestryEthnicOrigin" />
    </set>

    <set name="StaffCredentials" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffCredential" />
    </set>

    <set name="StaffEducatorPreparationPrograms" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffEducatorPreparationProgram" />
    </set>

    <set name="StaffElectronicMails" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffElectronicMail" />
    </set>

    <set name="StaffHighlyQualifiedAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffHighlyQualifiedAcademicSubject" />
    </set>

    <set name="StaffIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffIdentificationCode" />
    </set>

    <set name="StaffIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffIdentificationDocument" />
    </set>

    <set name="StaffInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffInternationalAddress" />
    </set>

    <set name="StaffLanguages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffLanguage" />
    </set>

    <set name="StaffOtherNames" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffOtherName" />
    </set>

    <set name="StaffPersonalIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffPersonalIdentificationDocument" />
    </set>

    <set name="StaffRaces" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffRace" />
    </set>

    <set name="StaffRecognitions" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffRecognition" />
    </set>

    <set name="StaffTelephones" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffTelephone" />
    </set>

    <set name="StaffTribalAffiliations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffTribalAffiliation" />
    </set>

    <set name="StaffVisas" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffVisa" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffAddress" table="StaffAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffAddressPeriod" table="StaffAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StaffAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffAncestryEthnicOrigin" table="StaffAncestryEthnicOrigin" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AncestryEthnicOriginDescriptorId" column="AncestryEthnicOriginDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffCredential" table="StaffCredential" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="120" />
      <key-property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="CredentialReferenceData" class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CredentialIdentifier" />
      <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffEducatorPreparationProgram" table="StaffEducatorPreparationProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="255" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducatorPreparationProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.EducatorPreparationProgramAggregate.EdFi.EducatorPreparationProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffEducatorResearch" table="StaffEducatorResearch" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ResearchExperienceDate" column="ResearchExperienceDate" type="date" not-null="true" />
    <property name="ResearchExperienceDescription" column="ResearchExperienceDescription" type="string" length="1024" />
    <property name="ResearchExperienceTitle" column="ResearchExperienceTitle" type="string" length="60" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffElectronicMail" table="StaffElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffHighlyQualifiedAcademicSubject" table="StaffHighlyQualifiedAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffIdentificationCode" table="StaffIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffIdentificationSystemDescriptorId" column="StaffIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="120" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffIdentificationDocument" table="StaffIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffInternationalAddress" table="StaffInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffLanguage" table="StaffLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffLanguageUses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffLanguageUse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffLanguageUse" table="StaffLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="StaffLanguage">
        <column name="LanguageDescriptorId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffOtherName" table="StaffOtherName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffPersonalIdentificationDocument" table="StaffPersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffRace" table="StaffRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffRecognition" table="StaffRecognition" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RecognitionTypeDescriptorId" column="RecognitionTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />
    <property name="RecognitionAwardDate" column="RecognitionAwardDate" type="date" />
    <property name="RecognitionAwardExpiresDate" column="RecognitionAwardExpiresDate" type="date" />
    <property name="RecognitionDescription" column="RecognitionDescription" type="string" length="80" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffTelephone" table="StaffTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffTribalAffiliation" table="StaffTribalAffiliation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffVisa" table="StaffVisa" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="VisaDescriptorId" column="VisaDescriptorId" type="int" />
      <key-many-to-one name="Staff">
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffAbsenceEventAggregate.EdFi.StaffAbsenceEventReferenceData" table="StaffAbsenceEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AbsenceEventCategoryDescriptorId" column="AbsenceEventCategoryDescriptorId" type="int"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffAbsenceEventAggregate.EdFi.StaffAbsenceEvent" table="StaffAbsenceEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AbsenceEventCategoryDescriptorId" column="AbsenceEventCategoryDescriptorId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AbsenceEventReason" column="AbsenceEventReason" type="string" length="40" />
    <property name="HoursAbsent" column="HoursAbsent" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffCohortAssociationAggregate.EdFi.StaffCohortAssociationReferenceData" table="StaffCohortAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="CohortIdentifier" column="CohortIdentifier" type="string"  length="36"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffCohortAssociationAggregate.EdFi.StaffCohortAssociation" table="StaffCohortAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="CohortIdentifier" column="CohortIdentifier" type="string" length="36" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="StudentRecordAccess" column="StudentRecordAccess" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="CohortReferenceData" class="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CohortIdentifier" />
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicReferenceData" table="StaffDemographic" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographic" table="StaffDemographic" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" />
    <property name="GenderIdentity" column="GenderIdentity" type="string" length="60" />
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffDemographicAncestryEthnicOrigins" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicAncestryEthnicOrigin" />
    </set>

    <set name="StaffDemographicIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicIdentificationDocument" />
    </set>

    <set name="StaffDemographicLanguages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicLanguage" />
    </set>

    <set name="StaffDemographicRaces" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicRace" />
    </set>

    <set name="StaffDemographicTribalAffiliations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicTribalAffiliation" />
    </set>

    <set name="StaffDemographicVisas" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicVisa" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicAncestryEthnicOrigin" table="StaffDemographicAncestryEthnicOrigin" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AncestryEthnicOriginDescriptorId" column="AncestryEthnicOriginDescriptorId" type="int" />
      <key-many-to-one name="StaffDemographic">
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicIdentificationDocument" table="StaffDemographicIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="StaffDemographic">
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicLanguage" table="StaffDemographicLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="StaffDemographic">
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffDemographicLanguageUses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicLanguageUse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicLanguageUse" table="StaffDemographicLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="StaffDemographicLanguage">
        <column name="LanguageDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicRace" table="StaffDemographicRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="StaffDemographic">
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicTribalAffiliation" table="StaffDemographicTribalAffiliation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" />
      <key-many-to-one name="StaffDemographic">
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDemographicAggregate.EdFi.StaffDemographicVisa" table="StaffDemographicVisa" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="VisaDescriptorId" column="VisaDescriptorId" type="int" />
      <key-many-to-one name="StaffDemographic">
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryReferenceData" table="StaffDirectory" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectory" table="StaffDirectory" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffDirectoryAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryAddress" />
    </set>

    <set name="StaffDirectoryElectronicMails" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryElectronicMail" />
    </set>

    <set name="StaffDirectoryInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryInternationalAddress" />
    </set>

    <set name="StaffDirectoryTelephones" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryTelephone" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryAddress" table="StaffDirectoryAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="StaffDirectory">
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffDirectoryAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryAddressPeriod" table="StaffDirectoryAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StaffDirectoryAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryElectronicMail" table="StaffDirectoryElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="StaffDirectory">
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryInternationalAddress" table="StaffDirectoryInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="StaffDirectory">
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDirectoryAggregate.EdFi.StaffDirectoryTelephone" table="StaffDirectoryTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="StaffDirectory">
        <column name="EducationOrganizationId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationReferenceData" table="StaffDisciplineIncidentAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string"  length="36"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociation" table="StaffDisciplineIncidentAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="36" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="DisciplineIncidentReferenceData" class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="IncidentIdentifier" />
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCode" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffDisciplineIncidentAssociationAggregate.EdFi.StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCode" table="StaffDisciplineIncidentAssociationDisciplineIncidentParticipationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" />
      <key-many-to-one name="StaffDisciplineIncidentAssociation">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationAssignmentAssociationAggregate.EdFi.StaffEducationOrganizationAssignmentAssociationReferenceData" table="StaffEducationOrganizationAssignmentAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationAssignmentAssociationAggregate.EdFi.StaffEducationOrganizationAssignmentAssociation" table="StaffEducationOrganizationAssignmentAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StaffClassificationDescriptorId" column="StaffClassificationDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="120" />
    <property name="EmploymentEducationOrganizationId" column="EmploymentEducationOrganizationId" type="long" />
    <property name="EmploymentHireDate" column="EmploymentHireDate" type="date" />
    <property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="FullTimeEquivalency" column="FullTimeEquivalency" type="decimal" />
    <property name="OrderOfAssignment" column="OrderOfAssignment" type="int" />
    <property name="PositionTitle" column="PositionTitle" type="string" length="100" />
    <property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />
    <property name="YearsOfExperienceAtCurrentEducationOrganization" column="YearsOfExperienceAtCurrentEducationOrganization" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="CredentialReferenceData" class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CredentialIdentifier" />
      <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="EmploymentStaffEducationOrganizationEmploymentAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EmploymentEducationOrganizationId" />
      <column name="EmploymentStatusDescriptorId" />
      <column name="EmploymentHireDate" />
      <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationReferenceData" table="StaffEducationOrganizationEmploymentAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int"  />
            <key-property name="HireDate" column="HireDate" type="date"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociation" table="StaffEducationOrganizationEmploymentAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EmploymentStatusDescriptorId" column="EmploymentStatusDescriptorId" type="int" />
      <key-property name="HireDate" column="HireDate" type="date" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AnnualWage" column="AnnualWage" type="Currency" />
    <property name="CredentialIdentifier" column="CredentialIdentifier" type="string" length="120" />
    <property name="Department" column="Department" type="string" length="60" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="FullTimeEquivalency" column="FullTimeEquivalency" type="decimal" />
    <property name="HourlyWage" column="HourlyWage" type="Currency" />
    <property name="LengthOfContractDescriptorId" column="LengthOfContractDescriptorId" type="int" />
    <property name="OfferDate" column="OfferDate" type="date" />
    <property name="ProbationCompleteDate" column="ProbationCompleteDate" type="date" />
    <property name="SeparationDescriptorId" column="SeparationDescriptorId" type="int" />
    <property name="SeparationReasonDescriptorId" column="SeparationReasonDescriptorId" type="int" />
    <property name="StateOfIssueStateAbbreviationDescriptorId" column="StateOfIssueStateAbbreviationDescriptorId" type="int" />
    <property name="Tenured" column="Tenured" type="bool" />
    <property name="TenureTrack" column="TenureTrack" type="bool" />

    <!-- One-to-one child mappings -->
    <set name="StaffEducationOrganizationEmploymentAssociationSalary" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EmploymentStatusDescriptorId" />
        <column name="HireDate" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationSalary" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="CredentialReferenceData" class="EdFi.Ods.Entities.NHibernate.CredentialAggregate.EdFi.CredentialReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CredentialIdentifier" />
      <column name="StateOfIssueStateAbbreviationDescriptorId" />
    </many-to-one>
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffEducationOrganizationEmploymentAssociationBackgroundChecks" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EmploymentStatusDescriptorId" />
        <column name="HireDate" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationBackgroundCheck" />
    </set>

    <set name="StaffEducationOrganizationEmploymentAssociationSeniorities" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="EmploymentStatusDescriptorId" />
        <column name="HireDate" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationSeniority" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationBackgroundCheck" table="StaffEducationOrganizationEmploymentAssociationBackgroundCheck" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BackgroundCheckTypeDescriptorId" column="BackgroundCheckTypeDescriptorId" type="int" />
      <key-many-to-one name="StaffEducationOrganizationEmploymentAssociation">
        <column name="EducationOrganizationId" />
        <column name="EmploymentStatusDescriptorId" />
        <column name="HireDate" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BackgroundCheckCompletedDate" column="BackgroundCheckCompletedDate" type="date" />
    <property name="BackgroundCheckRequestedDate" column="BackgroundCheckRequestedDate" type="date" not-null="true" />
    <property name="BackgroundCheckStatusDescriptorId" column="BackgroundCheckStatusDescriptorId" type="int" />
    <property name="Fingerprint" column="Fingerprint" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationSalary" table="StaffEducationOrganizationEmploymentAssociationSalary" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StaffEducationOrganizationEmploymentAssociation">
        <column name="EducationOrganizationId" />
        <column name="EmploymentStatusDescriptorId" />
        <column name="HireDate" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="SalaryAmount" column="SalaryAmount" type="decimal" />
    <property name="SalaryMaxRange" column="SalaryMaxRange" type="int" />
    <property name="SalaryMinRange" column="SalaryMinRange" type="int" />
    <property name="SalaryTypeDescriptorId" column="SalaryTypeDescriptorId" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducationOrganizationEmploymentAssociationAggregate.EdFi.StaffEducationOrganizationEmploymentAssociationSeniority" table="StaffEducationOrganizationEmploymentAssociationSeniority" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CredentialFieldDescriptorId" column="CredentialFieldDescriptorId" type="int" />
      <key-property name="NameOfInstitution" column="NameOfInstitution" type="string" length="75" />
      <key-many-to-one name="StaffEducationOrganizationEmploymentAssociation">
        <column name="EducationOrganizationId" />
        <column name="EmploymentStatusDescriptorId" />
        <column name="HireDate" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="YearsExperience" column="YearsExperience" type="decimal" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffEducatorPreparationProgramAssociationAggregate.EdFi.StaffEducatorPreparationProgramAssociationReferenceData" table="StaffEducatorPreparationProgramAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="255"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffEducatorPreparationProgramAssociationAggregate.EdFi.StaffEducatorPreparationProgramAssociation" table="StaffEducatorPreparationProgramAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="255" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BeginDate" column="BeginDate" type="date" not-null="true" />
    <property name="Completer" column="Completer" type="bool" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="EducatorPreparationProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.EducatorPreparationProgramAggregate.EdFi.EducatorPreparationProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffIdentityAggregate.EdFi.StaffIdentityReferenceData" table="StaffIdentity" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StaffIdentificationSystemDescriptorId" column="StaffIdentificationSystemDescriptorId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffIdentityAggregate.EdFi.StaffIdentity" table="StaffIdentity" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StaffIdentificationSystemDescriptorId" column="StaffIdentificationSystemDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffLeaveAggregate.EdFi.StaffLeaveReferenceData" table="StaffLeave" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="StaffLeaveEventCategoryDescriptorId" column="StaffLeaveEventCategoryDescriptorId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffLeaveAggregate.EdFi.StaffLeave" table="StaffLeave" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="StaffLeaveEventCategoryDescriptorId" column="StaffLeaveEventCategoryDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Reason" column="Reason" type="string" length="40" />
    <property name="SubstituteAssigned" column="SubstituteAssigned" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffProgramAssociationAggregate.EdFi.StaffProgramAssociationReferenceData" table="StaffProgramAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffProgramAssociationAggregate.EdFi.StaffProgramAssociation" table="StaffProgramAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />
    <property name="StudentRecordAccess" column="StudentRecordAccess" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationReferenceData" table="StaffSchoolAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociation" table="StaffSchoolAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramAssignmentDescriptorId" column="ProgramAssignmentDescriptorId" type="int" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CalendarCode" column="CalendarCode" type="string" length="120" />
    <property name="SchoolYear" column="SchoolYear" type="short" />

    <!-- Aggregate references -->
    <many-to-one name="CalendarReferenceData" class="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CalendarCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StaffSchoolAssociationAcademicSubjects" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationAcademicSubject" />
    </set>

    <set name="StaffSchoolAssociationGradeLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationGradeLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationAcademicSubject" table="StaffSchoolAssociationAcademicSubject" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicSubjectDescriptorId" column="AcademicSubjectDescriptorId" type="int" />
      <key-many-to-one name="StaffSchoolAssociation">
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffSchoolAssociationAggregate.EdFi.StaffSchoolAssociationGradeLevel" table="StaffSchoolAssociationGradeLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-many-to-one name="StaffSchoolAssociation">
        <column name="ProgramAssignmentDescriptorId" />
        <column name="SchoolId" />
        <column name="StaffUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StaffSectionAssociationAggregate.EdFi.StaffSectionAssociationReferenceData" table="StaffSectionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StaffSectionAssociationAggregate.EdFi.StaffSectionAssociation" table="StaffSectionAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ClassroomPositionDescriptorId" column="ClassroomPositionDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="HighlyQualifiedTeacher" column="HighlyQualifiedTeacher" type="bool" />
    <property name="PercentageContribution" column="PercentageContribution" type="decimal" />
    <property name="TeacherStudentDataLinkExclusion" column="TeacherStudentDataLinkExclusion" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StateEducationAgencyAggregate.EdFi.StateEducationAgencyAccountability" table="StateEducationAgencyAccountability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="StateEducationAgency">
        <column name="StateEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CTEGraduationRateInclusion" column="CTEGraduationRateInclusion" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StateEducationAgencyAggregate.EdFi.StateEducationAgencyFederalFunds" table="StateEducationAgencyFederalFunds" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="FiscalYear" column="FiscalYear" type="int" />
      <key-many-to-one name="StateEducationAgency">
        <column name="StateEducationAgencyId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FederalProgramsFundingAllocation" column="FederalProgramsFundingAllocation" type="Currency" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" table="Student" lazy="true" >
        <id name="StudentUSI" column="StudentUSI" type="int" >
            <generator class="identity" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.Student" table="Student" lazy="false" discriminator-value="null">
    <id name="StudentUSI" column="StudentUSI" type="int">
      <generator class="identity" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BirthCity" column="BirthCity" type="string" length="30" />
    <property name="BirthCountryDescriptorId" column="BirthCountryDescriptorId" type="int" />
    <property name="BirthDate" column="BirthDate" type="date" not-null="true" />
    <property name="BirthInternationalProvince" column="BirthInternationalProvince" type="string" length="150" />
    <property name="BirthSexDescriptorId" column="BirthSexDescriptorId" type="int" />
    <property name="BirthStateAbbreviationDescriptorId" column="BirthStateAbbreviationDescriptorId" type="int" />
    <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" />
    <property name="DateEnteredUS" column="DateEnteredUS" type="date" />
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MaidenName" column="MaidenName" type="string" length="75" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="MultipleBirthStatus" column="MultipleBirthStatus" type="bool" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="PreferredFirstName" column="PreferredFirstName" type="string" length="75" />
    <property name="PreferredLastSurname" column="PreferredLastSurname" type="string" length="75" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    <property name="StudentUniqueId" column="StudentUniqueId" type="string" length="32" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentIdentificationDocument" />
    </set>

    <set name="StudentOtherNames" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentOtherName" />
    </set>

    <set name="StudentPersonalIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentPersonalIdentificationDocument" />
    </set>

    <set name="StudentVisas" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentVisa" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentIdentificationDocument" table="StudentIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentOtherName" table="StudentOtherName" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="OtherNameTypeDescriptorId" column="OtherNameTypeDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="FirstName" column="FirstName" type="string" length="75" not-null="true" />
    <property name="GenerationCodeSuffix" column="GenerationCodeSuffix" type="string" length="10" />
    <property name="LastSurname" column="LastSurname" type="string" length="75" not-null="true" />
    <property name="MiddleName" column="MiddleName" type="string" length="75" />
    <property name="PersonalTitlePrefix" column="PersonalTitlePrefix" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentPersonalIdentificationDocument" table="StudentPersonalIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentVisa" table="StudentVisa" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="VisaDescriptorId" column="VisaDescriptorId" type="int" />
      <key-many-to-one name="Student">
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReferenceData" table="StudentAcademicRecord" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecord" table="StudentAcademicRecord" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CumulativeAttemptedCreditConversion" column="CumulativeAttemptedCreditConversion" type="decimal" />
    <property name="CumulativeAttemptedCredits" column="CumulativeAttemptedCredits" type="decimal" />
    <property name="CumulativeAttemptedCreditTypeDescriptorId" column="CumulativeAttemptedCreditTypeDescriptorId" type="int" />
    <property name="CumulativeEarnedCreditConversion" column="CumulativeEarnedCreditConversion" type="decimal" />
    <property name="CumulativeEarnedCredits" column="CumulativeEarnedCredits" type="decimal" />
    <property name="CumulativeEarnedCreditTypeDescriptorId" column="CumulativeEarnedCreditTypeDescriptorId" type="int" />
    <property name="ProjectedGraduationDate" column="ProjectedGraduationDate" type="date" />
    <property name="SessionAttemptedCreditConversion" column="SessionAttemptedCreditConversion" type="decimal" />
    <property name="SessionAttemptedCredits" column="SessionAttemptedCredits" type="decimal" />
    <property name="SessionAttemptedCreditTypeDescriptorId" column="SessionAttemptedCreditTypeDescriptorId" type="int" />
    <property name="SessionEarnedCreditConversion" column="SessionEarnedCreditConversion" type="decimal" />
    <property name="SessionEarnedCredits" column="SessionEarnedCredits" type="decimal" />
    <property name="SessionEarnedCreditTypeDescriptorId" column="SessionEarnedCreditTypeDescriptorId" type="int" />

    <!-- One-to-one child mappings -->
    <set name="StudentAcademicRecordClassRanking" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordClassRanking" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentAcademicRecordAcademicHonors" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordAcademicHonor" />
    </set>

    <set name="StudentAcademicRecordDiplomas" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordDiploma" />
    </set>

    <set name="StudentAcademicRecordGradePointAverages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordGradePointAverage" />
    </set>

    <set name="StudentAcademicRecordRecognitions" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordRecognition" />
    </set>

    <set name="StudentAcademicRecordReportCards" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReportCard" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordAcademicHonor" table="StudentAcademicRecordAcademicHonor" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AcademicHonorCategoryDescriptorId" column="AcademicHonorCategoryDescriptorId" type="int" />
      <key-property name="HonorDescription" column="HonorDescription" type="string" length="80" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="HonorAwardDate" column="HonorAwardDate" type="date" />
    <property name="HonorAwardExpiresDate" column="HonorAwardExpiresDate" type="date" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordClassRanking" table="StudentAcademicRecordClassRanking" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ClassRank" column="ClassRank" type="int" not-null="true" />
    <property name="ClassRankingDate" column="ClassRankingDate" type="date" />
    <property name="PercentageRanking" column="PercentageRanking" type="int" />
    <property name="TotalNumberInClass" column="TotalNumberInClass" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordDiploma" table="StudentAcademicRecordDiploma" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiplomaAwardDate" column="DiplomaAwardDate" type="date" />
      <key-property name="DiplomaTypeDescriptorId" column="DiplomaTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="CTECompleter" column="CTECompleter" type="bool" />
    <property name="DiplomaAwardExpiresDate" column="DiplomaAwardExpiresDate" type="date" />
    <property name="DiplomaDescription" column="DiplomaDescription" type="string" length="80" />
    <property name="DiplomaLevelDescriptorId" column="DiplomaLevelDescriptorId" type="int" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordGradePointAverage" table="StudentAcademicRecordGradePointAverage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradePointAverageTypeDescriptorId" column="GradePointAverageTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="GradePointAverageValue" column="GradePointAverageValue" type="decimal" not-null="true" />
    <property name="IsCumulative" column="IsCumulative" type="bool" />
    <property name="MaxGradePointAverageValue" column="MaxGradePointAverageValue" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordRecognition" table="StudentAcademicRecordRecognition" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RecognitionTypeDescriptorId" column="RecognitionTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AchievementCategoryDescriptorId" column="AchievementCategoryDescriptorId" type="int" />
    <property name="AchievementCategorySystem" column="AchievementCategorySystem" type="string" length="60" />
    <property name="AchievementTitle" column="AchievementTitle" type="string" length="60" />
    <property name="Criteria" column="Criteria" type="string" length="150" />
    <property name="CriteriaURL" column="CriteriaURL" type="string" length="255" />
    <property name="EvidenceStatement" column="EvidenceStatement" type="string" length="150" />
    <property name="ImageURL" column="ImageURL" type="string" length="255" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />
    <property name="IssuerOriginURL" column="IssuerOriginURL" type="string" length="255" />
    <property name="RecognitionAwardDate" column="RecognitionAwardDate" type="date" />
    <property name="RecognitionAwardExpiresDate" column="RecognitionAwardExpiresDate" type="date" />
    <property name="RecognitionDescription" column="RecognitionDescription" type="string" length="80" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.EdFi.StudentAcademicRecordReportCard" table="StudentAcademicRecordReportCard" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodName" column="GradingPeriodName" type="string" length="60" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="long" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ReportCardReferenceData" class="EdFi.Ods.Entities.NHibernate.ReportCardAggregate.EdFi.ReportCardReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodName" />
      <column name="GradingPeriodSchoolId" />
      <column name="GradingPeriodSchoolYear" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentReferenceData" table="StudentAssessment" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StudentAssessmentIdentifier" column="StudentAssessmentIdentifier" type="string"  length="120"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessment" table="StudentAssessment" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StudentAssessmentIdentifier" column="StudentAssessmentIdentifier" type="string" length="120" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AdministrationDate" column="AdministrationDate" type="UtcDateTime" />
    <property name="AdministrationEndDate" column="AdministrationEndDate" type="UtcDateTime" />
    <property name="AdministrationEnvironmentDescriptorId" column="AdministrationEnvironmentDescriptorId" type="int" />
    <property name="AdministrationLanguageDescriptorId" column="AdministrationLanguageDescriptorId" type="int" />
    <property name="AssessedMinutes" column="AssessedMinutes" type="int" />
    <property name="EventCircumstanceDescriptorId" column="EventCircumstanceDescriptorId" type="int" />
    <property name="EventDescription" column="EventDescription" type="string" length="1024" />
    <property name="PlatformTypeDescriptorId" column="PlatformTypeDescriptorId" type="int" />
    <property name="ReasonNotTestedDescriptorId" column="ReasonNotTestedDescriptorId" type="int" />
    <property name="ReportedSchoolId" column="ReportedSchoolId" type="long" />
    <property name="ReportedSchoolIdentifier" column="ReportedSchoolIdentifier" type="string" length="60" />
    <property name="RetestIndicatorDescriptorId" column="RetestIndicatorDescriptorId" type="int" />
    <property name="SchoolYear" column="SchoolYear" type="short" />
    <property name="SerialNumber" column="SerialNumber" type="string" length="120" />
    <property name="WhenAssessedGradeLevelDescriptorId" column="WhenAssessedGradeLevelDescriptorId" type="int" />

    <!-- One-to-one child mappings -->
    <set name="StudentAssessmentPeriod" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentPeriod" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="AssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAggregate.EdFi.AssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="ReportedSchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ReportedSchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentAssessmentAccommodations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentAccommodation" />
    </set>

    <set name="StudentAssessmentItems" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentItem" />
    </set>

    <set name="StudentAssessmentPerformanceLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentPerformanceLevel" />
    </set>

    <set name="StudentAssessmentScoreResults" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentScoreResult" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessment" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentAccommodation" table="StudentAssessmentAccommodation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccommodationDescriptorId" column="AccommodationDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentItem" table="StudentAssessmentItem" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="120" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssessmentItemResultDescriptorId" column="AssessmentItemResultDescriptorId" type="int" not-null="true" />
    <property name="AssessmentResponse" column="AssessmentResponse" type="string" length="255" />
    <property name="DescriptiveFeedback" column="DescriptiveFeedback" type="string" length="1024" />
    <property name="ItemNumber" column="ItemNumber" type="int" />
    <property name="RawScoreResult" column="RawScoreResult" type="decimal" />
    <property name="ResponseIndicatorDescriptorId" column="ResponseIndicatorDescriptorId" type="int" />
    <property name="TimeAssessed" column="TimeAssessed" type="string" length="30" />

    <!-- Aggregate references -->
    <many-to-one name="AssessmentItemReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentItemAggregate.EdFi.AssessmentItemReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="IdentificationCode" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentPerformanceLevel" table="StudentAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PerformanceLevelIndicatorName" column="PerformanceLevelIndicatorName" type="string" length="60" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentPeriod" table="StudentAssessmentPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AssessmentPeriodDescriptorId" column="AssessmentPeriodDescriptorId" type="int" not-null="true" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentScoreResult" table="StudentAssessmentScoreResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Result" column="Result" type="string" length="35" not-null="true" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessment" table="StudentAssessmentStudentObjectiveAssessment" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationCode" column="IdentificationCode" type="string" length="120" />
      <key-many-to-one name="StudentAssessment">
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AdministrationDate" column="AdministrationDate" type="UtcDateTime" />
    <property name="AdministrationEndDate" column="AdministrationEndDate" type="UtcDateTime" />
    <property name="AssessedMinutes" column="AssessedMinutes" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ObjectiveAssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.ObjectiveAssessmentAggregate.EdFi.ObjectiveAssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="IdentificationCode" />
      <column name="Namespace" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentAssessmentStudentObjectiveAssessmentPerformanceLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevel" />
    </set>

    <set name="StudentAssessmentStudentObjectiveAssessmentScoreResults" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentScoreResult" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentPerformanceLevel" table="StudentAssessmentStudentObjectiveAssessmentPerformanceLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-property name="PerformanceLevelDescriptorId" column="PerformanceLevelDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessmentStudentObjectiveAssessment">
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PerformanceLevelIndicatorName" column="PerformanceLevelIndicatorName" type="string" length="60" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentStudentObjectiveAssessmentScoreResult" table="StudentAssessmentStudentObjectiveAssessmentScoreResult" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentReportingMethodDescriptorId" column="AssessmentReportingMethodDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessmentStudentObjectiveAssessment">
        <column name="IdentificationCode" />
        <column name="AssessmentIdentifier" />
        <column name="Namespace" />
        <column name="StudentAssessmentIdentifier" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Result" column="Result" type="string" length="35" not-null="true" />
    <property name="ResultDatatypeTypeDescriptorId" column="ResultDatatypeTypeDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentEducationOrganizationAssociationAggregate.EdFi.StudentAssessmentEducationOrganizationAssociationReferenceData" table="StudentAssessmentEducationOrganizationAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="EducationOrganizationAssociationTypeDescriptorId" column="EducationOrganizationAssociationTypeDescriptorId" type="int"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StudentAssessmentIdentifier" column="StudentAssessmentIdentifier" type="string"  length="120"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentEducationOrganizationAssociationAggregate.EdFi.StudentAssessmentEducationOrganizationAssociation" table="StudentAssessmentEducationOrganizationAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="EducationOrganizationAssociationTypeDescriptorId" column="EducationOrganizationAssociationTypeDescriptorId" type="int" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StudentAssessmentIdentifier" column="StudentAssessmentIdentifier" type="string" length="120" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="SchoolYear" column="SchoolYear" type="short" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="StudentAssessmentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAssessmentAggregate.EdFi.StudentAssessmentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
      <column name="StudentAssessmentIdentifier" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationAggregate.EdFi.StudentAssessmentRegistrationReferenceData" table="StudentAssessmentRegistration" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AdministrationIdentifier" column="AdministrationIdentifier" type="string"  length="255"  />
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="AssigningEducationOrganizationId" column="AssigningEducationOrganizationId" type="long"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationAggregate.EdFi.StudentAssessmentRegistration" table="StudentAssessmentRegistration" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AdministrationIdentifier" column="AdministrationIdentifier" type="string" length="255" />
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="AssigningEducationOrganizationId" column="AssigningEducationOrganizationId" type="long" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AssessmentGradeLevelDescriptorId" column="AssessmentGradeLevelDescriptorId" type="int" />
    <property name="EntryDate" column="EntryDate" type="date" not-null="true" />
    <property name="PlatformTypeDescriptorId" column="PlatformTypeDescriptorId" type="int" />
    <property name="ReportingEducationOrganizationId" column="ReportingEducationOrganizationId" type="long" />
    <property name="ScheduledEducationOrganizationId" column="ScheduledEducationOrganizationId" type="long" />
    <property name="ScheduledStudentUSI" column="ScheduledStudentUSI" type="int" />
    <property name="SchoolId" column="SchoolId" type="long" not-null="true" />
    <property name="TestingEducationOrganizationId" column="TestingEducationOrganizationId" type="long" />

    <!-- Aggregate references -->
    <many-to-one name="AssessmentAdministrationReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentAdministrationAggregate.EdFi.AssessmentAdministrationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AdministrationIdentifier" />
      <column name="AssessmentIdentifier" />
      <column name="AssigningEducationOrganizationId" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="ReportingEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ReportingEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ScheduledStudentEducationOrganizationAssessmentAccommodationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssessmentAccommodationAggregate.EdFi.StudentEducationOrganizationAssessmentAccommodationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ScheduledEducationOrganizationId" />
      <column name="ScheduledStudentUSI" />
    </many-to-one>
    <many-to-one name="StudentDemographicReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="StudentUSI" />
    </many-to-one>
    <many-to-one name="StudentSchoolAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EntryDate" />
      <column name="SchoolId" />
      <column name="StudentUSI" />
    </many-to-one>
    <many-to-one name="TestingEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="TestingEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentAssessmentRegistrationAssessmentAccommodations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AdministrationIdentifier" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationAggregate.EdFi.StudentAssessmentRegistrationAssessmentAccommodation" />
    </set>

    <set name="StudentAssessmentRegistrationAssessmentCustomizations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AdministrationIdentifier" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationAggregate.EdFi.StudentAssessmentRegistrationAssessmentCustomization" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationAggregate.EdFi.StudentAssessmentRegistrationAssessmentAccommodation" table="StudentAssessmentRegistrationAssessmentAccommodation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccommodationDescriptorId" column="AccommodationDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessmentRegistration">
        <column name="AdministrationIdentifier" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationAggregate.EdFi.StudentAssessmentRegistrationAssessmentCustomization" table="StudentAssessmentRegistrationAssessmentCustomization" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CustomizationKey" column="CustomizationKey" type="string" length="60" />
      <key-many-to-one name="StudentAssessmentRegistration">
        <column name="AdministrationIdentifier" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CustomizationValue" column="CustomizationValue" type="string" length="1024" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationBatteryPartAssociationAggregate.EdFi.StudentAssessmentRegistrationBatteryPartAssociationReferenceData" table="StudentAssessmentRegistrationBatteryPartAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AdministrationIdentifier" column="AdministrationIdentifier" type="string"  length="255"  />
            <key-property name="AssessmentBatteryPartName" column="AssessmentBatteryPartName" type="string"  length="65"  />
            <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string"  length="120"  />
            <key-property name="AssigningEducationOrganizationId" column="AssigningEducationOrganizationId" type="long"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationBatteryPartAssociationAggregate.EdFi.StudentAssessmentRegistrationBatteryPartAssociation" table="StudentAssessmentRegistrationBatteryPartAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AdministrationIdentifier" column="AdministrationIdentifier" type="string" length="255" />
      <key-property name="AssessmentBatteryPartName" column="AssessmentBatteryPartName" type="string" length="65" />
      <key-property name="AssessmentIdentifier" column="AssessmentIdentifier" type="string" length="120" />
      <key-property name="AssigningEducationOrganizationId" column="AssigningEducationOrganizationId" type="long" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AssessmentBatteryPartReferenceData" class="EdFi.Ods.Entities.NHibernate.AssessmentBatteryPartAggregate.EdFi.AssessmentBatteryPartReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AssessmentBatteryPartName" />
      <column name="AssessmentIdentifier" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="StudentAssessmentRegistrationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationAggregate.EdFi.StudentAssessmentRegistrationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AdministrationIdentifier" />
      <column name="AssessmentIdentifier" />
      <column name="AssigningEducationOrganizationId" />
      <column name="EducationOrganizationId" />
      <column name="Namespace" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentAssessmentRegistrationBatteryPartAssociationAccommodations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AdministrationIdentifier" />
        <column name="AssessmentBatteryPartName" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationBatteryPartAssociationAggregate.EdFi.StudentAssessmentRegistrationBatteryPartAssociationAccommodation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAssessmentRegistrationBatteryPartAssociationAggregate.EdFi.StudentAssessmentRegistrationBatteryPartAssociationAccommodation" table="StudentAssessmentRegistrationBatteryPartAssociationAccommodation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccommodationDescriptorId" column="AccommodationDescriptorId" type="int" />
      <key-many-to-one name="StudentAssessmentRegistrationBatteryPartAssociation">
        <column name="AdministrationIdentifier" />
        <column name="AssessmentBatteryPartName" />
        <column name="AssessmentIdentifier" />
        <column name="AssigningEducationOrganizationId" />
        <column name="EducationOrganizationId" />
        <column name="Namespace" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationReferenceData" table="StudentCohortAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="CohortIdentifier" column="CohortIdentifier" type="string"  length="36"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociation" table="StudentCohortAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="CohortIdentifier" column="CohortIdentifier" type="string" length="36" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="CohortReferenceData" class="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CohortIdentifier" />
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentCohortAssociationSections" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationSection" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCohortAssociationAggregate.EdFi.StudentCohortAssociationSection" table="StudentCohortAssociationSection" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-many-to-one name="StudentCohortAssociation">
        <column name="BeginDate" />
        <column name="CohortIdentifier" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveReferenceData" table="StudentCompetencyObjective" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int"  />
            <key-property name="GradingPeriodName" column="GradingPeriodName" type="string"  length="60"  />
            <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="long"  />
            <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short"  />
            <key-property name="Objective" column="Objective" type="string"  length="60"  />
            <key-property name="ObjectiveEducationOrganizationId" column="ObjectiveEducationOrganizationId" type="long"  />
            <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjective" table="StudentCompetencyObjective" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradingPeriodDescriptorId" column="GradingPeriodDescriptorId" type="int" />
      <key-property name="GradingPeriodName" column="GradingPeriodName" type="string" length="60" />
      <key-property name="GradingPeriodSchoolId" column="GradingPeriodSchoolId" type="long" />
      <key-property name="GradingPeriodSchoolYear" column="GradingPeriodSchoolYear" type="short" />
      <key-property name="Objective" column="Objective" type="string" length="60" />
      <key-property name="ObjectiveEducationOrganizationId" column="ObjectiveEducationOrganizationId" type="long" />
      <key-property name="ObjectiveGradeLevelDescriptorId" column="ObjectiveGradeLevelDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" not-null="true" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />

    <!-- Aggregate references -->
    <many-to-one name="GradingPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.GradingPeriodAggregate.EdFi.GradingPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradingPeriodDescriptorId" />
      <column name="GradingPeriodName" />
      <column name="GradingPeriodSchoolId" />
      <column name="GradingPeriodSchoolYear" />
    </many-to-one>
    <many-to-one name="ObjectiveCompetencyObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.CompetencyObjectiveAggregate.EdFi.CompetencyObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ObjectiveEducationOrganizationId" />
      <column name="Objective" />
      <column name="ObjectiveGradeLevelDescriptorId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentCompetencyObjectiveGeneralStudentProgramAssociations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveGeneralStudentProgramAssociation" />
    </set>

    <set name="StudentCompetencyObjectiveStudentSectionAssociations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveStudentSectionAssociation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveGeneralStudentProgramAssociation" table="StudentCompetencyObjectiveGeneralStudentProgramAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentCompetencyObjective">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="GeneralStudentProgramAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.GeneralStudentProgramAssociationAggregate.EdFi.GeneralStudentProgramAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="EducationOrganizationId" />
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCompetencyObjectiveAggregate.EdFi.StudentCompetencyObjectiveStudentSectionAssociation" table="StudentCompetencyObjectiveStudentSectionAssociation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-many-to-one name="StudentCompetencyObjective">
        <column name="GradingPeriodDescriptorId" />
        <column name="GradingPeriodName" />
        <column name="GradingPeriodSchoolId" />
        <column name="GradingPeriodSchoolYear" />
        <column name="Objective" />
        <column name="ObjectiveEducationOrganizationId" />
        <column name="ObjectiveGradeLevelDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StudentSectionAssociationReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="BeginDate" />
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentContactAssociationAggregate.EdFi.StudentContactAssociationReferenceData" table="StudentContactAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ContactUSI" column="ContactUSI" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentContactAssociationAggregate.EdFi.StudentContactAssociation" table="StudentContactAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ContactUSI" column="ContactUSI" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ContactPriority" column="ContactPriority" type="int" />
    <property name="ContactRestrictions" column="ContactRestrictions" type="string" length="250" />
    <property name="EmergencyContactStatus" column="EmergencyContactStatus" type="bool" />
    <property name="LegalGuardian" column="LegalGuardian" type="bool" />
    <property name="LivesWith" column="LivesWith" type="bool" />
    <property name="PrimaryContactStatus" column="PrimaryContactStatus" type="bool" />
    <property name="RelationDescriptorId" column="RelationDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ContactReferenceData" class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ContactUSI" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentCTEProgramAssociationAggregate.EdFi.StudentCTEProgramAssociationCTEProgramService" table="StudentCTEProgramAssociationCTEProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CTEProgramServiceDescriptorId" column="CTEProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentCTEProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CIPCode" column="CIPCode" type="string" length="120" />
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicReferenceData" table="StudentDemographic" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographic" table="StudentDemographic" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CitizenshipStatusDescriptorId" column="CitizenshipStatusDescriptorId" type="int" />
    <property name="EconomicDisadvantageDescriptorId" column="EconomicDisadvantageDescriptorId" type="int" />
    <property name="GenderIdentity" column="GenderIdentity" type="string" length="60" />
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="LimitedEnglishProficiencyDescriptorId" column="LimitedEnglishProficiencyDescriptorId" type="int" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />
    <property name="SupporterMilitaryConnectionDescriptorId" column="SupporterMilitaryConnectionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentDemographicAncestryEthnicOrigins" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicAncestryEthnicOrigin" />
    </set>

    <set name="StudentDemographicDisabilities" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicDisability" />
    </set>

    <set name="StudentDemographicIdentificationDocuments" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicIdentificationDocument" />
    </set>

    <set name="StudentDemographicLanguages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicLanguage" />
    </set>

    <set name="StudentDemographicRaces" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicRace" />
    </set>

    <set name="StudentDemographicTribalAffiliations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicTribalAffiliation" />
    </set>

    <set name="StudentDemographicVisas" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicVisa" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicAncestryEthnicOrigin" table="StudentDemographicAncestryEthnicOrigin" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AncestryEthnicOriginDescriptorId" column="AncestryEthnicOriginDescriptorId" type="int" />
      <key-many-to-one name="StudentDemographic">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicDisability" table="StudentDemographicDisability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" />
      <key-many-to-one name="StudentDemographic">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" />
    <property name="DisabilityDiagnosis" column="DisabilityDiagnosis" type="string" length="80" />
    <property name="OrderOfDisability" column="OrderOfDisability" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentDemographicDisabilityDesignations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="DisabilityDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicDisabilityDesignation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicDisabilityDesignation" table="StudentDemographicDisabilityDesignation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" />
      <key-many-to-one name="StudentDemographicDisability">
        <column name="DisabilityDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicIdentificationDocument" table="StudentDemographicIdentificationDocument" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IdentificationDocumentUseDescriptorId" column="IdentificationDocumentUseDescriptorId" type="int" />
      <key-property name="PersonalInformationVerificationDescriptorId" column="PersonalInformationVerificationDescriptorId" type="int" />
      <key-many-to-one name="StudentDemographic">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DocumentExpirationDate" column="DocumentExpirationDate" type="date" />
    <property name="DocumentTitle" column="DocumentTitle" type="string" length="60" />
    <property name="IssuerCountryDescriptorId" column="IssuerCountryDescriptorId" type="int" />
    <property name="IssuerDocumentIdentificationCode" column="IssuerDocumentIdentificationCode" type="string" length="120" />
    <property name="IssuerName" column="IssuerName" type="string" length="150" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicLanguage" table="StudentDemographicLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="StudentDemographic">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentDemographicLanguageUses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicLanguageUse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicLanguageUse" table="StudentDemographicLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="StudentDemographicLanguage">
        <column name="LanguageDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicRace" table="StudentDemographicRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="StudentDemographic">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicTribalAffiliation" table="StudentDemographicTribalAffiliation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" />
      <key-many-to-one name="StudentDemographic">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDemographicAggregate.EdFi.StudentDemographicVisa" table="StudentDemographicVisa" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="VisaDescriptorId" column="VisaDescriptorId" type="int" />
      <key-many-to-one name="StudentDemographic">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryReferenceData" table="StudentDirectory" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectory" table="StudentDirectory" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentDirectoryAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryAddress" />
    </set>

    <set name="StudentDirectoryElectronicMails" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryElectronicMail" />
    </set>

    <set name="StudentDirectoryInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryInternationalAddress" />
    </set>

    <set name="StudentDirectoryTelephones" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryTelephone" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryAddress" table="StudentDirectoryAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="StudentDirectory">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentDirectoryAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryAddressPeriod" table="StudentDirectoryAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentDirectoryAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryElectronicMail" table="StudentDirectoryElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentDirectory">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryInternationalAddress" table="StudentDirectoryInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentDirectory">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDirectoryAggregate.EdFi.StudentDirectoryTelephone" table="StudentDirectoryTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentDirectory">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentBehaviorAssociationAggregate.EdFi.StudentDisciplineIncidentBehaviorAssociationReferenceData" table="StudentDisciplineIncidentBehaviorAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int"  />
            <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string"  length="36"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentBehaviorAssociationAggregate.EdFi.StudentDisciplineIncidentBehaviorAssociation" table="StudentDisciplineIncidentBehaviorAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BehaviorDescriptorId" column="BehaviorDescriptorId" type="int" />
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="36" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BehaviorDetailedDescription" column="BehaviorDetailedDescription" type="string" length="1024" />

    <!-- Aggregate references -->
    <many-to-one name="DisciplineIncidentReferenceData" class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="IncidentIdentifier" />
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BehaviorDescriptorId" />
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentBehaviorAssociationAggregate.EdFi.StudentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCode" />
    </set>

    <set name="StudentDisciplineIncidentBehaviorAssociationWeapons" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BehaviorDescriptorId" />
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentBehaviorAssociationAggregate.EdFi.StudentDisciplineIncidentBehaviorAssociationWeapon" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentBehaviorAssociationAggregate.EdFi.StudentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCode" table="StudentDisciplineIncidentBehaviorAssociationDisciplineIncidentParticipationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" />
      <key-many-to-one name="StudentDisciplineIncidentBehaviorAssociation">
        <column name="BehaviorDescriptorId" />
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentBehaviorAssociationAggregate.EdFi.StudentDisciplineIncidentBehaviorAssociationWeapon" table="StudentDisciplineIncidentBehaviorAssociationWeapon" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="WeaponDescriptorId" column="WeaponDescriptorId" type="int" />
      <key-many-to-one name="StudentDisciplineIncidentBehaviorAssociation">
        <column name="BehaviorDescriptorId" />
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentNonOffenderAssociationAggregate.EdFi.StudentDisciplineIncidentNonOffenderAssociationReferenceData" table="StudentDisciplineIncidentNonOffenderAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string"  length="36"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentNonOffenderAssociationAggregate.EdFi.StudentDisciplineIncidentNonOffenderAssociation" table="StudentDisciplineIncidentNonOffenderAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IncidentIdentifier" column="IncidentIdentifier" type="string" length="36" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="DisciplineIncidentReferenceData" class="EdFi.Ods.Entities.NHibernate.DisciplineIncidentAggregate.EdFi.DisciplineIncidentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="IncidentIdentifier" />
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentDisciplineIncidentNonOffenderAssociationDisciplineIncidentParticipationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentNonOffenderAssociationAggregate.EdFi.StudentDisciplineIncidentNonOffenderAssociationDisciplineIncidentParticipationCode" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentDisciplineIncidentNonOffenderAssociationAggregate.EdFi.StudentDisciplineIncidentNonOffenderAssociationDisciplineIncidentParticipationCode" table="StudentDisciplineIncidentNonOffenderAssociationDisciplineIncidentParticipationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisciplineIncidentParticipationCodeDescriptorId" column="DisciplineIncidentParticipationCodeDescriptorId" type="int" />
      <key-many-to-one name="StudentDisciplineIncidentNonOffenderAssociation">
        <column name="IncidentIdentifier" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssessmentAccommodationAggregate.EdFi.StudentEducationOrganizationAssessmentAccommodationReferenceData" table="StudentEducationOrganizationAssessmentAccommodation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssessmentAccommodationAggregate.EdFi.StudentEducationOrganizationAssessmentAccommodation" table="StudentEducationOrganizationAssessmentAccommodation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssessmentAccommodationGeneralAccommodations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssessmentAccommodationAggregate.EdFi.StudentEducationOrganizationAssessmentAccommodationGeneralAccommodation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssessmentAccommodationAggregate.EdFi.StudentEducationOrganizationAssessmentAccommodationGeneralAccommodation" table="StudentEducationOrganizationAssessmentAccommodationGeneralAccommodation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AccommodationDescriptorId" column="AccommodationDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssessmentAccommodation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationReferenceData" table="StudentEducationOrganizationAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociation" table="StudentEducationOrganizationAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="BarrierToInternetAccessInResidenceDescriptorId" column="BarrierToInternetAccessInResidenceDescriptorId" type="int" />
    <property name="GenderIdentity" column="GenderIdentity" type="string" length="60" />
    <property name="HispanicLatinoEthnicity" column="HispanicLatinoEthnicity" type="bool" />
    <property name="InternetAccessInResidence" column="InternetAccessInResidence" type="bool" />
    <property name="InternetAccessTypeInResidenceDescriptorId" column="InternetAccessTypeInResidenceDescriptorId" type="int" />
    <property name="InternetPerformanceInResidenceDescriptorId" column="InternetPerformanceInResidenceDescriptorId" type="int" />
    <property name="LimitedEnglishProficiencyDescriptorId" column="LimitedEnglishProficiencyDescriptorId" type="int" />
    <property name="LoginId" column="LoginId" type="string" length="120" />
    <property name="PrimaryLearningDeviceAccessDescriptorId" column="PrimaryLearningDeviceAccessDescriptorId" type="int" />
    <property name="PrimaryLearningDeviceAwayFromSchoolDescriptorId" column="PrimaryLearningDeviceAwayFromSchoolDescriptorId" type="int" />
    <property name="PrimaryLearningDeviceProviderDescriptorId" column="PrimaryLearningDeviceProviderDescriptorId" type="int" />
    <property name="ProfileThumbnail" column="ProfileThumbnail" type="string" length="255" />
    <property name="SexDescriptorId" column="SexDescriptorId" type="int" />
    <property name="SupporterMilitaryConnectionDescriptorId" column="SupporterMilitaryConnectionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddress" />
    </set>

    <set name="StudentEducationOrganizationAssociationAncestryEthnicOrigins" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAncestryEthnicOrigin" />
    </set>

    <set name="StudentEducationOrganizationAssociationCohortYears" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationCohortYear" />
    </set>

    <set name="StudentEducationOrganizationAssociationDisabilities" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisability" />
    </set>

    <set name="StudentEducationOrganizationAssociationDisplacedStudents" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisplacedStudent" />
    </set>

    <set name="StudentEducationOrganizationAssociationElectronicMails" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationElectronicMail" />
    </set>

    <set name="StudentEducationOrganizationAssociationInternationalAddresses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationInternationalAddress" />
    </set>

    <set name="StudentEducationOrganizationAssociationLanguages" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguage" />
    </set>

    <set name="StudentEducationOrganizationAssociationRaces" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationRace" />
    </set>

    <set name="StudentEducationOrganizationAssociationStudentCharacteristics" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristic" />
    </set>

    <set name="StudentEducationOrganizationAssociationStudentIdentificationCodes" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIdentificationCode" />
    </set>

    <set name="StudentEducationOrganizationAssociationStudentIndicators" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicator" />
    </set>

    <set name="StudentEducationOrganizationAssociationTelephones" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTelephone" />
    </set>

    <set name="StudentEducationOrganizationAssociationTribalAffiliations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTribalAffiliation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddress" table="StudentEducationOrganizationAssociationAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-property name="City" column="City" type="string" length="30" />
      <key-property name="PostalCode" column="PostalCode" type="string" length="17" />
      <key-property name="StateAbbreviationDescriptorId" column="StateAbbreviationDescriptorId" type="int" />
      <key-property name="StreetNumberName" column="StreetNumberName" type="string" length="150" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ApartmentRoomSuiteNumber" column="ApartmentRoomSuiteNumber" type="string" length="50" />
    <property name="BuildingSiteNumber" column="BuildingSiteNumber" type="string" length="20" />
    <property name="CongressionalDistrict" column="CongressionalDistrict" type="string" length="30" />
    <property name="CountyFIPSCode" column="CountyFIPSCode" type="string" length="5" />
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="LocaleDescriptorId" column="LocaleDescriptorId" type="int" />
    <property name="Longitude" column="Longitude" type="string" length="20" />
    <property name="NameOfCounty" column="NameOfCounty" type="string" length="30" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationAddressPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAddressPeriod" table="StudentEducationOrganizationAssociationAddressPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentEducationOrganizationAssociationAddress">
        <column name="AddressTypeDescriptorId" />
        <column name="City" />
        <column name="PostalCode" />
        <column name="StateAbbreviationDescriptorId" />
        <column name="StreetNumberName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationAncestryEthnicOrigin" table="StudentEducationOrganizationAssociationAncestryEthnicOrigin" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AncestryEthnicOriginDescriptorId" column="AncestryEthnicOriginDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationCohortYear" table="StudentEducationOrganizationAssociationCohortYear" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CohortYearTypeDescriptorId" column="CohortYearTypeDescriptorId" type="int" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="TermDescriptorId" column="TermDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisability" table="StudentEducationOrganizationAssociationDisability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" />
    <property name="DisabilityDiagnosis" column="DisabilityDiagnosis" type="string" length="80" />
    <property name="OrderOfDisability" column="OrderOfDisability" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationDisabilityDesignations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="DisabilityDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityDesignation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisabilityDesignation" table="StudentEducationOrganizationAssociationDisabilityDesignation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociationDisability">
        <column name="DisabilityDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationDisplacedStudent" table="StudentEducationOrganizationAssociationDisplacedStudent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CrisisEventName" column="CrisisEventName" type="string" length="100" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="CrisisHomelessnessIndicator" column="CrisisHomelessnessIndicator" type="bool" />
    <property name="DisplacedStudentEndDate" column="DisplacedStudentEndDate" type="date" />
    <property name="DisplacedStudentStartDate" column="DisplacedStudentStartDate" type="date" />
    <property name="DisplacedStudentStatusDescriptorId" column="DisplacedStudentStatusDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="CrisisEventReferenceData" class="EdFi.Ods.Entities.NHibernate.CrisisEventAggregate.EdFi.CrisisEventReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CrisisEventName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationElectronicMail" table="StudentEducationOrganizationAssociationElectronicMail" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
      <key-property name="ElectronicMailTypeDescriptorId" column="ElectronicMailTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="PrimaryEmailAddressIndicator" column="PrimaryEmailAddressIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationInternationalAddress" table="StudentEducationOrganizationAssociationInternationalAddress" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AddressTypeDescriptorId" column="AddressTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="AddressLine1" column="AddressLine1" type="string" length="150" not-null="true" />
    <property name="AddressLine2" column="AddressLine2" type="string" length="150" />
    <property name="AddressLine3" column="AddressLine3" type="string" length="150" />
    <property name="AddressLine4" column="AddressLine4" type="string" length="150" />
    <property name="BeginDate" column="BeginDate" type="date" />
    <property name="CountryDescriptorId" column="CountryDescriptorId" type="int" not-null="true" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="Latitude" column="Latitude" type="string" length="20" />
    <property name="Longitude" column="Longitude" type="string" length="20" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguage" table="StudentEducationOrganizationAssociationLanguage" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageDescriptorId" column="LanguageDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationLanguageUses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="LanguageDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguageUse" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationLanguageUse" table="StudentEducationOrganizationAssociationLanguageUse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageUseDescriptorId" column="LanguageUseDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociationLanguage">
        <column name="LanguageDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationRace" table="StudentEducationOrganizationAssociationRace" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="RaceDescriptorId" column="RaceDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristic" table="StudentEducationOrganizationAssociationStudentCharacteristic" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StudentCharacteristicDescriptorId" column="StudentCharacteristicDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationStudentCharacteristicPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StudentCharacteristicDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristicPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentCharacteristicPeriod" table="StudentEducationOrganizationAssociationStudentCharacteristicPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentEducationOrganizationAssociationStudentCharacteristic">
        <column name="StudentCharacteristicDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIdentificationCode" table="StudentEducationOrganizationAssociationStudentIdentificationCode" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="120" />
      <key-property name="StudentIdentificationSystemDescriptorId" column="StudentIdentificationSystemDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicator" table="StudentEducationOrganizationAssociationStudentIndicator" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="IndicatorName" column="IndicatorName" type="string" length="200" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DesignatedBy" column="DesignatedBy" type="string" length="60" />
    <property name="Indicator" column="Indicator" type="string" length="60" not-null="true" />
    <property name="IndicatorGroup" column="IndicatorGroup" type="string" length="200" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentEducationOrganizationAssociationStudentIndicatorPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="IndicatorName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicatorPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationStudentIndicatorPeriod" table="StudentEducationOrganizationAssociationStudentIndicatorPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentEducationOrganizationAssociationStudentIndicator">
        <column name="IndicatorName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTelephone" table="StudentEducationOrganizationAssociationTelephone" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TelephoneNumber" column="TelephoneNumber" type="string" length="24" />
      <key-property name="TelephoneNumberTypeDescriptorId" column="TelephoneNumberTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DoNotPublishIndicator" column="DoNotPublishIndicator" type="bool" />
    <property name="OrderOfPriority" column="OrderOfPriority" type="int" />
    <property name="TextMessageCapabilityIndicator" column="TextMessageCapabilityIndicator" type="bool" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationAssociationAggregate.EdFi.StudentEducationOrganizationAssociationTribalAffiliation" table="StudentEducationOrganizationAssociationTribalAffiliation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TribalAffiliationDescriptorId" column="TribalAffiliationDescriptorId" type="int" />
      <key-many-to-one name="StudentEducationOrganizationAssociation">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationResponsibilityAssociationAggregate.EdFi.StudentEducationOrganizationResponsibilityAssociationReferenceData" table="StudentEducationOrganizationResponsibilityAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="ResponsibilityDescriptorId" column="ResponsibilityDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentEducationOrganizationResponsibilityAssociationAggregate.EdFi.StudentEducationOrganizationResponsibilityAssociation" table="StudentEducationOrganizationResponsibilityAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ResponsibilityDescriptorId" column="ResponsibilityDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentGradebookEntryAggregate.EdFi.StudentGradebookEntryReferenceData" table="StudentGradebookEntry" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="GradebookEntryIdentifier" column="GradebookEntryIdentifier" type="string"  length="60"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentGradebookEntryAggregate.EdFi.StudentGradebookEntry" table="StudentGradebookEntry" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="GradebookEntryIdentifier" column="GradebookEntryIdentifier" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AssignmentLateStatusDescriptorId" column="AssignmentLateStatusDescriptorId" type="int" />
    <property name="AssignmentPassed" column="AssignmentPassed" type="bool" />
    <property name="CompetencyLevelDescriptorId" column="CompetencyLevelDescriptorId" type="int" />
    <property name="DateCompleted" column="DateCompleted" type="date" />
    <property name="DateFulfilled" column="DateFulfilled" type="date" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="LetterGradeEarned" column="LetterGradeEarned" type="string" length="20" />
    <property name="NumericGradeEarned" column="NumericGradeEarned" type="decimal" />
    <property name="PointsEarned" column="PointsEarned" type="decimal" />
    <property name="SubmissionStatusDescriptorId" column="SubmissionStatusDescriptorId" type="int" />
    <property name="TimeFulfilled" column="TimeFulfilled" type="TimeAsTimeSpan" />

    <!-- Aggregate references -->
    <many-to-one name="GradebookEntryReferenceData" class="EdFi.Ods.Entities.NHibernate.GradebookEntryAggregate.EdFi.GradebookEntryReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="GradebookEntryIdentifier" />
      <column name="Namespace" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentHealthAggregate.EdFi.StudentHealthReferenceData" table="StudentHealth" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentHealthAggregate.EdFi.StudentHealth" table="StudentHealth" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AsOfDate" column="AsOfDate" type="date" not-null="true" />
    <property name="NonMedicalImmunizationExemptionDate" column="NonMedicalImmunizationExemptionDate" type="date" />
    <property name="NonMedicalImmunizationExemptionDescriptorId" column="NonMedicalImmunizationExemptionDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentHealthAdditionalImmunizations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentHealthAggregate.EdFi.StudentHealthAdditionalImmunization" />
    </set>

    <set name="StudentHealthRequiredImmunizations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentHealthAggregate.EdFi.StudentHealthRequiredImmunization" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentHealthAggregate.EdFi.StudentHealthAdditionalImmunization" table="StudentHealthAdditionalImmunization" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ImmunizationName" column="ImmunizationName" type="string" length="100" />
      <key-many-to-one name="StudentHealth">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentHealthAdditionalImmunizationDates" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ImmunizationName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentHealthAggregate.EdFi.StudentHealthAdditionalImmunizationDate" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentHealthAggregate.EdFi.StudentHealthAdditionalImmunizationDate" table="StudentHealthAdditionalImmunizationDate" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ImmunizationDate" column="ImmunizationDate" type="date" />
      <key-many-to-one name="StudentHealthAdditionalImmunization">
        <column name="ImmunizationName" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentHealthAggregate.EdFi.StudentHealthRequiredImmunization" table="StudentHealthRequiredImmunization" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ImmunizationTypeDescriptorId" column="ImmunizationTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentHealth">
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MedicalExemption" column="MedicalExemption" type="string" length="1024" />
    <property name="MedicalExemptionDate" column="MedicalExemptionDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentHealthRequiredImmunizationDates" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="ImmunizationTypeDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentHealthAggregate.EdFi.StudentHealthRequiredImmunizationDate" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentHealthAggregate.EdFi.StudentHealthRequiredImmunizationDate" table="StudentHealthRequiredImmunizationDate" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ImmunizationDate" column="ImmunizationDate" type="date" />
      <key-many-to-one name="StudentHealthRequiredImmunization">
        <column name="ImmunizationTypeDescriptorId" />
        <column name="EducationOrganizationId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentHomelessProgramAssociationAggregate.EdFi.StudentHomelessProgramAssociationHomelessProgramService" table="StudentHomelessProgramAssociationHomelessProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="HomelessProgramServiceDescriptorId" column="HomelessProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentHomelessProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentIdentityAggregate.EdFi.StudentIdentityReferenceData" table="StudentIdentity" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="StudentIdentificationSystemDescriptorId" column="StudentIdentificationSystemDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentIdentityAggregate.EdFi.StudentIdentity" table="StudentIdentity" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="StudentIdentificationSystemDescriptorId" column="StudentIdentificationSystemDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AssigningOrganizationIdentificationCode" column="AssigningOrganizationIdentificationCode" type="string" length="60" />
    <property name="IdentificationCode" column="IdentificationCode" type="string" length="120" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationReferenceData" table="StudentInterventionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string"  length="120"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociation" table="StudentInterventionAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string" length="120" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CohortEducationOrganizationId" column="CohortEducationOrganizationId" type="long" />
    <property name="CohortIdentifier" column="CohortIdentifier" type="string" length="36" />
    <property name="DiagnosticStatement" column="DiagnosticStatement" type="string" length="1024" />
    <property name="Dosage" column="Dosage" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="CohortReferenceData" class="EdFi.Ods.Entities.NHibernate.CohortAggregate.EdFi.CohortReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CohortIdentifier" />
      <column name="CohortEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="InterventionReferenceData" class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="InterventionIdentificationCode" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentInterventionAssociationInterventionEffectivenesses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationInterventionEffectiveness" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentInterventionAssociationAggregate.EdFi.StudentInterventionAssociationInterventionEffectiveness" table="StudentInterventionAssociationInterventionEffectiveness" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DiagnosisDescriptorId" column="DiagnosisDescriptorId" type="int" />
      <key-property name="GradeLevelDescriptorId" column="GradeLevelDescriptorId" type="int" />
      <key-property name="PopulationServedDescriptorId" column="PopulationServedDescriptorId" type="int" />
      <key-many-to-one name="StudentInterventionAssociation">
        <column name="EducationOrganizationId" />
        <column name="InterventionIdentificationCode" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="ImprovementIndex" column="ImprovementIndex" type="int" />
    <property name="InterventionEffectivenessRatingDescriptorId" column="InterventionEffectivenessRatingDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentInterventionAttendanceEventAggregate.EdFi.StudentInterventionAttendanceEventReferenceData" table="StudentInterventionAttendanceEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string"  length="120"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentInterventionAttendanceEventAggregate.EdFi.StudentInterventionAttendanceEvent" table="StudentInterventionAttendanceEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="InterventionIdentificationCode" column="InterventionIdentificationCode" type="string" length="120" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="InterventionDuration" column="InterventionDuration" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="InterventionReferenceData" class="EdFi.Ods.Entities.NHibernate.InterventionAggregate.EdFi.InterventionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="InterventionIdentificationCode" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment" table="StudentLanguageInstructionProgramAssociationEnglishLanguageProficiencyAssessment" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-many-to-one name="StudentLanguageInstructionProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MonitoredDescriptorId" column="MonitoredDescriptorId" type="int" />
    <property name="ParticipationDescriptorId" column="ParticipationDescriptorId" type="int" />
    <property name="ProficiencyDescriptorId" column="ProficiencyDescriptorId" type="int" />
    <property name="ProgressDescriptorId" column="ProgressDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentLanguageInstructionProgramAssociationAggregate.EdFi.StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService" table="StudentLanguageInstructionProgramAssociationLanguageInstructionProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LanguageInstructionProgramServiceDescriptorId" column="LanguageInstructionProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentLanguageInstructionProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentMigrantEducationProgramAssociationAggregate.EdFi.StudentMigrantEducationProgramAssociationMigrantEducationProgramService" table="StudentMigrantEducationProgramAssociationMigrantEducationProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MigrantEducationProgramServiceDescriptorId" column="MigrantEducationProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentMigrantEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentNeglectedOrDelinquentProgramAssociationAggregate.EdFi.StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService" table="StudentNeglectedOrDelinquentProgramAssociationNeglectedOrDelinquentProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="NeglectedOrDelinquentProgramServiceDescriptorId" column="NeglectedOrDelinquentProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentNeglectedOrDelinquentProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentPathAggregate.EdFi.StudentPathReferenceData" table="StudentPath" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="PathName" column="PathName" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentPathAggregate.EdFi.StudentPath" table="StudentPath" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="PathName" column="PathName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="PathReferenceData" class="EdFi.Ods.Entities.NHibernate.PathAggregate.EdFi.PathReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="PathName" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentPathPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="PathName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentPathAggregate.EdFi.StudentPathPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentPathAggregate.EdFi.StudentPathPeriod" table="StudentPathPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentPath">
        <column name="EducationOrganizationId" />
        <column name="PathName" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentPathMilestoneStatusAggregate.EdFi.StudentPathMilestoneStatusReferenceData" table="StudentPathMilestoneStatus" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="PathMilestoneName" column="PathMilestoneName" type="string"  length="60"  />
            <key-property name="PathMilestoneTypeDescriptorId" column="PathMilestoneTypeDescriptorId" type="int"  />
            <key-property name="PathName" column="PathName" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentPathMilestoneStatusAggregate.EdFi.StudentPathMilestoneStatus" table="StudentPathMilestoneStatus" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="PathMilestoneName" column="PathMilestoneName" type="string" length="60" />
      <key-property name="PathMilestoneTypeDescriptorId" column="PathMilestoneTypeDescriptorId" type="int" />
      <key-property name="PathName" column="PathName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CompletionIndicator" column="CompletionIndicator" type="bool" />
    <property name="PathPhaseName" column="PathPhaseName" type="string" length="60" />

    <!-- One-to-one child mappings -->
    <set name="StudentPathMilestoneStatusEvent" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="PathMilestoneName" />
        <column name="PathMilestoneTypeDescriptorId" />
        <column name="PathName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentPathMilestoneStatusAggregate.EdFi.StudentPathMilestoneStatusEvent" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="PathMilestoneReferenceData" class="EdFi.Ods.Entities.NHibernate.PathMilestoneAggregate.EdFi.PathMilestoneReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PathMilestoneName" />
      <column name="PathMilestoneTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="PathPhaseReferenceData" class="EdFi.Ods.Entities.NHibernate.PathPhaseAggregate.EdFi.PathPhaseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="PathName" />
      <column name="PathPhaseName" />
    </many-to-one>
    <many-to-one name="StudentPathReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentPathAggregate.EdFi.StudentPathReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="PathName" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentPathMilestoneStatusAggregate.EdFi.StudentPathMilestoneStatusEvent" table="StudentPathMilestoneStatusEvent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StudentPathMilestoneStatus">
        <column name="EducationOrganizationId" />
        <column name="PathMilestoneName" />
        <column name="PathMilestoneTypeDescriptorId" />
        <column name="PathName" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="Description" column="Description" type="string" length="1024" />
    <property name="PathMilestoneStatusDate" column="PathMilestoneStatusDate" type="date" not-null="true" />
    <property name="PathMilestoneStatusDescriptorId" column="PathMilestoneStatusDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentPathPhaseStatusAggregate.EdFi.StudentPathPhaseStatusReferenceData" table="StudentPathPhaseStatus" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="PathName" column="PathName" type="string"  length="60"  />
            <key-property name="PathPhaseName" column="PathPhaseName" type="string"  length="60"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentPathPhaseStatusAggregate.EdFi.StudentPathPhaseStatus" table="StudentPathPhaseStatus" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="PathName" column="PathName" type="string" length="60" />
      <key-property name="PathPhaseName" column="PathPhaseName" type="string" length="60" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CompletionIndicator" column="CompletionIndicator" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="PathPhaseReferenceData" class="EdFi.Ods.Entities.NHibernate.PathPhaseAggregate.EdFi.PathPhaseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="PathName" />
      <column name="PathPhaseName" />
    </many-to-one>
    <many-to-one name="StudentPathReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentPathAggregate.EdFi.StudentPathReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="PathName" />
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentPathPhaseStatusEvents" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="PathName" />
        <column name="PathPhaseName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentPathPhaseStatusAggregate.EdFi.StudentPathPhaseStatusEvent" />
    </set>

    <set name="StudentPathPhaseStatusPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EducationOrganizationId" />
        <column name="PathName" />
        <column name="PathPhaseName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentPathPhaseStatusAggregate.EdFi.StudentPathPhaseStatusPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentPathPhaseStatusAggregate.EdFi.StudentPathPhaseStatusEvent" table="StudentPathPhaseStatusEvent" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="PathPhaseStatusDate" column="PathPhaseStatusDate" type="date" />
      <key-property name="PathPhaseStatusDescriptorId" column="PathPhaseStatusDescriptorId" type="int" />
      <key-many-to-one name="StudentPathPhaseStatus">
        <column name="EducationOrganizationId" />
        <column name="PathName" />
        <column name="PathPhaseName" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentPathPhaseStatusAggregate.EdFi.StudentPathPhaseStatusPeriod" table="StudentPathPhaseStatusPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-many-to-one name="StudentPathPhaseStatus">
        <column name="EducationOrganizationId" />
        <column name="PathName" />
        <column name="PathPhaseName" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EndDate" column="EndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentProgramAssociationAggregate.EdFi.StudentProgramAssociationService" table="StudentProgramAssociationService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ServiceDescriptorId" column="ServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentProgramAttendanceEventAggregate.EdFi.StudentProgramAttendanceEventReferenceData" table="StudentProgramAttendanceEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentProgramAttendanceEventAggregate.EdFi.StudentProgramAttendanceEvent" table="StudentProgramAttendanceEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="ProgramAttendanceDuration" column="ProgramAttendanceDuration" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentProgramEvaluationAggregate.EdFi.StudentProgramEvaluationReferenceData" table="StudentProgramEvaluation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EvaluationDate" column="EvaluationDate" type="date"  />
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long"  />
            <key-property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int"  />
            <key-property name="ProgramEvaluationTitle" column="ProgramEvaluationTitle" type="string"  length="50"  />
            <key-property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentProgramEvaluationAggregate.EdFi.StudentProgramEvaluation" table="StudentProgramEvaluation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EvaluationDate" column="EvaluationDate" type="date" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramEvaluationPeriodDescriptorId" column="ProgramEvaluationPeriodDescriptorId" type="int" />
      <key-property name="ProgramEvaluationTitle" column="ProgramEvaluationTitle" type="string" length="50" />
      <key-property name="ProgramEvaluationTypeDescriptorId" column="ProgramEvaluationTypeDescriptorId" type="int" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    <property name="EvaluationDuration" column="EvaluationDuration" type="int" />
    <property name="StaffEvaluatorStaffUSI" column="StaffEvaluatorStaffUSI" type="int" />
    <property name="SummaryEvaluationComment" column="SummaryEvaluationComment" type="string" length="1024" />
    <property name="SummaryEvaluationNumericRating" column="SummaryEvaluationNumericRating" type="decimal" />
    <property name="SummaryEvaluationRatingLevelDescriptorId" column="SummaryEvaluationRatingLevelDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ProgramEvaluationReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramEvaluationAggregate.EdFi.ProgramEvaluationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramEvaluationPeriodDescriptorId" />
      <column name="ProgramEvaluationTitle" />
      <column name="ProgramEvaluationTypeDescriptorId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="StaffEvaluatorStaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffEvaluatorStaffUSI" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentProgramEvaluationExternalEvaluators" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EvaluationDate" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentProgramEvaluationAggregate.EdFi.StudentProgramEvaluationExternalEvaluator" />
    </set>

    <set name="StudentProgramEvaluationStudentEvaluationElements" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EvaluationDate" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentProgramEvaluationAggregate.EdFi.StudentProgramEvaluationStudentEvaluationElement" />
    </set>

    <set name="StudentProgramEvaluationStudentEvaluationObjectives" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EvaluationDate" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentProgramEvaluationAggregate.EdFi.StudentProgramEvaluationStudentEvaluationObjective" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentProgramEvaluationAggregate.EdFi.StudentProgramEvaluationExternalEvaluator" table="StudentProgramEvaluationExternalEvaluator" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ExternalEvaluator" column="ExternalEvaluator" type="string" length="150" />
      <key-many-to-one name="StudentProgramEvaluation">
        <column name="EvaluationDate" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentProgramEvaluationAggregate.EdFi.StudentProgramEvaluationStudentEvaluationElement" table="StudentProgramEvaluationStudentEvaluationElement" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramEvaluationElementTitle" column="ProgramEvaluationElementTitle" type="string" length="50" />
      <key-many-to-one name="StudentProgramEvaluation">
        <column name="EvaluationDate" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EvaluationElementNumericRating" column="EvaluationElementNumericRating" type="decimal" />
    <property name="EvaluationElementRatingLevelDescriptorId" column="EvaluationElementRatingLevelDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ProgramEvaluationElementReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramEvaluationElementAggregate.EdFi.ProgramEvaluationElementReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramEvaluationElementTitle" />
      <column name="ProgramEvaluationPeriodDescriptorId" />
      <column name="ProgramEvaluationTitle" />
      <column name="ProgramEvaluationTypeDescriptorId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentProgramEvaluationAggregate.EdFi.StudentProgramEvaluationStudentEvaluationObjective" table="StudentProgramEvaluationStudentEvaluationObjective" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ProgramEvaluationObjectiveTitle" column="ProgramEvaluationObjectiveTitle" type="string" length="50" />
      <key-many-to-one name="StudentProgramEvaluation">
        <column name="EvaluationDate" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramEvaluationPeriodDescriptorId" />
        <column name="ProgramEvaluationTitle" />
        <column name="ProgramEvaluationTypeDescriptorId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="EvaluationObjectiveNumericRating" column="EvaluationObjectiveNumericRating" type="decimal" />
    <property name="EvaluationObjectiveRatingLevelDescriptorId" column="EvaluationObjectiveRatingLevelDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ProgramEvaluationObjectiveReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramEvaluationObjectiveAggregate.EdFi.ProgramEvaluationObjectiveReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramEvaluationObjectiveTitle" />
      <column name="ProgramEvaluationPeriodDescriptorId" />
      <column name="ProgramEvaluationTitle" />
      <column name="ProgramEvaluationTypeDescriptorId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationReferenceData" table="StudentSchoolAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EntryDate" column="EntryDate" type="date"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociation" table="StudentSchoolAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EntryDate" column="EntryDate" type="date" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="CalendarCode" column="CalendarCode" type="string" length="120" />
    <property name="ClassOfSchoolYear" column="ClassOfSchoolYear" type="short" />
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    <property name="EmployedWhileEnrolled" column="EmployedWhileEnrolled" type="bool" />
    <property name="EnrollmentTypeDescriptorId" column="EnrollmentTypeDescriptorId" type="int" />
    <property name="EntryGradeLevelDescriptorId" column="EntryGradeLevelDescriptorId" type="int" not-null="true" />
    <property name="EntryGradeLevelReasonDescriptorId" column="EntryGradeLevelReasonDescriptorId" type="int" />
    <property name="EntryTypeDescriptorId" column="EntryTypeDescriptorId" type="int" />
    <property name="ExitWithdrawDate" column="ExitWithdrawDate" type="date" />
    <property name="ExitWithdrawTypeDescriptorId" column="ExitWithdrawTypeDescriptorId" type="int" />
    <property name="FullTimeEquivalency" column="FullTimeEquivalency" type="decimal" />
    <property name="GraduationPlanTypeDescriptorId" column="GraduationPlanTypeDescriptorId" type="int" />
    <property name="GraduationSchoolYear" column="GraduationSchoolYear" type="short" />
    <property name="NextYearGradeLevelDescriptorId" column="NextYearGradeLevelDescriptorId" type="int" />
    <property name="NextYearSchoolId" column="NextYearSchoolId" type="long" />
    <property name="PrimarySchool" column="PrimarySchool" type="bool" />
    <property name="RepeatGradeIndicator" column="RepeatGradeIndicator" type="bool" />
    <property name="ResidencyStatusDescriptorId" column="ResidencyStatusDescriptorId" type="int" />
    <property name="SchoolChoice" column="SchoolChoice" type="bool" />
    <property name="SchoolChoiceBasisDescriptorId" column="SchoolChoiceBasisDescriptorId" type="int" />
    <property name="SchoolChoiceTransfer" column="SchoolChoiceTransfer" type="bool" />
    <property name="SchoolYear" column="SchoolYear" type="short" />
    <property name="TermCompletionIndicator" column="TermCompletionIndicator" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="CalendarReferenceData" class="EdFi.Ods.Entities.NHibernate.CalendarAggregate.EdFi.CalendarReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CalendarCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="ClassOfSchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ClassOfSchoolYear" />
    </many-to-one>
    <many-to-one name="GraduationPlanReferenceData" class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="GraduationPlanTypeDescriptorId" />
      <column name="GraduationSchoolYear" />
    </many-to-one>
    <many-to-one name="NextYearSchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="NextYearSchoolId" />
    </many-to-one>
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentSchoolAssociationAlternativeGraduationPlans" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationAlternativeGraduationPlan" />
    </set>

    <set name="StudentSchoolAssociationEducationPlans" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationEducationPlan" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationAlternativeGraduationPlan" table="StudentSchoolAssociationAlternativeGraduationPlan" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AlternativeEducationOrganizationId" column="AlternativeEducationOrganizationId" type="long" />
      <key-property name="AlternativeGraduationPlanTypeDescriptorId" column="AlternativeGraduationPlanTypeDescriptorId" type="int" />
      <key-property name="AlternativeGraduationSchoolYear" column="AlternativeGraduationSchoolYear" type="short" />
      <key-many-to-one name="StudentSchoolAssociation">
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="AlternativeGraduationPlanReferenceData" class="EdFi.Ods.Entities.NHibernate.GraduationPlanAggregate.EdFi.GraduationPlanReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="AlternativeEducationOrganizationId" />
      <column name="AlternativeGraduationPlanTypeDescriptorId" />
      <column name="AlternativeGraduationSchoolYear" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAssociationAggregate.EdFi.StudentSchoolAssociationEducationPlan" table="StudentSchoolAssociationEducationPlan" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationPlanDescriptorId" column="EducationPlanDescriptorId" type="int" />
      <key-many-to-one name="StudentSchoolAssociation">
        <column name="EntryDate" />
        <column name="SchoolId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAttendanceEventAggregate.EdFi.StudentSchoolAttendanceEventReferenceData" table="StudentSchoolAttendanceEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolAttendanceEventAggregate.EdFi.StudentSchoolAttendanceEvent" table="StudentSchoolAttendanceEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ArrivalTime" column="ArrivalTime" type="TimeAsTimeSpan" />
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="DepartureTime" column="DepartureTime" type="TimeAsTimeSpan" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="SchoolAttendanceDuration" column="SchoolAttendanceDuration" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SchoolReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
    </many-to-one>
    <many-to-one name="SessionReferenceData" class="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSchoolFoodServiceProgramAssociationAggregate.EdFi.StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService" table="StudentSchoolFoodServiceProgramAssociationSchoolFoodServiceProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SchoolFoodServiceProgramServiceDescriptorId" column="SchoolFoodServiceProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentSchoolFoodServiceProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationReferenceData" table="StudentSectionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="BeginDate" column="BeginDate" type="date"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociation" table="StudentSectionAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="BeginDate" column="BeginDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="AttemptStatusDescriptorId" column="AttemptStatusDescriptorId" type="int" />
    <property name="DualCreditEducationOrganizationId" column="DualCreditEducationOrganizationId" type="long" />
    <property name="DualCreditIndicator" column="DualCreditIndicator" type="bool" />
    <property name="DualCreditInstitutionDescriptorId" column="DualCreditInstitutionDescriptorId" type="int" />
    <property name="DualCreditTypeDescriptorId" column="DualCreditTypeDescriptorId" type="int" />
    <property name="DualHighSchoolCreditIndicator" column="DualHighSchoolCreditIndicator" type="bool" />
    <property name="EndDate" column="EndDate" type="date" />
    <property name="HomeroomIndicator" column="HomeroomIndicator" type="bool" />
    <property name="RepeatIdentifierDescriptorId" column="RepeatIdentifierDescriptorId" type="int" />
    <property name="TeacherStudentDataLinkExclusion" column="TeacherStudentDataLinkExclusion" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="DualCreditEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="DualCreditEducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentSectionAssociationPrograms" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="BeginDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationProgram" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSectionAssociationAggregate.EdFi.StudentSectionAssociationProgram" table="StudentSectionAssociationProgram" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-many-to-one name="StudentSectionAssociation">
        <column name="BeginDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEventReferenceData" table="StudentSectionAttendanceEvent" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int"  />
            <key-property name="EventDate" column="EventDate" type="date"  />
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEvent" table="StudentSectionAttendanceEvent" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="AttendanceEventCategoryDescriptorId" column="AttendanceEventCategoryDescriptorId" type="int" />
      <key-property name="EventDate" column="EventDate" type="date" />
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ArrivalTime" column="ArrivalTime" type="TimeAsTimeSpan" />
    <property name="AttendanceEventReason" column="AttendanceEventReason" type="string" length="255" />
    <property name="DepartureTime" column="DepartureTime" type="TimeAsTimeSpan" />
    <property name="EducationalEnvironmentDescriptorId" column="EducationalEnvironmentDescriptorId" type="int" />
    <property name="EventDuration" column="EventDuration" type="decimal" />
    <property name="SectionAttendanceDuration" column="SectionAttendanceDuration" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentSectionAttendanceEventClassPeriods" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="AttendanceEventCategoryDescriptorId" />
        <column name="EventDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEventClassPeriod" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSectionAttendanceEventAggregate.EdFi.StudentSectionAttendanceEventClassPeriod" table="StudentSectionAttendanceEventClassPeriod" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ClassPeriodName" column="ClassPeriodName" type="string" length="60" />
      <key-many-to-one name="StudentSectionAttendanceEvent">
        <column name="AttendanceEventCategoryDescriptorId" />
        <column name="EventDate" />
        <column name="LocalCourseCode" />
        <column name="SchoolId" />
        <column name="SchoolYear" />
        <column name="SectionIdentifier" />
        <column name="SessionName" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ClassPeriodReferenceData" class="EdFi.Ods.Entities.NHibernate.ClassPeriodAggregate.EdFi.ClassPeriodReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ClassPeriodName" />
      <column name="SchoolId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisability" table="StudentSpecialEducationProgramAssociationDisability" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDescriptorId" column="DisabilityDescriptorId" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="DisabilityDeterminationSourceTypeDescriptorId" column="DisabilityDeterminationSourceTypeDescriptorId" type="int" />
    <property name="DisabilityDiagnosis" column="DisabilityDiagnosis" type="string" length="80" />
    <property name="OrderOfDisability" column="OrderOfDisability" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentSpecialEducationProgramAssociationDisabilityDesignations" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="DisabilityDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityDesignation" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationDisabilityDesignation" table="StudentSpecialEducationProgramAssociationDisabilityDesignation" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="DisabilityDesignationDescriptorId" column="DisabilityDesignationDescriptorId" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociationDisability">
        <column name="DisabilityDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationServiceProvider" table="StudentSpecialEducationProgramAssociationServiceProvider" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryProvider" column="PrimaryProvider" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramService" table="StudentSpecialEducationProgramAssociationSpecialEducationProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SpecialEducationProgramServiceDescriptorId" column="SpecialEducationProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProviders" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="SpecialEducationProgramServiceDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramAssociationAggregate.EdFi.StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider" table="StudentSpecialEducationProgramAssociationSpecialEducationProgramServiceProvider" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-many-to-one name="StudentSpecialEducationProgramAssociationSpecialEducationProgramService">
        <column name="SpecialEducationProgramServiceDescriptorId" />
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryProvider" column="PrimaryProvider" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramEligibilityAssociationAggregate.EdFi.StudentSpecialEducationProgramEligibilityAssociationReferenceData" table="StudentSpecialEducationProgramEligibilityAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="ConsentToEvaluationReceivedDate" column="ConsentToEvaluationReceivedDate" type="date"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentSpecialEducationProgramEligibilityAssociationAggregate.EdFi.StudentSpecialEducationProgramEligibilityAssociation" table="StudentSpecialEducationProgramEligibilityAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="ConsentToEvaluationReceivedDate" column="ConsentToEvaluationReceivedDate" type="date" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="ProgramEducationOrganizationId" column="ProgramEducationOrganizationId" type="long" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ConsentToEvaluationDate" column="ConsentToEvaluationDate" type="date" />
    <property name="EligibilityConferenceDate" column="EligibilityConferenceDate" type="date" />
    <property name="EligibilityDelayReasonDescriptorId" column="EligibilityDelayReasonDescriptorId" type="int" />
    <property name="EligibilityDeterminationDate" column="EligibilityDeterminationDate" type="date" />
    <property name="EligibilityEvaluationDate" column="EligibilityEvaluationDate" type="date" />
    <property name="EligibilityEvaluationTypeDescriptorId" column="EligibilityEvaluationTypeDescriptorId" type="int" />
    <property name="EvaluationCompleteIndicator" column="EvaluationCompleteIndicator" type="bool" />
    <property name="EvaluationDelayDays" column="EvaluationDelayDays" type="int" />
    <property name="EvaluationDelayReasonDescriptorId" column="EvaluationDelayReasonDescriptorId" type="int" />
    <property name="EvaluationLateReason" column="EvaluationLateReason" type="string" length="255" />
    <property name="IDEAIndicator" column="IDEAIndicator" type="bool" />
    <property name="IDEAPartDescriptorId" column="IDEAPartDescriptorId" type="int" not-null="true" />
    <property name="OriginalECIServicesDate" column="OriginalECIServicesDate" type="date" />
    <property name="TransitionConferenceDate" column="TransitionConferenceDate" type="date" />
    <property name="TransitionNotificationDate" column="TransitionNotificationDate" type="date" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ProgramEducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentTitleIPartAProgramAssociationAggregate.EdFi.StudentTitleIPartAProgramAssociationTitleIPartAProgramService" table="StudentTitleIPartAProgramAssociationTitleIPartAProgramService" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TitleIPartAProgramServiceDescriptorId" column="TitleIPartAProgramServiceDescriptorId" type="int" />
      <key-many-to-one name="StudentTitleIPartAProgramAssociation">
        <column name="BeginDate" />
        <column name="EducationOrganizationId" />
        <column name="ProgramEducationOrganizationId" />
        <column name="ProgramName" />
        <column name="ProgramTypeDescriptorId" />
        <column name="StudentUSI" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="PrimaryIndicator" column="PrimaryIndicator" type="bool" />
    <property name="ServiceBeginDate" column="ServiceBeginDate" type="date" />
    <property name="ServiceEndDate" column="ServiceEndDate" type="date" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.StudentTransportationAggregate.EdFi.StudentTransportationReferenceData" table="StudentTransportation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="StudentUSI" column="StudentUSI" type="int"  />
            <key-property name="TransportationEducationOrganizationId" column="TransportationEducationOrganizationId" type="long"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentTransportationAggregate.EdFi.StudentTransportation" table="StudentTransportation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="StudentUSI" column="StudentUSI" type="int" />
      <key-property name="TransportationEducationOrganizationId" column="TransportationEducationOrganizationId" type="long" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="SpecialAccomodationRequirements" column="SpecialAccomodationRequirements" type="string" length="1024" />
    <property name="TransportationPublicExpenseEligibilityTypeDescriptorId" column="TransportationPublicExpenseEligibilityTypeDescriptorId" type="int" />
    <property name="TransportationTypeDescriptorId" column="TransportationTypeDescriptorId" type="int" />

    <!-- One-to-one child mappings -->
    <set name="StudentTransportationStudentBusDetails" access="EdFi.Ods.Common.Infrastructure.Accessors.EmbeddedObjectPropertyAccessor, EdFi.Ods.Common" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StudentUSI" />
        <column name="TransportationEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentTransportationAggregate.EdFi.StudentTransportationStudentBusDetails" />
    </set>

    <!-- Aggregate references -->
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>
    <many-to-one name="TransportationEducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="TransportationEducationOrganizationId" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentTransportationAggregate.EdFi.StudentTransportationStudentBusDetails" table="StudentTransportationStudentBusDetails" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StudentTransportation">
        <column name="StudentUSI" />
        <column name="TransportationEducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="BusNumber" column="BusNumber" type="string" length="36" not-null="true" />
    <property name="BusRouteDescriptorId" column="BusRouteDescriptorId" type="int" not-null="true" />
    <property name="Mileage" column="Mileage" type="decimal" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
    <set name="StudentTransportationStudentBusDetailsTravelDayofWeeks" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StudentUSI" />
        <column name="TransportationEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentTransportationAggregate.EdFi.StudentTransportationStudentBusDetailsTravelDayofWeek" />
    </set>

    <set name="StudentTransportationStudentBusDetailsTravelDirections" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="StudentUSI" />
        <column name="TransportationEducationOrganizationId" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.StudentTransportationAggregate.EdFi.StudentTransportationStudentBusDetailsTravelDirection" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentTransportationAggregate.EdFi.StudentTransportationStudentBusDetailsTravelDayofWeek" table="StudentTransportationStudentBusDetailsTravelDayofWeek" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TravelDayofWeekDescriptorId" column="TravelDayofWeekDescriptorId" type="int" />
      <key-many-to-one name="StudentTransportationStudentBusDetails">
        <column name="StudentUSI" />
        <column name="TransportationEducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentTransportationAggregate.EdFi.StudentTransportationStudentBusDetailsTravelDirection" table="StudentTransportationStudentBusDetailsTravelDirection" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="TravelDirectionDescriptorId" column="TravelDirectionDescriptorId" type="int" />
      <key-many-to-one name="StudentTransportationStudentBusDetails">
        <column name="StudentUSI" />
        <column name="TransportationEducationOrganizationId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" table="Survey" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.Survey" table="Survey" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    <property name="NumberAdministered" column="NumberAdministered" type="int" />
    <property name="SchoolId" column="SchoolId" type="long" />
    <property name="SchoolYear" column="SchoolYear" type="short" not-null="true" />
    <property name="SessionName" column="SessionName" type="string" length="120" />
    <property name="SurveyCategoryDescriptorId" column="SurveyCategoryDescriptorId" type="int" />
    <property name="SurveyTitle" column="SurveyTitle" type="string" length="255" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SchoolYearTypeReferenceData" class="EdFi.Ods.Entities.NHibernate.SchoolYearTypeAggregate.EdFi.SchoolYearTypeReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolYear" />
    </many-to-one>
    <many-to-one name="SessionReferenceData" class="EdFi.Ods.Entities.NHibernate.SessionAggregate.EdFi.SessionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SessionName" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyCourseAssociationAggregate.EdFi.SurveyCourseAssociationReferenceData" table="SurveyCourseAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="CourseCode" column="CourseCode" type="string"  length="120"  />
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyCourseAssociationAggregate.EdFi.SurveyCourseAssociation" table="SurveyCourseAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="CourseCode" column="CourseCode" type="string" length="120" />
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="CourseReferenceData" class="EdFi.Ods.Entities.NHibernate.CourseAggregate.EdFi.CourseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="CourseCode" />
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyProgramAssociationAggregate.EdFi.SurveyProgramAssociationReferenceData" table="SurveyProgramAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="ProgramName" column="ProgramName" type="string"  length="60"  />
            <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyProgramAssociationAggregate.EdFi.SurveyProgramAssociation" table="SurveyProgramAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="ProgramName" column="ProgramName" type="string" length="60" />
      <key-property name="ProgramTypeDescriptorId" column="ProgramTypeDescriptorId" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="ProgramReferenceData" class="EdFi.Ods.Entities.NHibernate.ProgramAggregate.EdFi.ProgramReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="ProgramName" />
      <column name="ProgramTypeDescriptorId" />
    </many-to-one>
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionReferenceData" table="SurveyQuestion" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="QuestionCode" column="QuestionCode" type="string"  length="120"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestion" table="SurveyQuestion" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="QuestionCode" column="QuestionCode" type="string" length="120" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="QuestionFormDescriptorId" column="QuestionFormDescriptorId" type="int" not-null="true" />
    <property name="QuestionText" column="QuestionText" type="string" length="1024" not-null="true" />
    <property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />

    <!-- Aggregate references -->
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>
    <many-to-one name="SurveySectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveySectionAggregate.EdFi.SurveySectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="SurveyQuestionMatrices" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionMatrix" />
    </set>

    <set name="SurveyQuestionResponseChoices" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionResponseChoice" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionMatrix" table="SurveyQuestionMatrix" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MatrixElement" column="MatrixElement" type="string" length="255" />
      <key-many-to-one name="SurveyQuestion">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxRawScore" column="MaxRawScore" type="int" />
    <property name="MinRawScore" column="MinRawScore" type="int" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionResponseChoice" table="SurveyQuestionResponseChoice" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SortOrder" column="SortOrder" type="int" />
      <key-many-to-one name="SurveyQuestion">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="NumericValue" column="NumericValue" type="int" />
    <property name="TextValue" column="TextValue" type="string" length="255" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseReferenceData" table="SurveyQuestionResponse" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="QuestionCode" column="QuestionCode" type="string"  length="120"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponse" table="SurveyQuestionResponse" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="QuestionCode" column="QuestionCode" type="string" length="120" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="Comment" column="Comment" type="string" length="1024" />
    <property name="NoResponse" column="NoResponse" type="bool" />

    <!-- Aggregate references -->
    <many-to-one name="SurveyQuestionReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyQuestionAggregate.EdFi.SurveyQuestionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="QuestionCode" />
      <column name="SurveyIdentifier" />
    </many-to-one>
    <many-to-one name="SurveyResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="SurveyQuestionResponseSurveyQuestionMatrixElementResponses" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseSurveyQuestionMatrixElementResponse" />
    </set>

    <set name="SurveyQuestionResponseValues" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseValue" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseSurveyQuestionMatrixElementResponse" table="SurveyQuestionResponseSurveyQuestionMatrixElementResponse" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="MatrixElement" column="MatrixElement" type="string" length="255" />
      <key-many-to-one name="SurveyQuestionResponse">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="MaxNumericResponse" column="MaxNumericResponse" type="int" />
    <property name="MinNumericResponse" column="MinNumericResponse" type="int" />
    <property name="NoResponse" column="NoResponse" type="bool" />
    <property name="NumericResponse" column="NumericResponse" type="int" />
    <property name="TextResponse" column="TextResponse" type="string" length="2048" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyQuestionResponseAggregate.EdFi.SurveyQuestionResponseValue" table="SurveyQuestionResponseValue" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SurveyQuestionResponseValueIdentifier" column="SurveyQuestionResponseValueIdentifier" type="int" />
      <key-many-to-one name="SurveyQuestionResponse">
        <column name="Namespace" />
        <column name="QuestionCode" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="NumericResponse" column="NumericResponse" type="int" />
    <property name="TextResponse" column="TextResponse" type="string" length="2048" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" table="SurveyResponse" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponse" table="SurveyResponse" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ContactUSI" column="ContactUSI" type="int" />
    <property name="ElectronicMailAddress" column="ElectronicMailAddress" type="string" length="128" />
    <property name="FullName" column="FullName" type="string" length="80" />
    <property name="Location" column="Location" type="string" length="75" />
    <property name="PersonId" column="PersonId" type="string" length="32" />
    <property name="ResponseDate" column="ResponseDate" type="date" not-null="true" />
    <property name="ResponseTime" column="ResponseTime" type="int" />
    <property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
    <property name="StaffUSI" column="StaffUSI" type="int" />
    <property name="StudentUSI" column="StudentUSI" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="ContactReferenceData" class="EdFi.Ods.Entities.NHibernate.ContactAggregate.EdFi.ContactReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="ContactUSI" />
    </many-to-one>
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="StudentReferenceData" class="EdFi.Ods.Entities.NHibernate.StudentAggregate.EdFi.StudentReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StudentUSI" />
    </many-to-one>
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
    <set name="SurveyResponseSurveyLevels" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key>
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key>
      <one-to-many class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseSurveyLevel" />
    </set>

</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseSurveyLevel" table="SurveyResponseSurveyLevel" lazy="false">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="SurveyLevelDescriptorId" column="SurveyLevelDescriptorId" type="int" />
      <key-many-to-one name="SurveyResponse">
        <column name="Namespace" />
        <column name="SurveyIdentifier" />
        <column name="SurveyResponseIdentifier" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveyResponseEducationOrganizationTargetAssociationReferenceData" table="SurveyResponseEducationOrganizationTargetAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveyResponseEducationOrganizationTargetAssociation" table="SurveyResponseEducationOrganizationTargetAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SurveyResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyResponsePersonTargetAssociationAggregate.EdFi.SurveyResponsePersonTargetAssociationReferenceData" table="SurveyResponsePersonTargetAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyResponsePersonTargetAssociationAggregate.EdFi.SurveyResponsePersonTargetAssociation" table="SurveyResponsePersonTargetAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>
    <many-to-one name="SurveyResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseStaffTargetAssociationAggregate.EdFi.SurveyResponseStaffTargetAssociationReferenceData" table="SurveyResponseStaffTargetAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveyResponseStaffTargetAssociationAggregate.EdFi.SurveyResponseStaffTargetAssociation" table="SurveyResponseStaffTargetAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="SurveyResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionAggregate.EdFi.SurveySectionReferenceData" table="SurveySection" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionAggregate.EdFi.SurveySection" table="SurveySection" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
    <property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string" length="255" />
    <property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string" length="50" />
    <property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
    <property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
    <property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
    <property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
    <property name="SchoolYear" column="SchoolYear" type="short" />
    <property name="TermDescriptorId" column="TermDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationElementReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationElementAggregate.EdFi.EvaluationElementReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationElementTitle" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="SchoolYear" />
      <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionAggregateResponseAggregate.EdFi.SurveySectionAggregateResponseReferenceData" table="SurveySectionAggregateResponse" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="EvaluationDate" column="EvaluationDate" type="UtcDateTime"  />
            <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string"  length="255"  />
            <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string"  length="50"  />
            <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int"  />
            <key-property name="EvaluationTitle" column="EvaluationTitle" type="string"  length="50"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string"  length="50"  />
            <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string"  length="255"  />
            <key-property name="TermDescriptorId" column="TermDescriptorId" type="int"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionAggregateResponseAggregate.EdFi.SurveySectionAggregateResponse" table="SurveySectionAggregateResponse" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="EvaluationDate" column="EvaluationDate" type="UtcDateTime" />
      <key-property name="EvaluationElementTitle" column="EvaluationElementTitle" type="string" length="255" />
      <key-property name="EvaluationObjectiveTitle" column="EvaluationObjectiveTitle" type="string" length="50" />
      <key-property name="EvaluationPeriodDescriptorId" column="EvaluationPeriodDescriptorId" type="int" />
      <key-property name="EvaluationTitle" column="EvaluationTitle" type="string" length="50" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="PerformanceEvaluationTitle" column="PerformanceEvaluationTitle" type="string" length="50" />
      <key-property name="PerformanceEvaluationTypeDescriptorId" column="PerformanceEvaluationTypeDescriptorId" type="int" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
      <key-property name="TermDescriptorId" column="TermDescriptorId" type="int" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="ScoreValue" column="ScoreValue" type="decimal" not-null="true" />

    <!-- Aggregate references -->
    <many-to-one name="EvaluationElementRatingReferenceData" class="EdFi.Ods.Entities.NHibernate.EvaluationElementRatingAggregate.EdFi.EvaluationElementRatingReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
      <column name="EvaluationDate" />
      <column name="EvaluationElementTitle" />
      <column name="EvaluationObjectiveTitle" />
      <column name="EvaluationPeriodDescriptorId" />
      <column name="EvaluationTitle" />
      <column name="PerformanceEvaluationTitle" />
      <column name="PerformanceEvaluationTypeDescriptorId" />
      <column name="PersonId" />
      <column name="SchoolYear" />
      <column name="SourceSystemDescriptorId" />
      <column name="TermDescriptorId" />
    </many-to-one>
    <many-to-one name="SurveySectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveySectionAggregate.EdFi.SurveySectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionAssociationAggregate.EdFi.SurveySectionAssociationReferenceData" table="SurveySectionAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="LocalCourseCode" column="LocalCourseCode" type="string"  length="60"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SchoolId" column="SchoolId" type="long"  />
            <key-property name="SchoolYear" column="SchoolYear" type="short"  />
            <key-property name="SectionIdentifier" column="SectionIdentifier" type="string"  length="255"  />
            <key-property name="SessionName" column="SessionName" type="string"  length="120"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionAssociationAggregate.EdFi.SurveySectionAssociation" table="SurveySectionAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="LocalCourseCode" column="LocalCourseCode" type="string" length="60" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SchoolId" column="SchoolId" type="long" />
      <key-property name="SchoolYear" column="SchoolYear" type="short" />
      <key-property name="SectionIdentifier" column="SectionIdentifier" type="string" length="255" />
      <key-property name="SessionName" column="SessionName" type="string" length="120" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="SectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SectionAggregate.EdFi.SectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="LocalCourseCode" />
      <column name="SchoolId" />
      <column name="SchoolYear" />
      <column name="SectionIdentifier" />
      <column name="SessionName" />
    </many-to-one>
    <many-to-one name="SurveyReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyAggregate.EdFi.SurveyReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseAggregate.EdFi.SurveySectionResponseReferenceData" table="SurveySectionResponse" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="120"  />
            <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseAggregate.EdFi.SurveySectionResponse" table="SurveySectionResponse" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="120" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->
    <property name="SectionRating" column="SectionRating" type="decimal" />

    <!-- Aggregate references -->
    <many-to-one name="SurveyResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveyResponseAggregate.EdFi.SurveyResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
    </many-to-one>
    <many-to-one name="SurveySectionReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveySectionAggregate.EdFi.SurveySectionReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveySectionResponseEducationOrganizationTargetAssociationReferenceData" table="SurveySectionResponseEducationOrganizationTargetAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long"  />
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="120"  />
            <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseEducationOrganizationTargetAssociationAggregate.EdFi.SurveySectionResponseEducationOrganizationTargetAssociation" table="SurveySectionResponseEducationOrganizationTargetAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="EducationOrganizationId" column="EducationOrganizationId" type="long" />
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="120" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="EducationOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.EducationOrganizationAggregate.EdFi.EducationOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="EducationOrganizationId" />
    </many-to-one>
    <many-to-one name="SurveySectionResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveySectionResponseAggregate.EdFi.SurveySectionResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
      <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponsePersonTargetAssociationAggregate.EdFi.SurveySectionResponsePersonTargetAssociationReferenceData" table="SurveySectionResponsePersonTargetAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="PersonId" column="PersonId" type="string"  length="32"  />
            <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="120"  />
            <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponsePersonTargetAssociationAggregate.EdFi.SurveySectionResponsePersonTargetAssociation" table="SurveySectionResponsePersonTargetAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="PersonId" column="PersonId" type="string" length="32" />
      <key-property name="SourceSystemDescriptorId" column="SourceSystemDescriptorId" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="120" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="PersonReferenceData" class="EdFi.Ods.Entities.NHibernate.PersonAggregate.EdFi.PersonReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="PersonId" />
      <column name="SourceSystemDescriptorId" />
    </many-to-one>
    <many-to-one name="SurveySectionResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveySectionResponseAggregate.EdFi.SurveySectionResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
      <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseStaffTargetAssociationAggregate.EdFi.SurveySectionResponseStaffTargetAssociationReferenceData" table="SurveySectionResponseStaffTargetAssociation" lazy="true" >
        <!-- Composite primary key -->
        <composite-id>
            <key-property name="Namespace" column="Namespace" type="string"  length="255"  />
            <key-property name="StaffUSI" column="StaffUSI" type="int"  />
            <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string"  length="120"  />
            <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string"  length="120"  />
            <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string"  length="255"  />
        </composite-id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.SurveySectionResponseStaffTargetAssociationAggregate.EdFi.SurveySectionResponseStaffTargetAssociation" table="SurveySectionResponseStaffTargetAssociation" lazy="false" discriminator-value="null">
    <!-- Composite primary key -->
    <composite-id>
      <key-property name="Namespace" column="Namespace" type="string" length="255" />
      <key-property name="StaffUSI" column="StaffUSI" type="int" />
      <key-property name="SurveyIdentifier" column="SurveyIdentifier" type="string" length="120" />
      <key-property name="SurveyResponseIdentifier" column="SurveyResponseIdentifier" type="string" length="120" />
      <key-property name="SurveySectionTitle" column="SurveySectionTitle" type="string" length="255" />
    </composite-id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />
    <property name="AggregateId" column="AggregateId" type="int" not-null="true" insert="false" update="false" />

    <!-- Properties -->

    <!-- Aggregate references -->
    <many-to-one name="StaffReferenceData" class="EdFi.Ods.Entities.NHibernate.StaffAggregate.EdFi.StaffReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="StaffUSI" />
    </many-to-one>
    <many-to-one name="SurveySectionResponseReferenceData" class="EdFi.Ods.Entities.NHibernate.SurveySectionResponseAggregate.EdFi.SurveySectionResponseReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="Namespace" />
      <column name="SurveyIdentifier" />
      <column name="SurveyResponseIdentifier" />
      <column name="SurveySectionTitle" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>


</hibernate-mapping>

