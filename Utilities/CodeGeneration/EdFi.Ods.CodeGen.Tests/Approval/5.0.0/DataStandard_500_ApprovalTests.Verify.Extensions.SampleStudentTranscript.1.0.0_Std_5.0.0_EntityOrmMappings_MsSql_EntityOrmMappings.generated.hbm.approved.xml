<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" assembly="EdFi.Ods.Extensions.SampleStudentTranscript" namespace="EdFi.Ods.Entities.NHibernate" default-access="property" auto-import="false">

    <!-- Aggregate reference data class mapping -->
    <class name="EdFi.Ods.Entities.NHibernate.PostSecondaryOrganizationAggregate.SampleStudentTranscript.PostSecondaryOrganizationReferenceData" table="PostSecondaryOrganization" lazy="true"  schema="samplestudenttranscript" >
        <id name="NameOfInstitution" column="NameOfInstitution" type="string"  length="75" >
            <generator class="assigned" />
        </id>

        <property name="Id" column="Id" type="guid" insert="false" update="false" />

        <!-- Readonly property to surface the discriminator value -->
        <property name="Discriminator" column="Discriminator" type="string" insert="false" update="false" />
    </class>

  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.PostSecondaryOrganizationAggregate.SampleStudentTranscript.PostSecondaryOrganization" table="PostSecondaryOrganization" lazy="false" schema="samplestudenttranscript" discriminator-value="NULL">
    <id name="NameOfInstitution" column="NameOfInstitution" type="string" length="75">
      <generator class="assigned" />
    </id>

    <!-- Discriminator -->
    <discriminator column="Discriminator" type="string" />

    <!-- Optimistic locking for aggregate root -->
    <version name="LastModifiedDate" column="LastModifiedDate" type="UtcDateTime" />

    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />

    <!-- Unique Guid-based identifier for aggregate root -->
    <property name="Id" column="Id" type="guid" not-null="true" />

    <!-- Properties -->
    <property name="AcceptanceIndicator" column="AcceptanceIndicator" type="bool" not-null="true" />
    <property name="InstitutionControlDescriptorId" column="InstitutionControlDescriptorId" type="int" not-null="true" />
    <property name="InstitutionLevelDescriptorId" column="InstitutionLevelDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.SampleStudentTranscript.StudentAcademicRecordExtension" table="StudentAcademicRecordExtension" lazy="false" schema="samplestudenttranscript">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StudentAcademicRecord">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="NameOfInstitution" column="NameOfInstitution" type="string" length="75" />
    <property name="SubmissionCertificationDescriptorId" column="SubmissionCertificationDescriptorId" type="int" />

    <!-- Aggregate references -->
    <many-to-one name="PostSecondaryOrganizationReferenceData" class="EdFi.Ods.Entities.NHibernate.PostSecondaryOrganizationAggregate.SampleStudentTranscript.PostSecondaryOrganizationReferenceData" fetch="join" insert="false" update="false" cascade="none" lazy="proxy">
      <column name="NameOfInstitution" />
    </many-to-one>

    <!-- Back references -->

    <!-- Collections -->
</class>



  <!-- Class definition -->
  <class name="EdFi.Ods.Entities.NHibernate.StudentAcademicRecordAggregate.SampleStudentTranscript.StudentAcademicRecordClassRankingExtension" table="StudentAcademicRecordClassRankingExtension" lazy="false" schema="samplestudenttranscript">
    <!-- Composite primary key -->
    <composite-id>
      <key-many-to-one name="StudentAcademicRecordClassRanking">
        <column name="EducationOrganizationId" />
        <column name="SchoolYear" />
        <column name="StudentUSI" />
        <column name="TermDescriptorId" />
      </key-many-to-one>
    </composite-id>
    <!-- Transient state detection -->
    <property name="CreateDate" column="CreateDate" type="UtcDateTime" not-null="true" />


    <!-- Properties -->
    <property name="SpecialEducationGraduationStatusDescriptorId" column="SpecialEducationGraduationStatusDescriptorId" type="int" not-null="true" />

    <!-- Aggregate references -->

    <!-- Back references -->

    <!-- Collections -->
</class>


</hibernate-mapping>

